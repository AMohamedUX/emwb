{"ast":null,"code":"import React, { useState, useCallback } from 'react';\nimport { isSection } from '../../utilities/options.js';\nimport { arraysAreEqual } from '../../utilities/arrays.js';\nimport { useDeepEffect } from '../../utilities/use-deep-effect.js';\nimport styles from './OptionList.scss.js';\nimport { Option } from './components/Option/Option.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\n\nfunction OptionList(_ref) {\n  let {\n    options,\n    sections,\n    title,\n    selected,\n    allowMultiple,\n    role,\n    optionRole,\n    verticalAlign,\n    onChange,\n    id: idProp\n  } = _ref;\n  const [normalizedOptions, setNormalizedOptions] = useState(createNormalizedOptions(options, sections, title));\n  const id = useUniqueId('OptionList', idProp);\n  useDeepEffect(() => {\n    setNormalizedOptions(createNormalizedOptions(options || [], sections || [], title));\n  }, [options, sections, title], optionArraysAreEqual);\n  const handleClick = useCallback((sectionIndex, optionIndex) => {\n    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;\n    const foundIndex = selected.indexOf(selectedValue);\n\n    if (allowMultiple) {\n      const newSelection = foundIndex === -1 ? [selectedValue, ...selected] : [...selected.slice(0, foundIndex), ...selected.slice(foundIndex + 1, selected.length)];\n      onChange(newSelection);\n      return;\n    }\n\n    onChange([selectedValue]);\n  }, [normalizedOptions, selected, allowMultiple, onChange]);\n  const optionsExist = normalizedOptions.length > 0;\n  const optionsMarkup = optionsExist ? normalizedOptions.map((_ref2, sectionIndex) => {\n    let {\n      title,\n      options\n    } = _ref2;\n    const titleMarkup = title ? /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.Title\n    }, title) : null;\n    const optionsMarkup = options && options.map((option, optionIndex) => {\n      const isSelected = selected.includes(option.value);\n      const optionId = option.id || `${id}-${sectionIndex}-${optionIndex}`;\n      return /*#__PURE__*/React.createElement(Option, Object.assign({\n        key: optionId\n      }, option, {\n        id: optionId,\n        section: sectionIndex,\n        index: optionIndex,\n        onClick: handleClick,\n        select: isSelected,\n        allowMultiple: allowMultiple,\n        verticalAlign: verticalAlign,\n        role: optionRole\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: title || `noTitle-${sectionIndex}`\n    }, titleMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.Options,\n      id: `${id}-${sectionIndex}`,\n      role: role\n    }, optionsMarkup));\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.OptionList,\n    role: role\n  }, optionsMarkup);\n}\n\nfunction createNormalizedOptions(options, sections, title) {\n  if (options == null) {\n    const section = {\n      options: [],\n      title\n    };\n    return sections == null ? [] : [section, ...sections];\n  }\n\n  if (sections == null) {\n    return [{\n      title,\n      options\n    }];\n  }\n\n  return [{\n    title,\n    options\n  }, ...sections];\n}\n\nfunction optionArraysAreEqual(firstArray, secondArray) {\n  if (isSection(firstArray) && isSection(secondArray)) {\n    return arraysAreEqual(firstArray, secondArray, testSectionsPropEquality);\n  }\n\n  return arraysAreEqual(firstArray, secondArray);\n}\n\nfunction testSectionsPropEquality(previousSection, currentSection) {\n  const {\n    options: previousOptions\n  } = previousSection;\n  const {\n    options: currentOptions\n  } = currentSection;\n  const optionsAreEqual = arraysAreEqual(previousOptions, currentOptions);\n  const titlesAreEqual = previousSection.title === currentSection.title;\n  return optionsAreEqual && titlesAreEqual;\n}\n\nexport { OptionList };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/OptionList/OptionList.js"],"names":["React","useState","useCallback","isSection","arraysAreEqual","useDeepEffect","styles","Option","useUniqueId","OptionList","options","sections","title","selected","allowMultiple","role","optionRole","verticalAlign","onChange","id","idProp","normalizedOptions","setNormalizedOptions","createNormalizedOptions","optionArraysAreEqual","handleClick","sectionIndex","optionIndex","selectedValue","value","foundIndex","indexOf","newSelection","slice","length","optionsExist","optionsMarkup","map","titleMarkup","createElement","className","Title","option","isSelected","includes","optionId","Object","assign","key","section","index","onClick","select","Options","firstArray","secondArray","testSectionsPropEquality","previousSection","currentSection","previousOptions","currentOptions","optionsAreEqual","titlesAreEqual"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { isSection } from '../../utilities/options.js';\nimport { arraysAreEqual } from '../../utilities/arrays.js';\nimport { useDeepEffect } from '../../utilities/use-deep-effect.js';\nimport styles from './OptionList.scss.js';\nimport { Option } from './components/Option/Option.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\n\nfunction OptionList({\n  options,\n  sections,\n  title,\n  selected,\n  allowMultiple,\n  role,\n  optionRole,\n  verticalAlign,\n  onChange,\n  id: idProp\n}) {\n  const [normalizedOptions, setNormalizedOptions] = useState(createNormalizedOptions(options, sections, title));\n  const id = useUniqueId('OptionList', idProp);\n  useDeepEffect(() => {\n    setNormalizedOptions(createNormalizedOptions(options || [], sections || [], title));\n  }, [options, sections, title], optionArraysAreEqual);\n  const handleClick = useCallback((sectionIndex, optionIndex) => {\n    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;\n    const foundIndex = selected.indexOf(selectedValue);\n\n    if (allowMultiple) {\n      const newSelection = foundIndex === -1 ? [selectedValue, ...selected] : [...selected.slice(0, foundIndex), ...selected.slice(foundIndex + 1, selected.length)];\n      onChange(newSelection);\n      return;\n    }\n\n    onChange([selectedValue]);\n  }, [normalizedOptions, selected, allowMultiple, onChange]);\n  const optionsExist = normalizedOptions.length > 0;\n  const optionsMarkup = optionsExist ? normalizedOptions.map(({\n    title,\n    options\n  }, sectionIndex) => {\n    const titleMarkup = title ? /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.Title\n    }, title) : null;\n    const optionsMarkup = options && options.map((option, optionIndex) => {\n      const isSelected = selected.includes(option.value);\n      const optionId = option.id || `${id}-${sectionIndex}-${optionIndex}`;\n      return /*#__PURE__*/React.createElement(Option, Object.assign({\n        key: optionId\n      }, option, {\n        id: optionId,\n        section: sectionIndex,\n        index: optionIndex,\n        onClick: handleClick,\n        select: isSelected,\n        allowMultiple: allowMultiple,\n        verticalAlign: verticalAlign,\n        role: optionRole\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: title || `noTitle-${sectionIndex}`\n    }, titleMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.Options,\n      id: `${id}-${sectionIndex}`,\n      role: role\n    }, optionsMarkup));\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.OptionList,\n    role: role\n  }, optionsMarkup);\n}\n\nfunction createNormalizedOptions(options, sections, title) {\n  if (options == null) {\n    const section = {\n      options: [],\n      title\n    };\n    return sections == null ? [] : [section, ...sections];\n  }\n\n  if (sections == null) {\n    return [{\n      title,\n      options\n    }];\n  }\n\n  return [{\n    title,\n    options\n  }, ...sections];\n}\n\nfunction optionArraysAreEqual(firstArray, secondArray) {\n  if (isSection(firstArray) && isSection(secondArray)) {\n    return arraysAreEqual(firstArray, secondArray, testSectionsPropEquality);\n  }\n\n  return arraysAreEqual(firstArray, secondArray);\n}\n\nfunction testSectionsPropEquality(previousSection, currentSection) {\n  const {\n    options: previousOptions\n  } = previousSection;\n  const {\n    options: currentOptions\n  } = currentSection;\n  const optionsAreEqual = arraysAreEqual(previousOptions, currentOptions);\n  const titlesAreEqual = previousSection.title === currentSection.title;\n  return optionsAreEqual && titlesAreEqual;\n}\n\nexport { OptionList };\n"]},"metadata":{},"sourceType":"module"}