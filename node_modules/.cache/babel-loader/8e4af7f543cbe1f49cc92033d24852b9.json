{"ast":null,"code":"import React, { useRef, useState, useEffect } from 'react';\nimport { HorizontalDotsMinor } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { useToggle } from '../../../../utilities/use-toggle.js';\nimport styles from '../../Navigation.scss.js';\nimport { Item } from '../Item/Item.js';\nimport { useMediaQuery } from '../../../../utilities/media-query/hooks.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { useUniqueId } from '../../../../utilities/unique-id/hooks.js';\nimport { Collapsible } from '../../../Collapsible/Collapsible.js';\n\nfunction Section(_ref) {\n  let {\n    title,\n    fill,\n    action,\n    items,\n    rollup,\n    separator\n  } = _ref;\n  const {\n    value: expanded,\n    toggle: toggleExpanded,\n    setFalse: setExpandedFalse\n  } = useToggle(false);\n  const animationFrame = useRef(null);\n  const {\n    isNavigationCollapsed\n  } = useMediaQuery();\n  const [expandedIndex, setExpandedIndex] = useState();\n\n  const handleClick = (onClick, hasSubNavItems) => {\n    return () => {\n      if (onClick) {\n        onClick();\n      }\n\n      if (animationFrame.current) {\n        cancelAnimationFrame(animationFrame.current);\n      }\n\n      if (!hasSubNavItems || !isNavigationCollapsed) {\n        animationFrame.current = requestAnimationFrame(setExpandedFalse);\n      }\n    };\n  };\n\n  useEffect(() => {\n    return () => {\n      animationFrame.current && cancelAnimationFrame(animationFrame.current);\n    };\n  });\n  const className = classNames(styles.Section, separator && styles['Section-withSeparator'], fill && styles['Section-fill']);\n  const actionMarkup = action && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.Action,\n    \"aria-label\": action.accessibilityLabel,\n    onClick: action.onClick\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: action.icon\n  }));\n  const sectionHeadingMarkup = title && /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.SectionHeading\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Text\n  }, title), actionMarkup);\n  const itemsMarkup = items.map((item, index) => {\n    const {\n      onClick,\n      label,\n      subNavigationItems,\n      ...rest\n    } = item;\n    const hasSubNavItems = subNavigationItems != null && subNavigationItems.length > 0;\n\n    const handleToggleExpandedState = () => {\n      if (expandedIndex === index) {\n        setExpandedIndex(-1);\n      } else {\n        setExpandedIndex(index);\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Item, Object.assign({\n      key: label\n    }, rest, {\n      label: label,\n      subNavigationItems: subNavigationItems,\n      onClick: handleClick(onClick, hasSubNavItems),\n      onToggleExpandedState: handleToggleExpandedState,\n      expanded: expandedIndex === index\n    }));\n  });\n  const toggleClassName = classNames(styles.Item, styles.RollupToggle);\n  const ariaLabel = rollup && (expanded ? rollup.hide : rollup.view);\n  const toggleRollup = rollup && items.length > rollup.after && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ListItem,\n    key: \"List Item\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: toggleClassName,\n    onClick: toggleExpanded,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: HorizontalDotsMinor\n  }))));\n  const activeItemIndex = items.findIndex(item => {\n    if (!rollup) {\n      return false;\n    }\n\n    return rollup.activePath === item.url || item.url && rollup.activePath.startsWith(item.url) || (item.subNavigationItems ? item.subNavigationItems.some(_ref2 => {\n      let {\n        url: itemUrl\n      } = _ref2;\n      return rollup.activePath.startsWith(itemUrl);\n    }) : false);\n  });\n  const sectionItems = rollup ? itemsMarkup.slice(0, rollup.after) : itemsMarkup;\n  const additionalItems = rollup ? itemsMarkup.slice(rollup.after) : [];\n\n  if (rollup && activeItemIndex !== -1 && activeItemIndex > rollup.after - 1) {\n    sectionItems.push(...additionalItems.splice(activeItemIndex - rollup.after, 1));\n  }\n\n  const additionalItemsId = useUniqueId('AdditionalItems');\n  const activeItemsMarkup = rollup && additionalItems.length > 0 && /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.RollupSection\n  }, /*#__PURE__*/React.createElement(Collapsible, {\n    id: additionalItemsId,\n    open: expanded\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.List\n  }, additionalItems)), toggleRollup);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: className\n  }, sectionHeadingMarkup, sectionItems, activeItemsMarkup);\n}\n\nexport { Section };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Navigation/components/Section/Section.js"],"names":["React","useRef","useState","useEffect","HorizontalDotsMinor","classNames","useToggle","styles","Item","useMediaQuery","Icon","useUniqueId","Collapsible","Section","title","fill","action","items","rollup","separator","value","expanded","toggle","toggleExpanded","setFalse","setExpandedFalse","animationFrame","isNavigationCollapsed","expandedIndex","setExpandedIndex","handleClick","onClick","hasSubNavItems","current","cancelAnimationFrame","requestAnimationFrame","className","actionMarkup","createElement","type","Action","accessibilityLabel","source","icon","sectionHeadingMarkup","SectionHeading","Text","itemsMarkup","map","item","index","label","subNavigationItems","rest","length","handleToggleExpandedState","Object","assign","key","onToggleExpandedState","toggleClassName","RollupToggle","ariaLabel","hide","view","toggleRollup","after","ListItem","activeItemIndex","findIndex","activePath","url","startsWith","some","itemUrl","sectionItems","slice","additionalItems","push","splice","additionalItemsId","activeItemsMarkup","RollupSection","id","open","List"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { HorizontalDotsMinor } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { useToggle } from '../../../../utilities/use-toggle.js';\nimport styles from '../../Navigation.scss.js';\nimport { Item } from '../Item/Item.js';\nimport { useMediaQuery } from '../../../../utilities/media-query/hooks.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { useUniqueId } from '../../../../utilities/unique-id/hooks.js';\nimport { Collapsible } from '../../../Collapsible/Collapsible.js';\n\nfunction Section({\n  title,\n  fill,\n  action,\n  items,\n  rollup,\n  separator\n}) {\n  const {\n    value: expanded,\n    toggle: toggleExpanded,\n    setFalse: setExpandedFalse\n  } = useToggle(false);\n  const animationFrame = useRef(null);\n  const {\n    isNavigationCollapsed\n  } = useMediaQuery();\n  const [expandedIndex, setExpandedIndex] = useState();\n\n  const handleClick = (onClick, hasSubNavItems) => {\n    return () => {\n      if (onClick) {\n        onClick();\n      }\n\n      if (animationFrame.current) {\n        cancelAnimationFrame(animationFrame.current);\n      }\n\n      if (!hasSubNavItems || !isNavigationCollapsed) {\n        animationFrame.current = requestAnimationFrame(setExpandedFalse);\n      }\n    };\n  };\n\n  useEffect(() => {\n    return () => {\n      animationFrame.current && cancelAnimationFrame(animationFrame.current);\n    };\n  });\n  const className = classNames(styles.Section, separator && styles['Section-withSeparator'], fill && styles['Section-fill']);\n  const actionMarkup = action && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.Action,\n    \"aria-label\": action.accessibilityLabel,\n    onClick: action.onClick\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: action.icon\n  }));\n  const sectionHeadingMarkup = title && /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.SectionHeading\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Text\n  }, title), actionMarkup);\n  const itemsMarkup = items.map((item, index) => {\n    const {\n      onClick,\n      label,\n      subNavigationItems,\n      ...rest\n    } = item;\n    const hasSubNavItems = subNavigationItems != null && subNavigationItems.length > 0;\n\n    const handleToggleExpandedState = () => {\n      if (expandedIndex === index) {\n        setExpandedIndex(-1);\n      } else {\n        setExpandedIndex(index);\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Item, Object.assign({\n      key: label\n    }, rest, {\n      label: label,\n      subNavigationItems: subNavigationItems,\n      onClick: handleClick(onClick, hasSubNavItems),\n      onToggleExpandedState: handleToggleExpandedState,\n      expanded: expandedIndex === index\n    }));\n  });\n  const toggleClassName = classNames(styles.Item, styles.RollupToggle);\n  const ariaLabel = rollup && (expanded ? rollup.hide : rollup.view);\n  const toggleRollup = rollup && items.length > rollup.after && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ListItem,\n    key: \"List Item\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: toggleClassName,\n    onClick: toggleExpanded,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: HorizontalDotsMinor\n  }))));\n  const activeItemIndex = items.findIndex(item => {\n    if (!rollup) {\n      return false;\n    }\n\n    return rollup.activePath === item.url || item.url && rollup.activePath.startsWith(item.url) || (item.subNavigationItems ? item.subNavigationItems.some(({\n      url: itemUrl\n    }) => rollup.activePath.startsWith(itemUrl)) : false);\n  });\n  const sectionItems = rollup ? itemsMarkup.slice(0, rollup.after) : itemsMarkup;\n  const additionalItems = rollup ? itemsMarkup.slice(rollup.after) : [];\n\n  if (rollup && activeItemIndex !== -1 && activeItemIndex > rollup.after - 1) {\n    sectionItems.push(...additionalItems.splice(activeItemIndex - rollup.after, 1));\n  }\n\n  const additionalItemsId = useUniqueId('AdditionalItems');\n  const activeItemsMarkup = rollup && additionalItems.length > 0 && /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.RollupSection\n  }, /*#__PURE__*/React.createElement(Collapsible, {\n    id: additionalItemsId,\n    open: expanded\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.List\n  }, additionalItems)), toggleRollup);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: className\n  }, sectionHeadingMarkup, sectionItems, activeItemsMarkup);\n}\n\nexport { Section };\n"]},"metadata":{},"sourceType":"module"}