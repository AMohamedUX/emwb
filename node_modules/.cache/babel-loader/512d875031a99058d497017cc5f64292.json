{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"passive\"];\nimport { PureComponent } from 'react'; // see https://github.com/oliviertassinari/react-event-listener/\n\nvar EventListener = /*#__PURE__*/function (_PureComponent) {\n  _inherits(EventListener, _PureComponent);\n\n  var _super = _createSuper(EventListener);\n\n  function EventListener() {\n    _classCallCheck(this, EventListener);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EventListener, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.attachListener();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var passive = _ref.passive,\n          detachProps = _objectWithoutProperties(_ref, _excluded);\n\n      this.detachListener(detachProps);\n      this.attachListener();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.detachListener();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }, {\n    key: \"attachListener\",\n    value: function attachListener() {\n      var _this$props = this.props,\n          event = _this$props.event,\n          handler = _this$props.handler,\n          capture = _this$props.capture,\n          passive = _this$props.passive;\n      window.addEventListener(event, handler, {\n        capture: capture,\n        passive: passive\n      });\n    }\n  }, {\n    key: \"detachListener\",\n    value: function detachListener(prevProps) {\n      var _ref2 = prevProps || this.props,\n          event = _ref2.event,\n          handler = _ref2.handler,\n          capture = _ref2.capture;\n\n      window.removeEventListener(event, handler, capture);\n    }\n  }]);\n\n  return EventListener;\n}(PureComponent);\n\nexport { EventListener };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/EventListener/EventListener.js"],"names":["PureComponent","EventListener","attachListener","passive","detachProps","detachListener","props","event","handler","capture","window","addEventListener","prevProps","removeEventListener"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B,C,CAEA;;IACMC,a;;;;;;;;;;;;;WACJ,6BAAoB;AAClB,WAAKC,cAAL;AACD;;;WAED,kCAGG;AAAA,UAFDC,OAEC,QAFDA,OAEC;AAAA,UADEC,WACF;;AACD,WAAKC,cAAL,CAAoBD,WAApB;AACA,WAAKF,cAAL;AACD;;;WAED,gCAAuB;AACrB,WAAKG,cAAL;AACD;;;WAED,kBAAS;AACP,aAAO,IAAP;AACD;;;WAED,0BAAiB;AACf,wBAKI,KAAKC,KALT;AAAA,UACEC,KADF,eACEA,KADF;AAAA,UAEEC,OAFF,eAEEA,OAFF;AAAA,UAGEC,OAHF,eAGEA,OAHF;AAAA,UAIEN,OAJF,eAIEA,OAJF;AAMAO,MAAAA,MAAM,CAACC,gBAAP,CAAwBJ,KAAxB,EAA+BC,OAA/B,EAAwC;AACtCC,QAAAA,OAAO,EAAPA,OADsC;AAEtCN,QAAAA,OAAO,EAAPA;AAFsC,OAAxC;AAID;;;WAED,wBAAeS,SAAf,EAA0B;AACxB,kBAIIA,SAAS,IAAI,KAAKN,KAJtB;AAAA,UACEC,KADF,SACEA,KADF;AAAA,UAEEC,OAFF,SAEEA,OAFF;AAAA,UAGEC,OAHF,SAGEA,OAHF;;AAKAC,MAAAA,MAAM,CAACG,mBAAP,CAA2BN,KAA3B,EAAkCC,OAAlC,EAA2CC,OAA3C;AACD;;;;EAzCyBT,a;;AA6C5B,SAASC,aAAT","sourcesContent":["import { PureComponent } from 'react';\n\n// see https://github.com/oliviertassinari/react-event-listener/\nclass EventListener extends PureComponent {\n  componentDidMount() {\n    this.attachListener();\n  }\n\n  componentDidUpdate({\n    passive,\n    ...detachProps\n  }) {\n    this.detachListener(detachProps);\n    this.attachListener();\n  }\n\n  componentWillUnmount() {\n    this.detachListener();\n  }\n\n  render() {\n    return null;\n  }\n\n  attachListener() {\n    const {\n      event,\n      handler,\n      capture,\n      passive\n    } = this.props;\n    window.addEventListener(event, handler, {\n      capture,\n      passive\n    });\n  }\n\n  detachListener(prevProps) {\n    const {\n      event,\n      handler,\n      capture\n    } = prevProps || this.props;\n    window.removeEventListener(event, handler, capture);\n  }\n\n}\n\nexport { EventListener };\n"]},"metadata":{},"sourceType":"module"}