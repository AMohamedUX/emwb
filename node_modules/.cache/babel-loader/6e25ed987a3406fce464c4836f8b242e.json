{"ast":null,"code":"import React, { useState, useRef, useEffect, useCallback, createElement } from 'react';\nimport { CircleCancelMinor } from '@shopify/polaris-icons';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { useIsAfterInitialMount } from '../../utilities/use-is-after-initial-mount.js';\nimport { Key } from '../../types.js';\nimport styles from './TextField.scss.js';\nimport { Labelled, helpTextID } from '../Labelled/Labelled.js';\nimport { Connected } from '../Connected/Connected.js';\nimport { Spinner } from './components/Spinner/Spinner.js';\nimport { Resizer } from './components/Resizer/Resizer.js';\nimport { labelID } from '../Label/Label.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Icon } from '../Icon/Icon.js';\n\nfunction TextField(_ref) {\n  let {\n    prefix,\n    suffix,\n    verticalContent,\n    placeholder,\n    value = '',\n    helpText,\n    label,\n    labelAction,\n    labelHidden,\n    disabled,\n    clearButton,\n    readOnly,\n    autoFocus,\n    focused,\n    multiline,\n    error,\n    connectedRight,\n    connectedLeft,\n    type = 'text',\n    name,\n    id: idProp,\n    role,\n    step,\n    autoComplete,\n    max,\n    maxLength,\n    maxHeight,\n    min,\n    minLength,\n    pattern,\n    inputMode,\n    spellCheck,\n    ariaOwns,\n    ariaControls,\n    ariaExpanded,\n    ariaActiveDescendant,\n    ariaAutocomplete,\n    showCharacterCount,\n    align,\n    requiredIndicator,\n    monospaced,\n    selectTextOnFocus,\n    suggestion,\n    onClearButtonClick,\n    onChange,\n    onFocus,\n    onBlur\n  } = _ref;\n  const i18n = useI18n();\n  const [height, setHeight] = useState(null);\n  const [focus, setFocus] = useState(Boolean(focused));\n  const isAfterInitial = useIsAfterInitialMount();\n  const id = useUniqueId('TextField', idProp);\n  const inputRef = useRef(null);\n  const textAreaRef = useRef(null);\n  const prefixRef = useRef(null);\n  const suffixRef = useRef(null);\n  const verticalContentRef = useRef(null);\n  const buttonPressTimer = useRef();\n  useEffect(() => {\n    const input = inputRef.current;\n    if (!input || focused === undefined) return;\n    focused ? input.focus() : input.blur();\n  }, [focused]);\n  useEffect(() => {\n    const input = inputRef.current;\n    const isSupportedInputType = type === 'text' || type === 'tel' || type === 'search' || type === 'url' || type === 'password';\n\n    if (!input || !isSupportedInputType || !suggestion) {\n      return;\n    }\n\n    input.setSelectionRange(value.length, suggestion.length);\n  }, [focus, value, type, suggestion]);\n  const normalizedValue = suggestion ? suggestion : value;\n  const normalizedStep = step != null ? step : 1;\n  const normalizedMax = max != null ? max : Infinity;\n  const normalizedMin = min != null ? min : -Infinity;\n  const className = classNames(styles.TextField, Boolean(normalizedValue) && styles.hasValue, disabled && styles.disabled, readOnly && styles.readOnly, error && styles.error, multiline && styles.multiline, focus && styles.focus);\n  const inputType = type === 'currency' ? 'text' : type;\n  const prefixMarkup = prefix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Prefix,\n    id: `${id}-Prefix`,\n    ref: prefixRef\n  }, prefix) : null;\n  const suffixMarkup = suffix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Suffix,\n    id: `${id}-Suffix`,\n    ref: suffixRef\n  }, suffix) : null;\n  let characterCountMarkup = null;\n\n  if (showCharacterCount) {\n    const characterCount = normalizedValue.length;\n    const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {\n      count: characterCount,\n      limit: maxLength\n    }) : i18n.translate('Polaris.TextField.characterCount', {\n      count: characterCount\n    });\n    const characterCountClassName = classNames(styles.CharacterCount, multiline && styles.AlignFieldBottom);\n    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;\n    characterCountMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      id: `${id}-CharacterCounter`,\n      className: characterCountClassName,\n      \"aria-label\": characterCountLabel,\n      \"aria-live\": focus ? 'polite' : 'off',\n      \"aria-atomic\": \"true\"\n    }, characterCountText);\n  }\n\n  const clearButtonVisible = normalizedValue !== '';\n  const clearButtonClassNames = classNames(styles.ClearButton, !clearButtonVisible && styles.Hidden);\n  const clearButtonMarkup = clearButton ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: clearButtonClassNames,\n    onClick: handleClearButtonPress,\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, i18n.translate('Polaris.Common.clear')), /*#__PURE__*/React.createElement(Icon, {\n    source: CircleCancelMinor,\n    color: \"base\"\n  })) : null;\n  const handleNumberChange = useCallback(steps => {\n    if (onChange == null) {\n      return;\n    } // Returns the length of decimal places in a number\n\n\n    const dpl = num => (num.toString().split('.')[1] || []).length;\n\n    const numericValue = value ? parseFloat(value) : 0;\n\n    if (isNaN(numericValue)) {\n      return;\n    } // Making sure the new value has the same length of decimal places as the\n    // step / value has.\n\n\n    const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));\n    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));\n    onChange(String(newValue.toFixed(decimalPlaces)), id);\n  }, [id, normalizedMax, normalizedMin, onChange, normalizedStep, value]);\n  const handleButtonRelease = useCallback(() => {\n    clearTimeout(buttonPressTimer.current);\n  }, []);\n  const handleButtonPress = useCallback(onChange => {\n    const minInterval = 50;\n    const decrementBy = 10;\n    let interval = 200;\n\n    const onChangeInterval = () => {\n      if (interval > minInterval) interval -= decrementBy;\n      onChange(0);\n      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    };\n\n    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    document.addEventListener('mouseup', handleButtonRelease, {\n      once: true\n    });\n  }, [handleButtonRelease]);\n  const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/React.createElement(Spinner, {\n    onChange: handleNumberChange,\n    onMouseDown: handleButtonPress,\n    onMouseUp: handleButtonRelease\n  }) : null;\n  const style = multiline && height ? {\n    height,\n    maxHeight\n  } : null;\n  const handleExpandingResize = useCallback(height => {\n    setHeight(height);\n  }, []);\n  const resizer = multiline && isAfterInitial ? /*#__PURE__*/React.createElement(Resizer, {\n    contents: normalizedValue || placeholder,\n    currentHeight: height,\n    minimumLines: typeof multiline === 'number' ? multiline : 1,\n    onHeightChange: handleExpandingResize\n  }) : null;\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (showCharacterCount) {\n    describedBy.push(`${id}-CharacterCounter`);\n  }\n\n  const labelledBy = [];\n\n  if (prefix) {\n    labelledBy.push(`${id}-Prefix`);\n  }\n\n  if (suffix) {\n    labelledBy.push(`${id}-Suffix`);\n  }\n\n  if (verticalContent) {\n    labelledBy.push(`${id}-VerticalContent`);\n  }\n\n  labelledBy.unshift(labelID(id));\n  const inputClassName = classNames(styles.Input, align && styles[variationName('Input-align', align)], suffix && styles['Input-suffixed'], clearButton && styles['Input-hasClearButton'], monospaced && styles.monospaced, suggestion && styles.suggestion);\n\n  const handleOnFocus = event => {\n    if (selectTextOnFocus && !suggestion) {\n      const input = multiline ? textAreaRef.current : inputRef.current;\n      input === null || input === void 0 ? void 0 : input.select();\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const input = /*#__PURE__*/createElement(multiline ? 'textarea' : 'input', {\n    name,\n    id,\n    disabled,\n    readOnly,\n    role,\n    autoFocus,\n    value: normalizedValue,\n    placeholder,\n    style,\n    autoComplete,\n    className: inputClassName,\n    ref: multiline ? textAreaRef : inputRef,\n    min,\n    max,\n    step,\n    minLength,\n    maxLength,\n    spellCheck,\n    pattern,\n    inputMode,\n    type: inputType,\n    rows: getRows(multiline),\n    'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,\n    'aria-labelledby': labelledBy.join(' '),\n    'aria-invalid': Boolean(error),\n    'aria-owns': ariaOwns,\n    'aria-activedescendant': ariaActiveDescendant,\n    'aria-autocomplete': ariaAutocomplete,\n    'aria-controls': ariaControls,\n    'aria-expanded': ariaExpanded,\n    'aria-required': requiredIndicator,\n    ...normalizeAriaMultiline(multiline),\n    onFocus: handleOnFocus,\n    onBlur,\n    onKeyPress: handleKeyPress,\n    onChange: !suggestion ? handleChange : undefined,\n    onInput: suggestion ? handleChange : undefined\n  });\n  const inputWithVerticalContentMarkup = verticalContent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.VerticalContent,\n    id: `${id}-VerticalContent`,\n    ref: verticalContentRef\n  }, verticalContent, input) : null;\n  const inputMarkup = verticalContent ? inputWithVerticalContentMarkup : input;\n  const backdropClassName = classNames(styles.Backdrop, connectedLeft && styles['Backdrop-connectedLeft'], connectedRight && styles['Backdrop-connectedRight']);\n  return /*#__PURE__*/React.createElement(Labelled, {\n    label: label,\n    id: id,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText,\n    requiredIndicator: requiredIndicator\n  }, /*#__PURE__*/React.createElement(Connected, {\n    left: connectedLeft,\n    right: connectedRight\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onClick: handleClick\n  }, prefixMarkup, inputMarkup, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, /*#__PURE__*/React.createElement(\"div\", {\n    className: backdropClassName\n  }), resizer)));\n\n  function handleClearButtonPress() {\n    onClearButtonClick && onClearButtonClick(id);\n  }\n\n  function handleKeyPress(event) {\n    const {\n      key,\n      which\n    } = event;\n    const numbersSpec = /[\\d.eE+-]$/;\n\n    if (type !== 'number' || which === Key.Enter || numbersSpec.test(key)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  function containsAffix(target) {\n    return target instanceof HTMLElement && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));\n  }\n\n  function handleChange(event) {\n    onChange && onChange(event.currentTarget.value, id);\n  }\n\n  function handleFocus(_ref2) {\n    let {\n      target\n    } = _ref2;\n\n    if (containsAffix(target)) {\n      return;\n    }\n\n    setFocus(true);\n  }\n\n  function handleBlur() {\n    setFocus(false);\n  }\n\n  function handleClick(_ref3) {\n    let {\n      target\n    } = _ref3;\n\n    var _inputRef$current;\n\n    if (containsAffix(target) || focus) {\n      return;\n    }\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }\n}\n\nfunction normalizeAriaMultiline(multiline) {\n  if (!multiline) return undefined;\n  return Boolean(multiline) || multiline > 0 ? {\n    'aria-multiline': true\n  } : undefined;\n}\n\nfunction getRows(multiline) {\n  if (!multiline) return undefined;\n  return typeof multiline === 'number' ? multiline : 1;\n}\n\nexport { TextField };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/TextField/TextField.js"],"names":["React","useState","useRef","useEffect","useCallback","createElement","CircleCancelMinor","classNames","variationName","useIsAfterInitialMount","Key","styles","Labelled","helpTextID","Connected","Spinner","Resizer","labelID","useI18n","useUniqueId","VisuallyHidden","Icon","TextField","prefix","suffix","verticalContent","placeholder","value","helpText","label","labelAction","labelHidden","disabled","clearButton","readOnly","autoFocus","focused","multiline","error","connectedRight","connectedLeft","type","name","id","idProp","role","step","autoComplete","max","maxLength","maxHeight","min","minLength","pattern","inputMode","spellCheck","ariaOwns","ariaControls","ariaExpanded","ariaActiveDescendant","ariaAutocomplete","showCharacterCount","align","requiredIndicator","monospaced","selectTextOnFocus","suggestion","onClearButtonClick","onChange","onFocus","onBlur","i18n","height","setHeight","focus","setFocus","Boolean","isAfterInitial","inputRef","textAreaRef","prefixRef","suffixRef","verticalContentRef","buttonPressTimer","input","current","undefined","blur","isSupportedInputType","setSelectionRange","length","normalizedValue","normalizedStep","normalizedMax","Infinity","normalizedMin","className","hasValue","inputType","prefixMarkup","Prefix","ref","suffixMarkup","Suffix","characterCountMarkup","characterCount","characterCountLabel","translate","count","limit","characterCountClassName","CharacterCount","AlignFieldBottom","characterCountText","clearButtonVisible","clearButtonClassNames","ClearButton","Hidden","clearButtonMarkup","onClick","handleClearButtonPress","source","color","handleNumberChange","steps","dpl","num","toString","split","numericValue","parseFloat","isNaN","decimalPlaces","Math","newValue","Number","String","toFixed","handleButtonRelease","clearTimeout","handleButtonPress","minInterval","decrementBy","interval","onChangeInterval","window","setTimeout","document","addEventListener","once","spinnerMarkup","onMouseDown","onMouseUp","style","handleExpandingResize","resizer","contents","currentHeight","minimumLines","onHeightChange","describedBy","push","labelledBy","unshift","inputClassName","Input","handleOnFocus","event","select","rows","getRows","join","normalizeAriaMultiline","onKeyPress","handleKeyPress","handleChange","onInput","inputWithVerticalContentMarkup","VerticalContent","inputMarkup","backdropClassName","Backdrop","action","left","right","handleFocus","handleBlur","handleClick","key","which","numbersSpec","Enter","test","preventDefault","containsAffix","target","HTMLElement","contains","currentTarget","_inputRef$current"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback, createElement } from 'react';\nimport { CircleCancelMinor } from '@shopify/polaris-icons';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { useIsAfterInitialMount } from '../../utilities/use-is-after-initial-mount.js';\nimport { Key } from '../../types.js';\nimport styles from './TextField.scss.js';\nimport { Labelled, helpTextID } from '../Labelled/Labelled.js';\nimport { Connected } from '../Connected/Connected.js';\nimport { Spinner } from './components/Spinner/Spinner.js';\nimport { Resizer } from './components/Resizer/Resizer.js';\nimport { labelID } from '../Label/Label.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Icon } from '../Icon/Icon.js';\n\nfunction TextField({\n  prefix,\n  suffix,\n  verticalContent,\n  placeholder,\n  value = '',\n  helpText,\n  label,\n  labelAction,\n  labelHidden,\n  disabled,\n  clearButton,\n  readOnly,\n  autoFocus,\n  focused,\n  multiline,\n  error,\n  connectedRight,\n  connectedLeft,\n  type = 'text',\n  name,\n  id: idProp,\n  role,\n  step,\n  autoComplete,\n  max,\n  maxLength,\n  maxHeight,\n  min,\n  minLength,\n  pattern,\n  inputMode,\n  spellCheck,\n  ariaOwns,\n  ariaControls,\n  ariaExpanded,\n  ariaActiveDescendant,\n  ariaAutocomplete,\n  showCharacterCount,\n  align,\n  requiredIndicator,\n  monospaced,\n  selectTextOnFocus,\n  suggestion,\n  onClearButtonClick,\n  onChange,\n  onFocus,\n  onBlur\n}) {\n  const i18n = useI18n();\n  const [height, setHeight] = useState(null);\n  const [focus, setFocus] = useState(Boolean(focused));\n  const isAfterInitial = useIsAfterInitialMount();\n  const id = useUniqueId('TextField', idProp);\n  const inputRef = useRef(null);\n  const textAreaRef = useRef(null);\n  const prefixRef = useRef(null);\n  const suffixRef = useRef(null);\n  const verticalContentRef = useRef(null);\n  const buttonPressTimer = useRef();\n  useEffect(() => {\n    const input = inputRef.current;\n    if (!input || focused === undefined) return;\n    focused ? input.focus() : input.blur();\n  }, [focused]);\n  useEffect(() => {\n    const input = inputRef.current;\n    const isSupportedInputType = type === 'text' || type === 'tel' || type === 'search' || type === 'url' || type === 'password';\n\n    if (!input || !isSupportedInputType || !suggestion) {\n      return;\n    }\n\n    input.setSelectionRange(value.length, suggestion.length);\n  }, [focus, value, type, suggestion]);\n  const normalizedValue = suggestion ? suggestion : value;\n  const normalizedStep = step != null ? step : 1;\n  const normalizedMax = max != null ? max : Infinity;\n  const normalizedMin = min != null ? min : -Infinity;\n  const className = classNames(styles.TextField, Boolean(normalizedValue) && styles.hasValue, disabled && styles.disabled, readOnly && styles.readOnly, error && styles.error, multiline && styles.multiline, focus && styles.focus);\n  const inputType = type === 'currency' ? 'text' : type;\n  const prefixMarkup = prefix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Prefix,\n    id: `${id}-Prefix`,\n    ref: prefixRef\n  }, prefix) : null;\n  const suffixMarkup = suffix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Suffix,\n    id: `${id}-Suffix`,\n    ref: suffixRef\n  }, suffix) : null;\n  let characterCountMarkup = null;\n\n  if (showCharacterCount) {\n    const characterCount = normalizedValue.length;\n    const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {\n      count: characterCount,\n      limit: maxLength\n    }) : i18n.translate('Polaris.TextField.characterCount', {\n      count: characterCount\n    });\n    const characterCountClassName = classNames(styles.CharacterCount, multiline && styles.AlignFieldBottom);\n    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;\n    characterCountMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      id: `${id}-CharacterCounter`,\n      className: characterCountClassName,\n      \"aria-label\": characterCountLabel,\n      \"aria-live\": focus ? 'polite' : 'off',\n      \"aria-atomic\": \"true\"\n    }, characterCountText);\n  }\n\n  const clearButtonVisible = normalizedValue !== '';\n  const clearButtonClassNames = classNames(styles.ClearButton, !clearButtonVisible && styles.Hidden);\n  const clearButtonMarkup = clearButton ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: clearButtonClassNames,\n    onClick: handleClearButtonPress,\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, i18n.translate('Polaris.Common.clear')), /*#__PURE__*/React.createElement(Icon, {\n    source: CircleCancelMinor,\n    color: \"base\"\n  })) : null;\n  const handleNumberChange = useCallback(steps => {\n    if (onChange == null) {\n      return;\n    } // Returns the length of decimal places in a number\n\n\n    const dpl = num => (num.toString().split('.')[1] || []).length;\n\n    const numericValue = value ? parseFloat(value) : 0;\n\n    if (isNaN(numericValue)) {\n      return;\n    } // Making sure the new value has the same length of decimal places as the\n    // step / value has.\n\n\n    const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));\n    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));\n    onChange(String(newValue.toFixed(decimalPlaces)), id);\n  }, [id, normalizedMax, normalizedMin, onChange, normalizedStep, value]);\n  const handleButtonRelease = useCallback(() => {\n    clearTimeout(buttonPressTimer.current);\n  }, []);\n  const handleButtonPress = useCallback(onChange => {\n    const minInterval = 50;\n    const decrementBy = 10;\n    let interval = 200;\n\n    const onChangeInterval = () => {\n      if (interval > minInterval) interval -= decrementBy;\n      onChange(0);\n      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    };\n\n    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    document.addEventListener('mouseup', handleButtonRelease, {\n      once: true\n    });\n  }, [handleButtonRelease]);\n  const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/React.createElement(Spinner, {\n    onChange: handleNumberChange,\n    onMouseDown: handleButtonPress,\n    onMouseUp: handleButtonRelease\n  }) : null;\n  const style = multiline && height ? {\n    height,\n    maxHeight\n  } : null;\n  const handleExpandingResize = useCallback(height => {\n    setHeight(height);\n  }, []);\n  const resizer = multiline && isAfterInitial ? /*#__PURE__*/React.createElement(Resizer, {\n    contents: normalizedValue || placeholder,\n    currentHeight: height,\n    minimumLines: typeof multiline === 'number' ? multiline : 1,\n    onHeightChange: handleExpandingResize\n  }) : null;\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (showCharacterCount) {\n    describedBy.push(`${id}-CharacterCounter`);\n  }\n\n  const labelledBy = [];\n\n  if (prefix) {\n    labelledBy.push(`${id}-Prefix`);\n  }\n\n  if (suffix) {\n    labelledBy.push(`${id}-Suffix`);\n  }\n\n  if (verticalContent) {\n    labelledBy.push(`${id}-VerticalContent`);\n  }\n\n  labelledBy.unshift(labelID(id));\n  const inputClassName = classNames(styles.Input, align && styles[variationName('Input-align', align)], suffix && styles['Input-suffixed'], clearButton && styles['Input-hasClearButton'], monospaced && styles.monospaced, suggestion && styles.suggestion);\n\n  const handleOnFocus = event => {\n    if (selectTextOnFocus && !suggestion) {\n      const input = multiline ? textAreaRef.current : inputRef.current;\n      input === null || input === void 0 ? void 0 : input.select();\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const input = /*#__PURE__*/createElement(multiline ? 'textarea' : 'input', {\n    name,\n    id,\n    disabled,\n    readOnly,\n    role,\n    autoFocus,\n    value: normalizedValue,\n    placeholder,\n    style,\n    autoComplete,\n    className: inputClassName,\n    ref: multiline ? textAreaRef : inputRef,\n    min,\n    max,\n    step,\n    minLength,\n    maxLength,\n    spellCheck,\n    pattern,\n    inputMode,\n    type: inputType,\n    rows: getRows(multiline),\n    'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,\n    'aria-labelledby': labelledBy.join(' '),\n    'aria-invalid': Boolean(error),\n    'aria-owns': ariaOwns,\n    'aria-activedescendant': ariaActiveDescendant,\n    'aria-autocomplete': ariaAutocomplete,\n    'aria-controls': ariaControls,\n    'aria-expanded': ariaExpanded,\n    'aria-required': requiredIndicator,\n    ...normalizeAriaMultiline(multiline),\n    onFocus: handleOnFocus,\n    onBlur,\n    onKeyPress: handleKeyPress,\n    onChange: !suggestion ? handleChange : undefined,\n    onInput: suggestion ? handleChange : undefined\n  });\n  const inputWithVerticalContentMarkup = verticalContent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.VerticalContent,\n    id: `${id}-VerticalContent`,\n    ref: verticalContentRef\n  }, verticalContent, input) : null;\n  const inputMarkup = verticalContent ? inputWithVerticalContentMarkup : input;\n  const backdropClassName = classNames(styles.Backdrop, connectedLeft && styles['Backdrop-connectedLeft'], connectedRight && styles['Backdrop-connectedRight']);\n  return /*#__PURE__*/React.createElement(Labelled, {\n    label: label,\n    id: id,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText,\n    requiredIndicator: requiredIndicator\n  }, /*#__PURE__*/React.createElement(Connected, {\n    left: connectedLeft,\n    right: connectedRight\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onClick: handleClick\n  }, prefixMarkup, inputMarkup, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, /*#__PURE__*/React.createElement(\"div\", {\n    className: backdropClassName\n  }), resizer)));\n\n  function handleClearButtonPress() {\n    onClearButtonClick && onClearButtonClick(id);\n  }\n\n  function handleKeyPress(event) {\n    const {\n      key,\n      which\n    } = event;\n    const numbersSpec = /[\\d.eE+-]$/;\n\n    if (type !== 'number' || which === Key.Enter || numbersSpec.test(key)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  function containsAffix(target) {\n    return target instanceof HTMLElement && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));\n  }\n\n  function handleChange(event) {\n    onChange && onChange(event.currentTarget.value, id);\n  }\n\n  function handleFocus({\n    target\n  }) {\n    if (containsAffix(target)) {\n      return;\n    }\n\n    setFocus(true);\n  }\n\n  function handleBlur() {\n    setFocus(false);\n  }\n\n  function handleClick({\n    target\n  }) {\n    var _inputRef$current;\n\n    if (containsAffix(target) || focus) {\n      return;\n    }\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }\n}\n\nfunction normalizeAriaMultiline(multiline) {\n  if (!multiline) return undefined;\n  return Boolean(multiline) || multiline > 0 ? {\n    'aria-multiline': true\n  } : undefined;\n}\n\nfunction getRows(multiline) {\n  if (!multiline) return undefined;\n  return typeof multiline === 'number' ? multiline : 1;\n}\n\nexport { TextField };\n"]},"metadata":{},"sourceType":"module"}