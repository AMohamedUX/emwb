{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { EnableSelectionMinor } from '@shopify/polaris-icons';\nimport debounce from 'lodash/debounce';\nimport { CSSTransition } from 'react-transition-group';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { tokens } from '../../tokens/tokens.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Button } from '../Button/Button.js';\nconst SCROLL_BAR_PADDING = 4;\nconst SIXTY_FPS = 1000 / 60;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nconst SMALL_SCREEN_WIDTH = 458;\n\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    lastColumnSticky = false\n  } = _ref;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectable,\n    selectMode,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && (!isSmallScreen() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }, SIXTY_FPS, {\n    leading: true,\n    trailing: true,\n    maxWait: SIXTY_FPS\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n  const handleCanScrollRight = useCallback(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }, [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur; // hide the scrollbar when resizing\n\n\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n  }, [debounceResizeTableScrollbar, resizeTableHeadings, handleCanScrollRight]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: headings[0].title,\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0])), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0]))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(tokens.motion['duration-100'], 10),\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React.createElement(BulkActions, {\n      smallScreen: condensed,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const selectButtonMarkup = /*#__PURE__*/React.createElement(Button, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'));\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, !selectable && styles.unselectable)\n    }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], lastColumnSticky && styles['Table-sticky-last'], lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const headingContentClassName = classNames(styles.TableHeading, isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: heading.title,\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading));\n\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n\n    const checkboxClassName = classNames(styles.TableHeading, index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function renderHeadingContent(heading) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(VisuallyHidden, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: heading.title,\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isSmallScreen = () => {\n  return typeof window === 'undefined' ? false : window.innerWidth < SMALL_SCREEN_WIDTH;\n};\n\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\n\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"names":["React","useRef","useState","useCallback","useMemo","useEffect","EnableSelectionMinor","debounce","CSSTransition","useToggle","classNames","styles","IndexProvider","Cell","Row","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","AfterInitialMount","EmptySearchResult","ScrollContainer","Sticky","BulkActions","useIndexValue","useIndexSelectionChange","useI18n","Stack","Checkbox","tokens","Spinner","EventListener","Badge","VisuallyHidden","Button","SCROLL_BAR_PADDING","SIXTY_FPS","SCROLL_BAR_DEBOUNCE_PERIOD","SMALL_SCREEN_WIDTH","IndexTableBase","headings","bulkActions","promotedBulkActions","children","emptyState","sort","lastColumnSticky","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectable","selectMode","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","condensedListElement","tableInitialized","setTableInitialized","isSmallScreenSelectable","setIsSmallScreenSelectable","stickyWrapper","setStickyWrapper","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollingWithBar","scrollingContainer","tableBodyRef","node","toggleIsSmallScreenSelectable","handleSelectAllItemsInStore","Page","All","calculateFirstHeaderOffset","current","offsetWidth","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetLeft","length","style","elementStyle","getComputedStyle","boxWidth","minWidth","paddingLeft","paddingRight","forEach","index","isSmallScreen","_tableHeadingRects$cu","_tableHeadingRects$cu2","leading","trailing","maxWait","resizeTableScrollBar","setProperty","debounceResizeTableScrollbar","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","handleResize","_scrollBarElement$cur","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","hasBulkActions","Boolean","headingsMarkup","renderHeading","reduce","acc","concat","bulkActionsSelectable","stickyColumnHeaderStyle","undefined","stickyColumnHeader","createElement","className","TableHeading","key","title","spacing","wrap","alignment","FirstStickyHeaderElement","ref","renderCheckboxContent","renderHeadingContent","stickyHeadingsMarkup","renderStickyHeading","selectedItemsCountLabel","handleTogglePage","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","in","timeout","parseInt","motion","appear","unmountOnExit","LoadingPanel","LoadingPanelRow","size","LoadingPanelText","translate","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowBulkActions","stickyHeaderMarkup","role","boundingElement","isSticky","stickyHeaderClassNames","StickyTableHeader","bulkActionClassNames","BulkActionsWrapper","shouldShowActions","promotedActions","actions","bulkActionsMarkup","smallScreen","label","accessibilityLabel","selected","onToggleAll","onSelectModeToggle","handleSelectModeToggle","stickyColumnHeaderClassNames","StickyTableColumnHeader","selectButtonMarkup","icon","onClick","headerMarkup","HeaderWrapper","unselectable","StickyTableHeadings","stickyContent","scrollBarWrapperClassNames","ScrollBarContainer","scrollBarContainerCondensed","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onScroll","ScrollBar","tableClassNames","Table","disableTextSelection","emptyStateMarkup","description","withIllustration","sharedMarkup","Fragment","event","handler","bodyMarkup","CondensedList","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","IndexTable","isSecond","isLast","headingContentClassName","hidden","stickyPositioningStyle","headingContent","checkboxClassName","checkboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","new","status","position","headingStyle","stickyHeadingClassName","actionText","itemsLength","content","onAction","val","window","innerWidth","passedResourceName","onSelectionChange","indexTableBaseProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { EnableSelectionMinor } from '@shopify/polaris-icons';\nimport debounce from 'lodash/debounce';\nimport { CSSTransition } from 'react-transition-group';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { tokens } from '../../tokens/tokens.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Button } from '../Button/Button.js';\n\nconst SCROLL_BAR_PADDING = 4;\nconst SIXTY_FPS = 1000 / 60;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nconst SMALL_SCREEN_WIDTH = 458;\n\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  lastColumnSticky = false\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectable,\n    selectMode,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && (!isSmallScreen() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }, SIXTY_FPS, {\n    leading: true,\n    trailing: true,\n    maxWait: SIXTY_FPS\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n  const handleCanScrollRight = useCallback(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }, [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n  }, [debounceResizeTableScrollbar, resizeTableHeadings, handleCanScrollRight]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: headings[0].title,\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0])), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0]))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(tokens.motion['duration-100'], 10),\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React.createElement(BulkActions, {\n      smallScreen: condensed,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const selectButtonMarkup = /*#__PURE__*/React.createElement(Button, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'));\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, !selectable && styles.unselectable)\n    }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], lastColumnSticky && styles['Table-sticky-last'], lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const headingContentClassName = classNames(styles.TableHeading, isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: heading.title,\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading));\n\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n\n    const checkboxClassName = classNames(styles.TableHeading, index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function renderHeadingContent(heading) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(VisuallyHidden, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: heading.title,\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isSmallScreen = () => {\n  return typeof window === 'undefined' ? false : window.innerWidth < SMALL_SCREEN_WIDTH;\n};\n\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"]},"metadata":{},"sourceType":"module"}