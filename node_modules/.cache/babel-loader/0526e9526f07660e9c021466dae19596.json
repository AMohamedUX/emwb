{"ast":null,"code":"import React, { useContext } from 'react';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { WithinFilterContext } from '../../utilities/within-filter-context.js';\nimport styles from './Badge.scss.js';\nimport { getDefaultAccessibilityLabel } from './utils.js';\nimport { Pip } from './components/Pip/Pip.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nvar DEFAULT_SIZE = 'medium';\n\nfunction Badge(_ref) {\n  var children = _ref.children,\n      status = _ref.status,\n      progress = _ref.progress,\n      icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? DEFAULT_SIZE : _ref$size,\n      statusAndProgressLabelOverride = _ref.statusAndProgressLabelOverride;\n  var i18n = useI18n();\n  var withinFilter = useContext(WithinFilterContext);\n  var className = classNames(styles.Badge, status && styles[variationName('status', status)], icon && styles.icon, size && size !== DEFAULT_SIZE && styles[variationName('size', size)], withinFilter && styles.withinFilter);\n  var accessibilityLabel = statusAndProgressLabelOverride ? statusAndProgressLabelOverride : getDefaultAccessibilityLabel(i18n, progress, status);\n  var accessibilityMarkup = Boolean(accessibilityLabel) && /*#__PURE__*/React.createElement(VisuallyHidden, null, accessibilityLabel);\n\n  if (progress && !icon) {\n    accessibilityMarkup = /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.PipContainer\n    }, /*#__PURE__*/React.createElement(Pip, {\n      progress: progress,\n      status: status,\n      accessibilityLabelOverride: accessibilityLabel\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: className\n  }, accessibilityMarkup, icon && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: icon\n  })), children && /*#__PURE__*/React.createElement(\"span\", null, children));\n}\n\nBadge.Pip = Pip;\nexport { Badge };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Badge/Badge.js"],"names":["React","useContext","classNames","variationName","WithinFilterContext","styles","getDefaultAccessibilityLabel","Pip","Icon","useI18n","VisuallyHidden","DEFAULT_SIZE","Badge","children","status","progress","icon","size","statusAndProgressLabelOverride","i18n","withinFilter","className","accessibilityLabel","accessibilityMarkup","Boolean","createElement","PipContainer","accessibilityLabelOverride","source"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,4BAAT,QAA6C,YAA7C;AACA,SAASC,GAAT,QAAoB,yBAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,cAAT,QAA+B,qCAA/B;AAEA,IAAMC,YAAY,GAAG,QAArB;;AACA,SAASC,KAAT,OAOG;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHDC,IAGC,QAHDA,IAGC;AAAA,uBAFDC,IAEC;AAAA,MAFDA,IAEC,0BAFMN,YAEN;AAAA,MADDO,8BACC,QADDA,8BACC;AACD,MAAMC,IAAI,GAAGV,OAAO,EAApB;AACA,MAAMW,YAAY,GAAGnB,UAAU,CAACG,mBAAD,CAA/B;AACA,MAAMiB,SAAS,GAAGnB,UAAU,CAACG,MAAM,CAACO,KAAR,EAAeE,MAAM,IAAIT,MAAM,CAACF,aAAa,CAAC,QAAD,EAAWW,MAAX,CAAd,CAA/B,EAAkEE,IAAI,IAAIX,MAAM,CAACW,IAAjF,EAAuFC,IAAI,IAAIA,IAAI,KAAKN,YAAjB,IAAiCN,MAAM,CAACF,aAAa,CAAC,MAAD,EAASc,IAAT,CAAd,CAA9H,EAA6JG,YAAY,IAAIf,MAAM,CAACe,YAApL,CAA5B;AACA,MAAME,kBAAkB,GAAGJ,8BAA8B,GAAGA,8BAAH,GAAoCZ,4BAA4B,CAACa,IAAD,EAAOJ,QAAP,EAAiBD,MAAjB,CAAzH;AACA,MAAIS,mBAAmB,GAAGC,OAAO,CAACF,kBAAD,CAAP,IAA+B,aAAatB,KAAK,CAACyB,aAAN,CAAoBf,cAApB,EAAoC,IAApC,EAA0CY,kBAA1C,CAAtE;;AAEA,MAAIP,QAAQ,IAAI,CAACC,IAAjB,EAAuB;AACrBO,IAAAA,mBAAmB,GAAG,aAAavB,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;AAC7DJ,MAAAA,SAAS,EAAEhB,MAAM,CAACqB;AAD2C,KAA5B,EAEhC,aAAa1B,KAAK,CAACyB,aAAN,CAAoBlB,GAApB,EAAyB;AACvCQ,MAAAA,QAAQ,EAAEA,QAD6B;AAEvCD,MAAAA,MAAM,EAAEA,MAF+B;AAGvCa,MAAAA,0BAA0B,EAAEL;AAHW,KAAzB,CAFmB,CAAnC;AAOD;;AAED,SAAO,aAAatB,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;AAC9CJ,IAAAA,SAAS,EAAEA;AADmC,GAA5B,EAEjBE,mBAFiB,EAEIP,IAAI,IAAI,aAAahB,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B;AACvEJ,IAAAA,SAAS,EAAEhB,MAAM,CAACG;AADqD,GAA5B,EAE1C,aAAaR,KAAK,CAACyB,aAAN,CAAoBjB,IAApB,EAA0B;AACxCoB,IAAAA,MAAM,EAAEZ;AADgC,GAA1B,CAF6B,CAFzB,EAMfH,QAAQ,IAAI,aAAab,KAAK,CAACyB,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkCZ,QAAlC,CANV,CAApB;AAOD;;AACDD,KAAK,CAACL,GAAN,GAAYA,GAAZ;AAEA,SAASK,KAAT","sourcesContent":["import React, { useContext } from 'react';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { WithinFilterContext } from '../../utilities/within-filter-context.js';\nimport styles from './Badge.scss.js';\nimport { getDefaultAccessibilityLabel } from './utils.js';\nimport { Pip } from './components/Pip/Pip.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\n\nconst DEFAULT_SIZE = 'medium';\nfunction Badge({\n  children,\n  status,\n  progress,\n  icon,\n  size = DEFAULT_SIZE,\n  statusAndProgressLabelOverride\n}) {\n  const i18n = useI18n();\n  const withinFilter = useContext(WithinFilterContext);\n  const className = classNames(styles.Badge, status && styles[variationName('status', status)], icon && styles.icon, size && size !== DEFAULT_SIZE && styles[variationName('size', size)], withinFilter && styles.withinFilter);\n  const accessibilityLabel = statusAndProgressLabelOverride ? statusAndProgressLabelOverride : getDefaultAccessibilityLabel(i18n, progress, status);\n  let accessibilityMarkup = Boolean(accessibilityLabel) && /*#__PURE__*/React.createElement(VisuallyHidden, null, accessibilityLabel);\n\n  if (progress && !icon) {\n    accessibilityMarkup = /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.PipContainer\n    }, /*#__PURE__*/React.createElement(Pip, {\n      progress: progress,\n      status: status,\n      accessibilityLabelOverride: accessibilityLabel\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: className\n  }, accessibilityMarkup, icon && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: icon\n  })), children && /*#__PURE__*/React.createElement(\"span\", null, children));\n}\nBadge.Pip = Pip;\n\nexport { Badge };\n"]},"metadata":{},"sourceType":"module"}