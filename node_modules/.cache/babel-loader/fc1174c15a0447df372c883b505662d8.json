{"ast":null,"code":"import _slicedToArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useRef, useState } from 'react';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './RadioButton.scss.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { Choice, helpTextID } from '../Choice/Choice.js';\n\nfunction RadioButton(_ref) {\n  var ariaDescribedByProp = _ref.ariaDescribedBy,\n      label = _ref.label,\n      labelHidden = _ref.labelHidden,\n      helpText = _ref.helpText,\n      checked = _ref.checked,\n      disabled = _ref.disabled,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      idProp = _ref.id,\n      nameProp = _ref.name,\n      value = _ref.value;\n  var id = useUniqueId('RadioButton', idProp);\n  var name = nameProp || id;\n  var inputNode = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyFocused = _useState2[0],\n      setKeyFocused = _useState2[1];\n\n  var _useToggle = useToggle(false),\n      mouseOver = _useToggle.value,\n      handleMouseOver = _useToggle.setTrue,\n      handleMouseOut = _useToggle.setFalse;\n\n  var handleKeyUp = function handleKeyUp() {\n    !keyFocused && setKeyFocused(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    onBlur && onBlur();\n    setKeyFocused(false);\n  };\n\n  function handleChange(_ref2) {\n    var currentTarget = _ref2.currentTarget;\n    onChange && onChange(currentTarget.checked, id);\n  }\n\n  var describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (ariaDescribedByProp) {\n    describedBy.push(ariaDescribedByProp);\n  }\n\n  var ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  var inputClassName = classNames(styles.Input, keyFocused && styles.keyFocused);\n  var backdropClassName = classNames(styles.Backdrop, mouseOver && styles.hover);\n  return /*#__PURE__*/React.createElement(Choice, {\n    label: label,\n    labelHidden: labelHidden,\n    disabled: disabled,\n    id: id,\n    helpText: helpText,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.RadioButton\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    name: name,\n    value: value,\n    type: \"radio\",\n    checked: checked,\n    disabled: disabled,\n    className: inputClassName,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    \"aria-describedby\": ariaDescribedBy,\n    ref: inputNode\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: backdropClassName\n  })));\n}\n\nexport { RadioButton };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.js"],"names":["React","useRef","useState","useToggle","classNames","styles","useUniqueId","Choice","helpTextID","RadioButton","ariaDescribedByProp","ariaDescribedBy","label","labelHidden","helpText","checked","disabled","onChange","onFocus","onBlur","idProp","id","nameProp","name","value","inputNode","keyFocused","setKeyFocused","mouseOver","handleMouseOver","setTrue","handleMouseOut","setFalse","handleKeyUp","handleBlur","handleChange","currentTarget","describedBy","push","length","join","undefined","inputClassName","Input","backdropClassName","Backdrop","hover","createElement","onMouseOver","onMouseOut","className","type","onKeyUp","ref"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './RadioButton.scss.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { Choice, helpTextID } from '../Choice/Choice.js';\n\nfunction RadioButton({\n  ariaDescribedBy: ariaDescribedByProp,\n  label,\n  labelHidden,\n  helpText,\n  checked,\n  disabled,\n  onChange,\n  onFocus,\n  onBlur,\n  id: idProp,\n  name: nameProp,\n  value\n}) {\n  const id = useUniqueId('RadioButton', idProp);\n  const name = nameProp || id;\n  const inputNode = useRef(null);\n  const [keyFocused, setKeyFocused] = useState(false);\n  const {\n    value: mouseOver,\n    setTrue: handleMouseOver,\n    setFalse: handleMouseOut\n  } = useToggle(false);\n\n  const handleKeyUp = () => {\n    !keyFocused && setKeyFocused(true);\n  };\n\n  const handleBlur = () => {\n    onBlur && onBlur();\n    setKeyFocused(false);\n  };\n\n  function handleChange({\n    currentTarget\n  }) {\n    onChange && onChange(currentTarget.checked, id);\n  }\n\n  const describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (ariaDescribedByProp) {\n    describedBy.push(ariaDescribedByProp);\n  }\n\n  const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  const inputClassName = classNames(styles.Input, keyFocused && styles.keyFocused);\n  const backdropClassName = classNames(styles.Backdrop, mouseOver && styles.hover);\n  return /*#__PURE__*/React.createElement(Choice, {\n    label: label,\n    labelHidden: labelHidden,\n    disabled: disabled,\n    id: id,\n    helpText: helpText,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.RadioButton\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    name: name,\n    value: value,\n    type: \"radio\",\n    checked: checked,\n    disabled: disabled,\n    className: inputClassName,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    \"aria-describedby\": ariaDescribedBy,\n    ref: inputNode\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: backdropClassName\n  })));\n}\n\nexport { RadioButton };\n"]},"metadata":{},"sourceType":"module"}