{"ast":null,"code":"let StatusValue; // uses template literal types to get the string representation of the values of the FieldsMap enums\n\n(function (StatusValue) {\n  StatusValue[\"Info\"] = \"info\";\n  StatusValue[\"Success\"] = \"success\";\n  StatusValue[\"Warning\"] = \"warning\";\n  StatusValue[\"Critical\"] = \"critical\";\n  StatusValue[\"Attention\"] = \"attention\";\n  StatusValue[\"New\"] = \"new\";\n})(StatusValue || (StatusValue = {}));\n\nlet ProgressValue;\n\n(function (ProgressValue) {\n  ProgressValue[\"Incomplete\"] = \"incomplete\";\n  ProgressValue[\"PartiallyComplete\"] = \"partiallyComplete\";\n  ProgressValue[\"Complete\"] = \"complete\";\n})(ProgressValue || (ProgressValue = {}));\n\nexport { ProgressValue, StatusValue };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Badge/types.js"],"names":["StatusValue","ProgressValue"],"mappings":"AAAA,IAAIA,WAAJ,C,CAAiB;;AAEjB,CAAC,UAAUA,WAAV,EAAuB;AACtBA,EAAAA,WAAW,CAAC,MAAD,CAAX,GAAsB,MAAtB;AACAA,EAAAA,WAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACAA,EAAAA,WAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACAA,EAAAA,WAAW,CAAC,UAAD,CAAX,GAA0B,UAA1B;AACAA,EAAAA,WAAW,CAAC,WAAD,CAAX,GAA2B,WAA3B;AACAA,EAAAA,WAAW,CAAC,KAAD,CAAX,GAAqB,KAArB;AACD,CAPD,EAOGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAPd;;AASA,IAAIC,aAAJ;;AAEA,CAAC,UAAUA,aAAV,EAAyB;AACxBA,EAAAA,aAAa,CAAC,YAAD,CAAb,GAA8B,YAA9B;AACAA,EAAAA,aAAa,CAAC,mBAAD,CAAb,GAAqC,mBAArC;AACAA,EAAAA,aAAa,CAAC,UAAD,CAAb,GAA4B,UAA5B;AACD,CAJD,EAIGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAJhB;;AAMA,SAASA,aAAT,EAAwBD,WAAxB","sourcesContent":["let StatusValue; // uses template literal types to get the string representation of the values of the FieldsMap enums\n\n(function (StatusValue) {\n  StatusValue[\"Info\"] = \"info\";\n  StatusValue[\"Success\"] = \"success\";\n  StatusValue[\"Warning\"] = \"warning\";\n  StatusValue[\"Critical\"] = \"critical\";\n  StatusValue[\"Attention\"] = \"attention\";\n  StatusValue[\"New\"] = \"new\";\n})(StatusValue || (StatusValue = {}));\n\nlet ProgressValue;\n\n(function (ProgressValue) {\n  ProgressValue[\"Incomplete\"] = \"incomplete\";\n  ProgressValue[\"PartiallyComplete\"] = \"partiallyComplete\";\n  ProgressValue[\"Complete\"] = \"complete\";\n})(ProgressValue || (ProgressValue = {}));\n\nexport { ProgressValue, StatusValue };\n"]},"metadata":{},"sourceType":"module"}