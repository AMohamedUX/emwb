{"ast":null,"code":"import _toConsumableArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { isSection } from '../../utilities/options.js';\nimport styles from './Autocomplete.scss.js';\nimport { MappedOption } from './components/MappedOption/MappedOption.js';\nimport { Listbox, AutoSelection } from '../Listbox/Listbox.js';\nimport { Combobox } from '../Combobox/Combobox.js';\nimport { MappedAction } from './components/MappedAction/MappedAction.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js'; // TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\n\nvar Autocomplete = function Autocomplete(_ref) {\n  var options = _ref.options,\n      selected = _ref.selected,\n      textField = _ref.textField,\n      preferredPosition = _ref.preferredPosition,\n      listTitle = _ref.listTitle,\n      allowMultiple = _ref.allowMultiple,\n      loading = _ref.loading,\n      actionBefore = _ref.actionBefore,\n      willLoadMoreResults = _ref.willLoadMoreResults,\n      emptyState = _ref.emptyState,\n      onSelect = _ref.onSelect,\n      onLoadMoreResults = _ref.onLoadMoreResults;\n  var i18n = useI18n();\n  var buildMappedOptionFromOption = useCallback(function (options) {\n    return options.map(function (option) {\n      return /*#__PURE__*/React.createElement(MappedOption, Object.assign({\n        key: option.id || option.value\n      }, option, {\n        selected: selected.includes(option.value),\n        singleSelection: !allowMultiple\n      }));\n    });\n  }, [selected, allowMultiple]);\n  var optionsMarkup = useMemo(function () {\n    var conditionalOptions = loading && !willLoadMoreResults ? [] : options;\n\n    if (isSection(conditionalOptions)) {\n      var noOptionsAvailable = conditionalOptions.every(function (_ref2) {\n        var options = _ref2.options;\n        return options.length === 0;\n      });\n\n      if (noOptionsAvailable) {\n        return null;\n      }\n\n      var _optionsMarkup = conditionalOptions.map(function (_ref3) {\n        var options = _ref3.options,\n            title = _ref3.title;\n\n        if (options.length === 0) {\n          return null;\n        }\n\n        var optionMarkup = buildMappedOptionFromOption(options);\n        return /*#__PURE__*/React.createElement(Listbox.Section, {\n          divider: false,\n          title: /*#__PURE__*/React.createElement(Listbox.Header, null, title),\n          key: title\n        }, optionMarkup);\n      });\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.SectionWrapper\n      }, _optionsMarkup);\n    }\n\n    var optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;\n\n    if (listTitle) {\n      return /*#__PURE__*/React.createElement(Listbox.Section, {\n        divider: false,\n        title: /*#__PURE__*/React.createElement(Listbox.Header, null, listTitle)\n      }, optionList);\n    }\n\n    return optionList;\n  }, [listTitle, loading, options, willLoadMoreResults, buildMappedOptionFromOption]);\n  var loadingMarkup = loading ? /*#__PURE__*/React.createElement(Listbox.Loading, {\n    accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\n  }) : null;\n  var updateSelection = useCallback(function (newSelection) {\n    if (allowMultiple) {\n      if (selected.includes(newSelection)) {\n        onSelect(selected.filter(function (option) {\n          return option !== newSelection;\n        }));\n      } else {\n        onSelect([].concat(_toConsumableArray(selected), [newSelection]));\n      }\n    } else {\n      onSelect([newSelection]);\n    }\n  }, [allowMultiple, onSelect, selected]);\n  var actionMarkup = actionBefore && /*#__PURE__*/React.createElement(MappedAction, actionBefore);\n  var emptyStateMarkup = emptyState && options.length < 1 && !loading && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"status\"\n  }, emptyState);\n  var autoSelection = actionBefore ? AutoSelection.First : undefined;\n  return /*#__PURE__*/React.createElement(Combobox, {\n    activator: textField,\n    allowMultiple: allowMultiple,\n    onScrolledToBottom: onLoadMoreResults,\n    preferredPosition: preferredPosition,\n    willLoadMoreOptions: willLoadMoreResults\n  }, actionMarkup || optionsMarkup || loadingMarkup || emptyStateMarkup ? /*#__PURE__*/React.createElement(Listbox, {\n    autoSelection: autoSelection,\n    onSelect: updateSelection\n  }, actionMarkup, optionsMarkup && (!loading || willLoadMoreResults) ? optionsMarkup : null, loadingMarkup, emptyStateMarkup) : null);\n};\n\nAutocomplete.TextField = Combobox.TextField;\nexport { Autocomplete };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.js"],"names":["React","useCallback","useMemo","isSection","styles","MappedOption","Listbox","AutoSelection","Combobox","MappedAction","useI18n","Autocomplete","options","selected","textField","preferredPosition","listTitle","allowMultiple","loading","actionBefore","willLoadMoreResults","emptyState","onSelect","onLoadMoreResults","i18n","buildMappedOptionFromOption","map","option","createElement","Object","assign","key","id","value","includes","singleSelection","optionsMarkup","conditionalOptions","noOptionsAvailable","every","length","title","optionMarkup","Section","divider","Header","className","SectionWrapper","optionList","loadingMarkup","Loading","accessibilityLabel","translate","updateSelection","newSelection","filter","actionMarkup","emptyStateMarkup","role","autoSelection","First","undefined","activator","onScrolledToBottom","willLoadMoreOptions","TextField"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { isSection } from '../../utilities/options.js';\nimport styles from './Autocomplete.scss.js';\nimport { MappedOption } from './components/MappedOption/MappedOption.js';\nimport { Listbox, AutoSelection } from '../Listbox/Listbox.js';\nimport { Combobox } from '../Combobox/Combobox.js';\nimport { MappedAction } from './components/MappedAction/MappedAction.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst Autocomplete = function Autocomplete({\n  options,\n  selected,\n  textField,\n  preferredPosition,\n  listTitle,\n  allowMultiple,\n  loading,\n  actionBefore,\n  willLoadMoreResults,\n  emptyState,\n  onSelect,\n  onLoadMoreResults\n}) {\n  const i18n = useI18n();\n  const buildMappedOptionFromOption = useCallback(options => {\n    return options.map(option => /*#__PURE__*/React.createElement(MappedOption, Object.assign({\n      key: option.id || option.value\n    }, option, {\n      selected: selected.includes(option.value),\n      singleSelection: !allowMultiple\n    })));\n  }, [selected, allowMultiple]);\n  const optionsMarkup = useMemo(() => {\n    const conditionalOptions = loading && !willLoadMoreResults ? [] : options;\n\n    if (isSection(conditionalOptions)) {\n      const noOptionsAvailable = conditionalOptions.every(({\n        options\n      }) => options.length === 0);\n\n      if (noOptionsAvailable) {\n        return null;\n      }\n\n      const optionsMarkup = conditionalOptions.map(({\n        options,\n        title\n      }) => {\n        if (options.length === 0) {\n          return null;\n        }\n\n        const optionMarkup = buildMappedOptionFromOption(options);\n        return /*#__PURE__*/React.createElement(Listbox.Section, {\n          divider: false,\n          title: /*#__PURE__*/React.createElement(Listbox.Header, null, title),\n          key: title\n        }, optionMarkup);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.SectionWrapper\n      }, optionsMarkup);\n    }\n\n    const optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;\n\n    if (listTitle) {\n      return /*#__PURE__*/React.createElement(Listbox.Section, {\n        divider: false,\n        title: /*#__PURE__*/React.createElement(Listbox.Header, null, listTitle)\n      }, optionList);\n    }\n\n    return optionList;\n  }, [listTitle, loading, options, willLoadMoreResults, buildMappedOptionFromOption]);\n  const loadingMarkup = loading ? /*#__PURE__*/React.createElement(Listbox.Loading, {\n    accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\n  }) : null;\n  const updateSelection = useCallback(newSelection => {\n    if (allowMultiple) {\n      if (selected.includes(newSelection)) {\n        onSelect(selected.filter(option => option !== newSelection));\n      } else {\n        onSelect([...selected, newSelection]);\n      }\n    } else {\n      onSelect([newSelection]);\n    }\n  }, [allowMultiple, onSelect, selected]);\n  const actionMarkup = actionBefore && /*#__PURE__*/React.createElement(MappedAction, actionBefore);\n  const emptyStateMarkup = emptyState && options.length < 1 && !loading && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"status\"\n  }, emptyState);\n  const autoSelection = actionBefore ? AutoSelection.First : undefined;\n  return /*#__PURE__*/React.createElement(Combobox, {\n    activator: textField,\n    allowMultiple: allowMultiple,\n    onScrolledToBottom: onLoadMoreResults,\n    preferredPosition: preferredPosition,\n    willLoadMoreOptions: willLoadMoreResults\n  }, actionMarkup || optionsMarkup || loadingMarkup || emptyStateMarkup ? /*#__PURE__*/React.createElement(Listbox, {\n    autoSelection: autoSelection,\n    onSelect: updateSelection\n  }, actionMarkup, optionsMarkup && (!loading || willLoadMoreResults) ? optionsMarkup : null, loadingMarkup, emptyStateMarkup) : null);\n};\nAutocomplete.TextField = Combobox.TextField;\n\nexport { Autocomplete };\n"]},"metadata":{},"sourceType":"module"}