{"ast":null,"code":"import React from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './Labelled.scss.js';\nimport { InlineError } from '../InlineError/InlineError.js';\nimport { Label } from '../Label/Label.js';\nexport { labelID } from '../Label/Label.js';\nimport { buttonFrom } from '../Button/utils.js';\n\nfunction Labelled(_ref) {\n  let {\n    id,\n    label,\n    error,\n    action,\n    helpText,\n    children,\n    labelHidden,\n    requiredIndicator,\n    ...rest\n  } = _ref;\n  const className = classNames(labelHidden && styles.hidden);\n  const actionMarkup = action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Action\n  }, buttonFrom(action, {\n    plain: true\n  })) : null;\n  const helpTextMarkup = helpText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HelpText,\n    id: helpTextID(id)\n  }, helpText) : null;\n  const errorMarkup = error && typeof error !== 'boolean' && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Error\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: id\n  }));\n  const labelMarkup = label ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LabelWrapper\n  }, /*#__PURE__*/React.createElement(Label, Object.assign({\n    id: id,\n    requiredIndicator: requiredIndicator\n  }, rest, {\n    hidden: false\n  }), label), actionMarkup) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, labelMarkup, children, errorMarkup, helpTextMarkup);\n}\n\nfunction helpTextID(id) {\n  return `${id}HelpText`;\n}\n\nexport { Labelled, helpTextID };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.js"],"names":["React","classNames","styles","InlineError","Label","labelID","buttonFrom","Labelled","id","label","error","action","helpText","children","labelHidden","requiredIndicator","rest","className","hidden","actionMarkup","createElement","Action","plain","helpTextMarkup","HelpText","helpTextID","errorMarkup","Error","message","fieldID","labelMarkup","LabelWrapper","Object","assign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,SAASC,QAAT,OAUG;AAAA,MAVe;AAChBC,IAAAA,EADgB;AAEhBC,IAAAA,KAFgB;AAGhBC,IAAAA,KAHgB;AAIhBC,IAAAA,MAJgB;AAKhBC,IAAAA,QALgB;AAMhBC,IAAAA,QANgB;AAOhBC,IAAAA,WAPgB;AAQhBC,IAAAA,iBARgB;AAShB,OAAGC;AATa,GAUf;AACD,QAAMC,SAAS,GAAGhB,UAAU,CAACa,WAAW,IAAIZ,MAAM,CAACgB,MAAvB,CAA5B;AACA,QAAMC,YAAY,GAAGR,MAAM,GAAG,aAAaX,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AACpEH,IAAAA,SAAS,EAAEf,MAAM,CAACmB;AADkD,GAA3B,EAExCf,UAAU,CAACK,MAAD,EAAS;AACpBW,IAAAA,KAAK,EAAE;AADa,GAAT,CAF8B,CAAhB,GAIrB,IAJN;AAKA,QAAMC,cAAc,GAAGX,QAAQ,GAAG,aAAaZ,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AACxEH,IAAAA,SAAS,EAAEf,MAAM,CAACsB,QADsD;AAExEhB,IAAAA,EAAE,EAAEiB,UAAU,CAACjB,EAAD;AAF0D,GAA3B,EAG5CI,QAH4C,CAAhB,GAGhB,IAHf;AAIA,QAAMc,WAAW,GAAGhB,KAAK,IAAI,OAAOA,KAAP,KAAiB,SAA1B,IAAuC,aAAaV,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AACjGH,IAAAA,SAAS,EAAEf,MAAM,CAACyB;AAD+E,GAA3B,EAErE,aAAa3B,KAAK,CAACoB,aAAN,CAAoBjB,WAApB,EAAiC;AAC/CyB,IAAAA,OAAO,EAAElB,KADsC;AAE/CmB,IAAAA,OAAO,EAAErB;AAFsC,GAAjC,CAFwD,CAAxE;AAMA,QAAMsB,WAAW,GAAGrB,KAAK,GAAG,aAAaT,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAClEH,IAAAA,SAAS,EAAEf,MAAM,CAAC6B;AADgD,GAA3B,EAEtC,aAAa/B,KAAK,CAACoB,aAAN,CAAoBhB,KAApB,EAA2B4B,MAAM,CAACC,MAAP,CAAc;AACvDzB,IAAAA,EAAE,EAAEA,EADmD;AAEvDO,IAAAA,iBAAiB,EAAEA;AAFoC,GAAd,EAGxCC,IAHwC,EAGlC;AACPE,IAAAA,MAAM,EAAE;AADD,GAHkC,CAA3B,EAKZT,KALY,CAFyB,EAO7BU,YAP6B,CAAhB,GAOG,IAP5B;AAQA,SAAO,aAAanB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAC7CH,IAAAA,SAAS,EAAEA;AADkC,GAA3B,EAEjBa,WAFiB,EAEJjB,QAFI,EAEMa,WAFN,EAEmBH,cAFnB,CAApB;AAGD;;AACD,SAASE,UAAT,CAAoBjB,EAApB,EAAwB;AACtB,SAAQ,GAAEA,EAAG,UAAb;AACD;;AAED,SAASD,QAAT,EAAmBkB,UAAnB","sourcesContent":["import React from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './Labelled.scss.js';\nimport { InlineError } from '../InlineError/InlineError.js';\nimport { Label } from '../Label/Label.js';\nexport { labelID } from '../Label/Label.js';\nimport { buttonFrom } from '../Button/utils.js';\n\nfunction Labelled({\n  id,\n  label,\n  error,\n  action,\n  helpText,\n  children,\n  labelHidden,\n  requiredIndicator,\n  ...rest\n}) {\n  const className = classNames(labelHidden && styles.hidden);\n  const actionMarkup = action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Action\n  }, buttonFrom(action, {\n    plain: true\n  })) : null;\n  const helpTextMarkup = helpText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.HelpText,\n    id: helpTextID(id)\n  }, helpText) : null;\n  const errorMarkup = error && typeof error !== 'boolean' && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Error\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: id\n  }));\n  const labelMarkup = label ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LabelWrapper\n  }, /*#__PURE__*/React.createElement(Label, Object.assign({\n    id: id,\n    requiredIndicator: requiredIndicator\n  }, rest, {\n    hidden: false\n  }), label), actionMarkup) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, labelMarkup, children, errorMarkup, helpTextMarkup);\n}\nfunction helpTextID(id) {\n  return `${id}HelpText`;\n}\n\nexport { Labelled, helpTextID };\n"]},"metadata":{},"sourceType":"module"}