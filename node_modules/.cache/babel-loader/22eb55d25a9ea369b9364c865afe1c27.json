{"ast":null,"code":"import { useRef } from 'react';\nimport { useIsAfterInitialMount } from './use-is-after-initial-mount.js';\n/**\n * Similarly to the life-cycle method componentDidMount, useComponentDidMount\n * will be invoked after the component has mounted, and only the initial mount.\n * @param callback Defines a callback to invoke once the component has\n * initially mounted.\n * @example\n * function Playground({active}) {\n *  useComponentDidMount(() => {\n *    if (active) {\n *      console.warning(`Component has mounted.`);\n *    }\n *  });\n *\n *  return null;\n * }\n */\n\nfunction useComponentDidMount(callback) {\n  var isAfterInitialMount = useIsAfterInitialMount();\n  var hasInvokedLifeCycle = useRef(false);\n\n  if (isAfterInitialMount && !hasInvokedLifeCycle.current) {\n    hasInvokedLifeCycle.current = true;\n    return callback();\n  }\n}\n\nexport { useComponentDidMount };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/utilities/use-component-did-mount.js"],"names":["useRef","useIsAfterInitialMount","useComponentDidMount","callback","isAfterInitialMount","hasInvokedLifeCycle","current"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,sBAAT,QAAuC,iCAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,MAAMC,mBAAmB,GAAGH,sBAAsB,EAAlD;AACA,MAAMI,mBAAmB,GAAGL,MAAM,CAAC,KAAD,CAAlC;;AAEA,MAAII,mBAAmB,IAAI,CAACC,mBAAmB,CAACC,OAAhD,EAAyD;AACvDD,IAAAA,mBAAmB,CAACC,OAApB,GAA8B,IAA9B;AACA,WAAOH,QAAQ,EAAf;AACD;AACF;;AAED,SAASD,oBAAT","sourcesContent":["import { useRef } from 'react';\nimport { useIsAfterInitialMount } from './use-is-after-initial-mount.js';\n\n/**\n * Similarly to the life-cycle method componentDidMount, useComponentDidMount\n * will be invoked after the component has mounted, and only the initial mount.\n * @param callback Defines a callback to invoke once the component has\n * initially mounted.\n * @example\n * function Playground({active}) {\n *  useComponentDidMount(() => {\n *    if (active) {\n *      console.warning(`Component has mounted.`);\n *    }\n *  });\n *\n *  return null;\n * }\n */\n\nfunction useComponentDidMount(callback) {\n  const isAfterInitialMount = useIsAfterInitialMount();\n  const hasInvokedLifeCycle = useRef(false);\n\n  if (isAfterInitialMount && !hasInvokedLifeCycle.current) {\n    hasInvokedLifeCycle.current = true;\n    return callback();\n  }\n}\n\nexport { useComponentDidMount };\n"]},"metadata":{},"sourceType":"module"}