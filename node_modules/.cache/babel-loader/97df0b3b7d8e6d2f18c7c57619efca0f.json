{"ast":null,"code":"var _jsxFileName = \"/Users/ayubmohamed/emwb/src/Components/MailingList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { Card, Form, Button, TextField, FormLayout, Heading, TextContainer, Layout } from \"@shopify/polaris\";\nimport AddEmail from \"./AddEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MailingList = () => {\n  _s();\n\n  const [url, setUrl] = useState('');\n  const handleSubmit = useCallback(_event => setUrl(''), []);\n  const handleUrlChange = useCallback(value => setUrl(value), []);\n  const [emails, setEmails] = useState([{\n    id: 1,\n    address: \"contact@emailmywebhooks.com\"\n  }]);\n\n  const AddEmailsToMailingList = () => {\n    setEmails([...emails, {\n      id: Math.floor(Math.random() * 10000) + 1,\n      address: url\n    }]);\n    setUrl(\"\");\n  };\n\n  const deleteEmail = id => {\n    setEmails(emails.filter(email => email.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Layout.Section, {\n      oneHalf: true,\n      children: /*#__PURE__*/_jsxDEV(Card.Section, {\n        children: /*#__PURE__*/_jsxDEV(Card.Section, {\n          children: /*#__PURE__*/_jsxDEV(TextContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              children: \"Mailing list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add email addresses to the mailing list that will receive notifications. Whenever a notification is triggered, an email will be sent to all the addresses on this list.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout.Section, {\n      oneHalf: true,\n      children: [/*#__PURE__*/_jsxDEV(Card.Section, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Section, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(FormLayout, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: url,\n                onChange: handleUrlChange,\n                placeholder: \"Add an email address\",\n                type: \"url\",\n                autoComplete: \"off\",\n                connectedRight: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: AddEmailsToMailingList,\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), emails.map(email => /*#__PURE__*/_jsxDEV(AddEmail, {\n          address: email.address,\n          id: email.id,\n          onDelete: deleteEmail\n        }, email.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Section, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MailingList, \"cGPjGXTlLVgciZAueoKW+T3uy2k=\");\n\n_c = MailingList;\nexport default MailingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailingList\");","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/src/Components/MailingList.jsx"],"names":["useState","useCallback","Card","Form","Button","TextField","FormLayout","Heading","TextContainer","Layout","AddEmail","MailingList","url","setUrl","handleSubmit","_event","handleUrlChange","value","emails","setEmails","id","address","AddEmailsToMailingList","Math","floor","random","deleteEmail","filter","email","map"],"mappings":"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","sourcesContent":["import { useState, useCallback } from \"react\"\nimport { Card, Form, Button, TextField, FormLayout, Heading, TextContainer, Layout } from \"@shopify/polaris\"\nimport AddEmail from \"./AddEmail\";\nconst MailingList = () => {\n    const [url, setUrl] = useState('');\n    const handleSubmit = useCallback((_event) => setUrl(''), []);\n    const handleUrlChange = useCallback((value) => setUrl(value), []);\n\n    const [emails,setEmails] = useState([\n        {\n            id: 1,\n            address: \"contact@emailmywebhooks.com\"\n        },\n    ])\n\n    const AddEmailsToMailingList = () => {\n        setEmails([...emails,{\n            id: Math.floor(Math.random() * 10000) + 1,\n            address: url,\n        }])\n        setUrl(\"\")\n    }\n\n    const deleteEmail = (id) => {\n        setEmails(emails.filter((email)=> email.id !== id))\n    }\n\n    return (\n        <Layout>\n            <Layout.Section oneHalf>\n                <Card.Section>\n                    <Card.Section>\n                        <TextContainer>\n                            <Heading>Mailing list</Heading>\n                            <p>\n                                Add email addresses to the mailing list that will receive notifications. Whenever a notification is triggered, an email will be sent to all the addresses on this list.\n                            </p>\n                        </TextContainer>\n                    </Card.Section>\n                </Card.Section>\n            </Layout.Section>\n            <Layout.Section oneHalf>\n                <Card.Section></Card.Section>\n                <Card>\n                    <Card.Section>\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <FormLayout>\n                                <TextField\n                                    value={url}\n                                    onChange={handleUrlChange}\n                                    placeholder=\"Add an email address\"\n                                    type=\"url\"\n                                    autoComplete=\"off\"\n                                    connectedRight={<Button onClick={AddEmailsToMailingList}>Add</Button>}\n                                />\n                            </FormLayout>\n                        </Form>\n                    </Card.Section>\n                        {emails.map((email) => (\n                            <AddEmail key={email.id} address={email.address} id={email.id} onDelete={deleteEmail}/>\n                        )\n                        )}\n                </Card>\n                <Card.Section></Card.Section>\n            </Layout.Section>\n        </Layout>\n    )\n\n}\n\nexport default MailingList\n"]},"metadata":{},"sourceType":"module"}