{"ast":null,"code":"import _slicedToArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Key } from '../../types.js';\nimport { focusFirstFocusableNode, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode } from '../../utilities/focus.js';\nimport { portal } from '../shared.js';\nimport { useFocusManager } from '../../utilities/focus-manager/hooks.js';\nimport { Focus } from '../Focus/Focus.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { KeypressListener } from '../KeypressListener/KeypressListener.js';\n\nfunction TrapFocus(_ref) {\n  var _ref$trapping = _ref.trapping,\n      trapping = _ref$trapping === void 0 ? true : _ref$trapping,\n      children = _ref.children;\n\n  var _useFocusManager = useFocusManager({\n    trapping: trapping\n  }),\n      canSafelyFocus = _useFocusManager.canSafelyFocus;\n\n  var focusTrapWrapper = useRef(null);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      disableFocus = _useState2[0],\n      setDisableFocus = _useState2[1];\n\n  useEffect(function () {\n    var disable = canSafelyFocus && !(focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement)) ? !trapping : true;\n    setDisableFocus(disable);\n  }, [canSafelyFocus, trapping]);\n\n  var handleFocusIn = function handleFocusIn(event) {\n    var containerContentsHaveFocus = focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement);\n\n    if (trapping === false || !focusTrapWrapper.current || containerContentsHaveFocus || event.target instanceof Element && event.target.matches(\"\".concat(portal.selector, \" *\"))) {\n      return;\n    }\n\n    if (canSafelyFocus && event.target instanceof HTMLElement && focusTrapWrapper.current !== event.target && !focusTrapWrapper.current.contains(event.target)) {\n      focusFirstFocusableNode(focusTrapWrapper.current);\n    }\n  };\n\n  var handleTab = function handleTab(event) {\n    if (trapping === false || !focusTrapWrapper.current) {\n      return;\n    }\n\n    var firstFocusableNode = findFirstKeyboardFocusableNode(focusTrapWrapper.current);\n    var lastFocusableNode = findLastKeyboardFocusableNode(focusTrapWrapper.current);\n\n    if (event.target === lastFocusableNode && !event.shiftKey) {\n      event.preventDefault();\n      focusFirstKeyboardFocusableNode(focusTrapWrapper.current);\n    }\n\n    if (event.target === firstFocusableNode && event.shiftKey) {\n      event.preventDefault();\n      focusLastKeyboardFocusableNode(focusTrapWrapper.current);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Focus, {\n    disabled: disableFocus,\n    root: focusTrapWrapper.current\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: focusTrapWrapper\n  }, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"focusin\",\n    handler: handleFocusIn\n  }), /*#__PURE__*/React.createElement(KeypressListener, {\n    keyCode: Key.Tab,\n    keyEvent: \"keydown\",\n    handler: handleTab\n  }), children));\n}\n\nexport { TrapFocus };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/TrapFocus/TrapFocus.js"],"names":["React","useRef","useState","useEffect","Key","focusFirstFocusableNode","findFirstKeyboardFocusableNode","findLastKeyboardFocusableNode","focusFirstKeyboardFocusableNode","focusLastKeyboardFocusableNode","portal","useFocusManager","Focus","EventListener","KeypressListener","TrapFocus","trapping","children","canSafelyFocus","focusTrapWrapper","disableFocus","setDisableFocus","disable","current","contains","document","activeElement","handleFocusIn","event","containerContentsHaveFocus","target","Element","matches","selector","HTMLElement","handleTab","firstFocusableNode","lastFocusableNode","shiftKey","preventDefault","createElement","disabled","root","ref","handler","keyCode","Tab","keyEvent"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Key } from '../../types.js';\nimport { focusFirstFocusableNode, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode } from '../../utilities/focus.js';\nimport { portal } from '../shared.js';\nimport { useFocusManager } from '../../utilities/focus-manager/hooks.js';\nimport { Focus } from '../Focus/Focus.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { KeypressListener } from '../KeypressListener/KeypressListener.js';\n\nfunction TrapFocus({\n  trapping = true,\n  children\n}) {\n  const {\n    canSafelyFocus\n  } = useFocusManager({\n    trapping\n  });\n  const focusTrapWrapper = useRef(null);\n  const [disableFocus, setDisableFocus] = useState(true);\n  useEffect(() => {\n    const disable = canSafelyFocus && !(focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement)) ? !trapping : true;\n    setDisableFocus(disable);\n  }, [canSafelyFocus, trapping]);\n\n  const handleFocusIn = event => {\n    const containerContentsHaveFocus = focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement);\n\n    if (trapping === false || !focusTrapWrapper.current || containerContentsHaveFocus || event.target instanceof Element && event.target.matches(`${portal.selector} *`)) {\n      return;\n    }\n\n    if (canSafelyFocus && event.target instanceof HTMLElement && focusTrapWrapper.current !== event.target && !focusTrapWrapper.current.contains(event.target)) {\n      focusFirstFocusableNode(focusTrapWrapper.current);\n    }\n  };\n\n  const handleTab = event => {\n    if (trapping === false || !focusTrapWrapper.current) {\n      return;\n    }\n\n    const firstFocusableNode = findFirstKeyboardFocusableNode(focusTrapWrapper.current);\n    const lastFocusableNode = findLastKeyboardFocusableNode(focusTrapWrapper.current);\n\n    if (event.target === lastFocusableNode && !event.shiftKey) {\n      event.preventDefault();\n      focusFirstKeyboardFocusableNode(focusTrapWrapper.current);\n    }\n\n    if (event.target === firstFocusableNode && event.shiftKey) {\n      event.preventDefault();\n      focusLastKeyboardFocusableNode(focusTrapWrapper.current);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Focus, {\n    disabled: disableFocus,\n    root: focusTrapWrapper.current\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: focusTrapWrapper\n  }, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"focusin\",\n    handler: handleFocusIn\n  }), /*#__PURE__*/React.createElement(KeypressListener, {\n    keyCode: Key.Tab,\n    keyEvent: \"keydown\",\n    handler: handleTab\n  }), children));\n}\n\nexport { TrapFocus };\n"]},"metadata":{},"sourceType":"module"}