{"ast":null,"code":"var _jsxFileName = \"/Users/ayubmohamed/emwb/src/Components/NotificationItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { CircleTickOutlineMinor } from '@shopify/polaris-icons';\nimport { Stack, TextContainer, Button, Icon, Card, Sheet } from \"@shopify/polaris\";\nimport EmailPreview from \"./EmailPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationItem = _ref => {\n  _s();\n\n  let {\n    content\n  } = _ref;\n  const [iconValue, setIconValue] = useState(\"base\");\n  const [buttonState, setButtonState] = useState(\"Add\");\n  const [buttonColor, setButtonColor] = useState(false);\n  const [sheetActive, setSheetActive] = useState(false);\n  const toggleSheetActive = useCallback(() => setSheetActive(sheetActive => !sheetActive), []);\n\n  const subscribe = () => {\n    if (iconValue === \"base\") {\n      setButtonColor(true);\n      setButtonState(\"Delete\");\n      setIconValue(\"high\");\n    } else {\n      setButtonColor(false);\n      setButtonState(\"Add\");\n      setIconValue(\"base\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card.Section, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Stack.Item, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          source: CircleTickOutlineMinor,\n          color: iconValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n        fill: true,\n        children: /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Sheet, {\n          open: sheetActive,\n          onClose: toggleSheetActive,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sectioned: true,\n            title: \"Advanced Email Template Preview\",\n            actions: [{\n              content: \"Upgrade Now\"\n            }],\n            children: [/*#__PURE__*/_jsxDEV(EmailPreview, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: toggleSheetActive,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleSheetActive,\n          plain: true,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: subscribe,\n          plain: true,\n          destructive: buttonColor,\n          children: buttonState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationItem, \"30SydNswCVe9ZDKBcA0ZYrf08fc=\");\n\n_c = NotificationItem;\nexport default NotificationItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationItem\");","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/src/Components/NotificationItem.jsx"],"names":["React","useState","useCallback","CircleTickOutlineMinor","Stack","TextContainer","Button","Icon","Card","Sheet","EmailPreview","NotificationItem","content","iconValue","setIconValue","buttonState","setButtonState","buttonColor","setButtonColor","sheetActive","setSheetActive","toggleSheetActive","subscribe"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { CircleTickOutlineMinor } from '@shopify/polaris-icons';\nimport { Stack, TextContainer, Button, Icon, Card, Sheet } from \"@shopify/polaris\";\nimport EmailPreview from \"./EmailPreview\";\nconst NotificationItem = ({ content }) => {\n    const [iconValue, setIconValue] = useState(\"base\")\n    const [buttonState, setButtonState] = useState(\"Add\")\n    const [buttonColor, setButtonColor] = useState(false)\n\n    const [sheetActive, setSheetActive] = useState(false);\n    const toggleSheetActive = useCallback(\n        () => setSheetActive((sheetActive) => !sheetActive),\n        [],\n    );\n\n    const subscribe = () => {\n        if (iconValue === \"base\") {\n            setButtonColor(true)\n            setButtonState(\"Delete\")\n            setIconValue(\"high\")\n        } else {\n            setButtonColor(false)\n            setButtonState(\"Add\")\n            setIconValue(\"base\")\n        }\n    }\n\n    return (\n        <Card.Section>\n            <Stack>\n                <Stack.Item>\n                    <Icon\n                        source={CircleTickOutlineMinor}\n                        color={iconValue} />\n                </Stack.Item>\n                <Stack.Item fill>\n                    <TextContainer>{content}</TextContainer>\n                </Stack.Item>\n                <Stack.Item>\n                    <Sheet\n                        open={sheetActive}\n                        onClose={toggleSheetActive}\n                    >\n                        <Card sectioned title=\"Advanced Email Template Preview\" actions={[{content:\"Upgrade Now\"}]}>\n                        <EmailPreview />\n                        <Button primary onClick={toggleSheetActive}>\n                            Done\n                        </Button>\n                        </Card>\n                        \n                    </Sheet>\n                    <Button onClick={toggleSheetActive} plain>Preview</Button>\n                </Stack.Item>\n                <Stack.Item>\n                    <Button onClick={subscribe} plain destructive={buttonColor}>{buttonState}</Button>\n                </Stack.Item>\n            </Stack>\n        </Card.Section>\n    )\n}\n\nexport default NotificationItem"]},"metadata":{},"sourceType":"module"}