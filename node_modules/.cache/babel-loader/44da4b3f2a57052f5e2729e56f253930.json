{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport React, { PureComponent, createRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Button } from '../Button/Button.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.js';\nimport { tokens } from '../../tokens/tokens.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nvar MAX_PROMOTED_ACTIONS = 2;\nvar slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nvar BulkActionsInner = /*#__PURE__*/function (_PureComponent) {\n  _inherits(BulkActionsInner, _PureComponent);\n\n  var _super = _createSuper(BulkActionsInner);\n\n  function BulkActionsInner() {\n    var _this;\n\n    _classCallCheck(this, BulkActionsInner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    _this.containerNode = null;\n    _this.largeScreenButtonsNode = null;\n    _this.moreActionsNode = null;\n    _this.checkableWrapperNode = /*#__PURE__*/createRef();\n    _this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    _this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    _this.promotedActionsWidths = [];\n    _this.bulkActionsWidth = 0;\n    _this.addedMoreActionsWidthForMeasuring = 0;\n    _this.handleResize = debounce(function () {\n      var _this$state = _this.state,\n          smallScreenPopoverVisible = _this$state.smallScreenPopoverVisible,\n          largeScreenPopoverVisible = _this$state.largeScreenPopoverVisible;\n\n      if (_this.containerNode) {\n        var containerWidth = _this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          _this.setState({\n            containerWidth: containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        _this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    _this.setLargeScreenButtonsNode = function (node) {\n      _this.largeScreenButtonsNode = node;\n    };\n\n    _this.setContainerNode = function (node) {\n      _this.containerNode = node;\n    };\n\n    _this.setMoreActionsNode = function (node) {\n      _this.moreActionsNode = node;\n    };\n\n    _this.setSelectMode = function (val) {\n      var onSelectModeToggle = _this.props.onSelectModeToggle;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    _this.toggleSmallScreenPopover = function () {\n      if (_this.props.onMoreActionPopoverToggle) {\n        _this.props.onMoreActionPopoverToggle(_this.state.smallScreenPopoverVisible);\n      }\n\n      _this.setState(function (_ref) {\n        var smallScreenPopoverVisible = _ref.smallScreenPopoverVisible;\n        return {\n          smallScreenPopoverVisible: !smallScreenPopoverVisible\n        };\n      });\n    };\n\n    _this.toggleLargeScreenPopover = function () {\n      if (_this.props.onMoreActionPopoverToggle) {\n        _this.props.onMoreActionPopoverToggle(_this.state.largeScreenPopoverVisible);\n      }\n\n      _this.setState(function (_ref2) {\n        var largeScreenPopoverVisible = _ref2.largeScreenPopoverVisible;\n        return {\n          largeScreenPopoverVisible: !largeScreenPopoverVisible\n        };\n      });\n    };\n\n    _this.handleMeasurement = function (width) {\n      var measuring = _this.state.measuring;\n\n      if (measuring) {\n        _this.promotedActionsWidths.push(width);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BulkActionsInner, [{\n    key: \"numberOfPromotedActionsToRender\",\n    value: function numberOfPromotedActionsToRender() {\n      var promotedActions = this.props.promotedActions;\n      var _this$state2 = this.state,\n          containerWidth = _this$state2.containerWidth,\n          measuring = _this$state2.measuring;\n\n      if (!promotedActions) {\n        return 0;\n      }\n\n      if (containerWidth >= this.bulkActionsWidth || measuring) {\n        return promotedActions.length;\n      }\n\n      var sufficientSpace = false;\n      var counter = promotedActions.length - 1;\n      var totalWidth = 0;\n\n      while (!sufficientSpace && counter >= 0) {\n        totalWidth += this.promotedActionsWidths[counter];\n        var widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n        if (containerWidth >= widthWithRemovedAction) {\n          sufficientSpace = true;\n        } else {\n          counter--;\n        }\n      }\n\n      return clamp(counter, 0, promotedActions.length);\n    }\n  }, {\n    key: \"hasActions\",\n    value: function hasActions() {\n      var _this$props = this.props,\n          promotedActions = _this$props.promotedActions,\n          actions = _this$props.actions;\n      return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n    }\n  }, {\n    key: \"actionSections\",\n    value: function actionSections() {\n      var actions = this.props.actions;\n\n      if (!actions || actions.length === 0) {\n        return;\n      }\n\n      if (instanceOfBulkActionListSectionArray(actions)) {\n        return actions;\n      }\n\n      if (instanceOfBulkActionArray(actions)) {\n        return [{\n          items: actions\n        }];\n      }\n    }\n  }, {\n    key: \"rolledInPromotedActions\",\n    value: function rolledInPromotedActions() {\n      var promotedActions = this.props.promotedActions;\n      var numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n\n      if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {\n        return [];\n      }\n\n      var rolledInPromotedActions = promotedActions.map(function (action) {\n        if (instanceOfMenuGroupDescriptor(action)) {\n          return {\n            items: _toConsumableArray(action.actions)\n          };\n        }\n\n        return {\n          items: [action]\n        };\n      });\n      return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);\n    } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          actions = _this$props2.actions,\n          promotedActions = _this$props2.promotedActions;\n\n      if (promotedActions && !actions && this.moreActionsNode) {\n        this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n      }\n\n      this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n      if (this.containerNode) {\n        this.setState({\n          containerWidth: this.containerNode.getBoundingClientRect().width,\n          measuring: false\n        });\n      }\n    } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          selectMode = _this$props3.selectMode,\n          accessibilityLabel = _this$props3.accessibilityLabel,\n          _this$props3$label = _this$props3.label,\n          label = _this$props3$label === void 0 ? '' : _this$props3$label,\n          onToggleAll = _this$props3.onToggleAll,\n          selected = _this$props3.selected,\n          smallScreen = _this$props3.smallScreen,\n          disabled = _this$props3.disabled,\n          promotedActions = _this$props3.promotedActions,\n          _this$props3$paginate = _this$props3.paginatedSelectAllText,\n          paginatedSelectAllText = _this$props3$paginate === void 0 ? null : _this$props3$paginate,\n          paginatedSelectAllAction = _this$props3.paginatedSelectAllAction,\n          i18n = _this$props3.i18n;\n      var actionSections = this.actionSections();\n\n      if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n          maxPromotedActions: MAX_PROMOTED_ACTIONS\n        }));\n      }\n\n      var _this$state3 = this.state,\n          smallScreenPopoverVisible = _this$state3.smallScreenPopoverVisible,\n          largeScreenPopoverVisible = _this$state3.largeScreenPopoverVisible,\n          measuring = _this$state3.measuring;\n      var paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(Button, {\n        onClick: paginatedSelectAllAction.onAction,\n        plain: true,\n        disabled: disabled\n      }, paginatedSelectAllAction.content) : null;\n      var paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-live\": \"polite\"\n      }, paginatedSelectAllText) : paginatedSelectAllText;\n      var paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.PaginatedSelectAll\n      }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n      var cancelButton = /*#__PURE__*/React.createElement(Button, {\n        onClick: this.setSelectMode.bind(this, false),\n        disabled: disabled\n      }, i18n.translate('Polaris.Common.cancel'));\n      var numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n      var allActionsPopover = this.hasActions() ? /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.Popover,\n        ref: this.setMoreActionsNode\n      }, /*#__PURE__*/React.createElement(Popover, {\n        active: smallScreenPopoverVisible,\n        activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n          disclosure: true,\n          onAction: this.toggleSmallScreenPopover,\n          content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n          disabled: disabled,\n          indicator: this.isNewBadgeInBadgeActions()\n        }),\n        onClose: this.toggleSmallScreenPopover\n      }, /*#__PURE__*/React.createElement(ActionList, {\n        items: promotedActions,\n        sections: actionSections,\n        onActionAnyItem: this.toggleSmallScreenPopover\n      }))) : null;\n      var promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? _toConsumableArray(promotedActions).slice(0, numberOfPromotedActionsToRender).map(function (action, index) {\n        if (instanceOfMenuGroupDescriptor(action)) {\n          return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n            key: index\n          }, action, {\n            isNewBadgeInBadgeActions: _this2.isNewBadgeInBadgeActions()\n          }));\n        }\n\n        return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n          key: index,\n          disabled: disabled\n        }, action, {\n          handleMeasurement: _this2.handleMeasurement\n        }));\n      }) : null;\n      var rolledInPromotedActions = this.rolledInPromotedActions();\n      var activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n      var combinedActions = [];\n\n      if (actionSections && rolledInPromotedActions.length > 0) {\n        combinedActions = [].concat(_toConsumableArray(rolledInPromotedActions), _toConsumableArray(actionSections));\n      } else if (actionSections) {\n        combinedActions = actionSections;\n      } else if (rolledInPromotedActions.length > 0) {\n        combinedActions = _toConsumableArray(rolledInPromotedActions);\n      }\n\n      var actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.Popover,\n        ref: this.setMoreActionsNode\n      }, /*#__PURE__*/React.createElement(Popover, {\n        active: largeScreenPopoverVisible,\n        activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n          disclosure: true,\n          onAction: this.toggleLargeScreenPopover,\n          content: activatorLabel,\n          disabled: disabled,\n          indicator: this.isNewBadgeInBadgeActions()\n        }),\n        onClose: this.toggleLargeScreenPopover\n      }, /*#__PURE__*/React.createElement(ActionList, {\n        sections: combinedActions,\n        onActionAnyItem: this.toggleLargeScreenPopover\n      }))) : null;\n      var checkableButtonProps = {\n        accessibilityLabel: accessibilityLabel,\n        label: label,\n        selected: selected,\n        selectMode: selectMode,\n        onToggleAll: onToggleAll,\n        measuring: measuring,\n        disabled: disabled\n      };\n      var smallScreenGroup = smallScreen ? /*#__PURE__*/React.createElement(Transition, {\n        timeout: 0,\n        in: selectMode,\n        key: \"smallGroup\",\n        nodeRef: this.smallScreenGroupNode\n      }, function (status) {\n        var smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[\"Group-\".concat(status)]);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: smallScreenGroupClassName,\n          ref: _this2.smallScreenGroupNode\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.ButtonGroupWrapper\n        }, /*#__PURE__*/React.createElement(ButtonGroup, {\n          segmented: true\n        }, /*#__PURE__*/React.createElement(CSSTransition, {\n          nodeRef: _this2.checkableWrapperNode,\n          in: selectMode,\n          timeout: parseInt(tokens.motion['duration-200'], 10),\n          classNames: slideClasses,\n          appear: !selectMode\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.CheckableContainer,\n          ref: _this2.checkableWrapperNode\n        }, /*#__PURE__*/React.createElement(CheckableButton, Object.assign({}, checkableButtonProps, {\n          smallScreen: true\n        })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n      }) : null;\n      var largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React.createElement(ButtonGroup, {\n        segmented: true\n      }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps);\n      var largeScreenGroup = smallScreen ? null : /*#__PURE__*/React.createElement(Transition, {\n        timeout: 0,\n        in: selectMode,\n        key: \"largeGroup\",\n        nodeRef: this.largeScreenGroupNode\n      }, function (status) {\n        var largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[\"Group-\".concat(status)], measuring && styles['Group-measuring']);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: largeScreenGroupClassName,\n          ref: _this2.largeScreenGroupNode\n        }, /*#__PURE__*/React.createElement(EventListener, {\n          event: \"resize\",\n          handler: _this2.handleResize\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.ButtonGroupWrapper,\n          ref: _this2.setLargeScreenButtonsNode\n        }, largeGroupContent), paginatedSelectAllMarkup);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.setContainerNode\n      }, smallScreenGroup, largeScreenGroup);\n    }\n  }, {\n    key: \"isNewBadgeInBadgeActions\",\n    value: function isNewBadgeInBadgeActions() {\n      var actions = this.actionSections();\n      if (!actions) return false;\n\n      var _iterator = _createForOfIteratorHelper(actions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var action = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(action.items),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var item = _step2.value;\n\n              var _item$badge;\n\n              if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }]);\n\n  return BulkActionsInner;\n}(PureComponent);\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  var validList = actions.filter(function (action) {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  var validList = actions.filter(function (action) {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfMenuGroupDescriptor(action) {\n  return 'title' in action;\n}\n\nfunction BulkActions(props) {\n  var i18n = useI18n();\n  return /*#__PURE__*/React.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js"],"names":["React","PureComponent","createRef","debounce","Transition","CSSTransition","classNames","clamp","styles","BulkActionMenu","CheckableButton","useI18n","Button","Popover","BulkActionButton","ActionList","ButtonGroup","tokens","EventListener","MAX_PROMOTED_ACTIONS","slideClasses","appear","Slide","appearActive","enter","enterActive","exit","BulkActionsInner","args","state","smallScreenPopoverVisible","largeScreenPopoverVisible","containerWidth","measuring","containerNode","largeScreenButtonsNode","moreActionsNode","checkableWrapperNode","largeScreenGroupNode","smallScreenGroupNode","promotedActionsWidths","bulkActionsWidth","addedMoreActionsWidthForMeasuring","handleResize","getBoundingClientRect","width","setState","trailing","setLargeScreenButtonsNode","node","setContainerNode","setMoreActionsNode","setSelectMode","val","onSelectModeToggle","props","toggleSmallScreenPopover","onMoreActionPopoverToggle","toggleLargeScreenPopover","handleMeasurement","push","promotedActions","length","sufficientSpace","counter","totalWidth","widthWithRemovedAction","actions","Boolean","instanceOfBulkActionListSectionArray","instanceOfBulkActionArray","items","numberOfPromotedActionsToRender","rolledInPromotedActions","map","action","instanceOfMenuGroupDescriptor","slice","selectMode","accessibilityLabel","label","onToggleAll","selected","smallScreen","disabled","paginatedSelectAllText","paginatedSelectAllAction","i18n","actionSections","process","env","NODE_ENV","console","warn","translate","maxPromotedActions","paginatedSelectAllActionMarkup","createElement","onClick","onAction","plain","content","paginatedSelectAllTextMarkup","paginatedSelectAllMarkup","className","PaginatedSelectAll","cancelButton","bind","allActionsPopover","hasActions","ref","active","activator","disclosure","indicator","isNewBadgeInBadgeActions","onClose","sections","onActionAnyItem","promotedActionsMarkup","index","Object","assign","key","activatorLabel","combinedActions","actionsPopover","checkableButtonProps","smallScreenGroup","timeout","in","nodeRef","status","smallScreenGroupClassName","Group","ButtonGroupWrapper","segmented","parseInt","motion","CheckableContainer","largeGroupContent","largeScreenGroup","largeScreenGroupClassName","event","handler","item","_item$badge","badge","validList","filter","BulkActions"],"mappings":"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","sourcesContent":["import React, { PureComponent, createRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Button } from '../Button/Button.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.js';\nimport { tokens } from '../../tokens/tokens.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(({\n        smallScreenPopoverVisible\n      }) => ({\n        smallScreenPopoverVisible: !smallScreenPopoverVisible\n      }));\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(({\n        largeScreenPopoverVisible\n      }) => ({\n        largeScreenPopoverVisible: !largeScreenPopoverVisible\n      }));\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  }\n\n  rolledInPromotedActions() {\n    const {\n      promotedActions\n    } = this.props;\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n\n    if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {\n      return [];\n    }\n\n    const rolledInPromotedActions = promotedActions.map(action => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return {\n          items: [...action.actions]\n        };\n      }\n\n      return {\n        items: [action]\n      };\n    });\n    return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(Button, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n          key: index\n        }, action, {\n          isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n        key: index,\n        disabled: disabled\n      }, action, {\n        handleMeasurement: this.handleMeasurement\n      }));\n    }) : null;\n    const rolledInPromotedActions = this.rolledInPromotedActions();\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        segmented: true\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: parseInt(tokens.motion['duration-200'], 10),\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React.createElement(CheckableButton, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      segmented: true\n    }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React.createElement(EventListener, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfMenuGroupDescriptor(action) {\n  return 'title' in action;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };\n"]},"metadata":{},"sourceType":"module"}