{"ast":null,"code":"import React, { memo, useRef, useCallback, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { useComponentDidMount } from '../../../../utilities/use-component-did-mount.js';\nimport styles from '../../Tabs.scss.js';\nimport { Tab } from '../Tab/Tab.js';\nimport { EventListener } from '../../../EventListener/EventListener.js';\nvar TabMeasurer = /*#__PURE__*/memo(function TabMeasurer(_ref) {\n  var selected = _ref.selected,\n      tabs = _ref.tabs,\n      activator = _ref.activator,\n      tabToFocus = _ref.tabToFocus,\n      siblingTabHasFocus = _ref.siblingTabHasFocus,\n      handleMeasurementProp = _ref.handleMeasurement;\n  var containerNode = useRef(null);\n  var animationFrame = useRef(null);\n  var handleMeasurement = useCallback(function () {\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n\n    animationFrame.current = requestAnimationFrame(function () {\n      if (!containerNode.current) {\n        return;\n      }\n\n      var containerWidth = containerNode.current.offsetWidth;\n      var hiddenTabNodes = containerNode.current.children;\n      var hiddenTabNodesArray = Array.from(hiddenTabNodes);\n      var hiddenTabWidths = hiddenTabNodesArray.map(function (node) {\n        return Math.ceil(node.getBoundingClientRect().width);\n      });\n      var disclosureWidth = hiddenTabWidths.pop() || 0;\n      handleMeasurementProp({\n        containerWidth: containerWidth,\n        disclosureWidth: disclosureWidth,\n        hiddenTabWidths: hiddenTabWidths\n      });\n    });\n  }, [handleMeasurementProp]);\n  useEffect(function () {\n    handleMeasurement();\n  }, [handleMeasurement, tabs]);\n  useComponentDidMount(function () {\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(handleMeasurement, 0);\n    }\n  });\n  var tabsMarkup = tabs.map(function (tab, index) {\n    return /*#__PURE__*/React.createElement(Tab, {\n      measuring: true,\n      key: \"\".concat(index).concat(tab.id, \"Hidden\"),\n      id: \"\".concat(tab.id, \"Measurer\"),\n      siblingTabHasFocus: siblingTabHasFocus,\n      focused: index === tabToFocus,\n      selected: index === selected,\n      onClick: noop,\n      url: tab.url\n    }, tab.content);\n  });\n  var classname = classNames(styles.Tabs, styles.TabMeasurer);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classname,\n    ref: containerNode\n  }, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleMeasurement\n  }), tabsMarkup, activator);\n});\n\nfunction noop() {}\n\nexport { TabMeasurer };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Tabs/components/TabMeasurer/TabMeasurer.js"],"names":["React","memo","useRef","useCallback","useEffect","classNames","useComponentDidMount","styles","Tab","EventListener","TabMeasurer","selected","tabs","activator","tabToFocus","siblingTabHasFocus","handleMeasurementProp","handleMeasurement","containerNode","animationFrame","current","cancelAnimationFrame","requestAnimationFrame","containerWidth","offsetWidth","hiddenTabNodes","children","hiddenTabNodesArray","Array","from","hiddenTabWidths","map","node","Math","ceil","getBoundingClientRect","width","disclosureWidth","pop","process","env","NODE_ENV","setTimeout","tabsMarkup","tab","index","createElement","measuring","key","id","focused","onClick","noop","url","content","classname","Tabs","className","ref","event","handler"],"mappings":"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","sourcesContent":["import React, { memo, useRef, useCallback, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { useComponentDidMount } from '../../../../utilities/use-component-did-mount.js';\nimport styles from '../../Tabs.scss.js';\nimport { Tab } from '../Tab/Tab.js';\nimport { EventListener } from '../../../EventListener/EventListener.js';\n\nconst TabMeasurer = /*#__PURE__*/memo(function TabMeasurer({\n  selected,\n  tabs,\n  activator,\n  tabToFocus,\n  siblingTabHasFocus,\n  handleMeasurement: handleMeasurementProp\n}) {\n  const containerNode = useRef(null);\n  const animationFrame = useRef(null);\n  const handleMeasurement = useCallback(() => {\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n\n    animationFrame.current = requestAnimationFrame(() => {\n      if (!containerNode.current) {\n        return;\n      }\n\n      const containerWidth = containerNode.current.offsetWidth;\n      const hiddenTabNodes = containerNode.current.children;\n      const hiddenTabNodesArray = Array.from(hiddenTabNodes);\n      const hiddenTabWidths = hiddenTabNodesArray.map(node => {\n        return Math.ceil(node.getBoundingClientRect().width);\n      });\n      const disclosureWidth = hiddenTabWidths.pop() || 0;\n      handleMeasurementProp({\n        containerWidth,\n        disclosureWidth,\n        hiddenTabWidths\n      });\n    });\n  }, [handleMeasurementProp]);\n  useEffect(() => {\n    handleMeasurement();\n  }, [handleMeasurement, tabs]);\n  useComponentDidMount(() => {\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(handleMeasurement, 0);\n    }\n  });\n  const tabsMarkup = tabs.map((tab, index) => {\n    return /*#__PURE__*/React.createElement(Tab, {\n      measuring: true,\n      key: `${index}${tab.id}Hidden`,\n      id: `${tab.id}Measurer`,\n      siblingTabHasFocus: siblingTabHasFocus,\n      focused: index === tabToFocus,\n      selected: index === selected,\n      onClick: noop,\n      url: tab.url\n    }, tab.content);\n  });\n  const classname = classNames(styles.Tabs, styles.TabMeasurer);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classname,\n    ref: containerNode\n  }, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleMeasurement\n  }), tabsMarkup, activator);\n});\n\nfunction noop() {}\n\nexport { TabMeasurer };\n"]},"metadata":{},"sourceType":"module"}