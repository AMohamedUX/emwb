{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport styles from './MappedAction.scss.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { Badge } from '../../../Badge/Badge.js';\nimport { TextStyle } from '../../../TextStyle/TextStyle.js';\nimport { MappedActionContext } from '../../../../utilities/autocomplete/context.js';\nimport { Listbox } from '../../../Listbox/Listbox.js';\n\nfunction MappedAction(_ref) {\n  let {\n    active,\n    content,\n    disabled,\n    icon,\n    image,\n    prefix,\n    suffix,\n    ellipsis,\n    role,\n    url,\n    external,\n    onAction,\n    destructive,\n    badge,\n    helpText,\n    wrapOverflow = false\n  } = _ref;\n  const i18n = useI18n();\n  let prefixMarkup = null;\n  const contentOverflowStyle = wrapOverflow ? styles.ContentWrap : undefined;\n\n  if (prefix) {\n    prefixMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Prefix\n    }, prefix);\n  } else if (icon) {\n    prefixMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Prefix\n    }, /*#__PURE__*/React.createElement(Icon, {\n      source: icon\n    }));\n  } else if (image) {\n    prefixMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      role: \"presentation\",\n      className: styles.Prefix,\n      style: {\n        backgroundImage: `url(${image}`\n      }\n    });\n  }\n\n  const badgeMarkup = badge && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Suffix\n  }, /*#__PURE__*/React.createElement(Badge, {\n    status: badge.status\n  }, badge.content));\n  const suffixMarkup = suffix && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Suffix\n  }, suffix);\n  const contentText = ellipsis && content ? i18n.translate('Polaris.Autocomplete.ellipsis', {\n    content\n  }) : content;\n  const contentMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Text\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: contentOverflowStyle\n  }, contentText), helpText ? /*#__PURE__*/React.createElement(TextStyle, {\n    variation: \"subdued\"\n  }, helpText) : null);\n  const context = useMemo(() => ({\n    role,\n    url,\n    external,\n    onAction,\n    destructive\n  }), [role, url, external, onAction, destructive]);\n  const actionClassNames = classNames(styles.Action, disabled && styles.disabled, destructive && styles.destructive, active && styles.selected);\n  return /*#__PURE__*/React.createElement(MappedActionContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionContainer\n  }, /*#__PURE__*/React.createElement(Listbox.Action, {\n    selected: active,\n    disabled: disabled,\n    value: content || ''\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: actionClassNames\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content\n  }, prefixMarkup, contentMarkup, badgeMarkup, suffixMarkup)))));\n}\n\nexport { MappedAction };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.js"],"names":["React","useMemo","classNames","styles","useI18n","Icon","Badge","TextStyle","MappedActionContext","Listbox","MappedAction","active","content","disabled","icon","image","prefix","suffix","ellipsis","role","url","external","onAction","destructive","badge","helpText","wrapOverflow","i18n","prefixMarkup","contentOverflowStyle","ContentWrap","undefined","createElement","className","Prefix","source","style","backgroundImage","badgeMarkup","Suffix","status","suffixMarkup","contentText","translate","contentMarkup","Text","variation","context","actionClassNames","Action","selected","Provider","value","ActionContainer","Content"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport styles from './MappedAction.scss.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { Badge } from '../../../Badge/Badge.js';\nimport { TextStyle } from '../../../TextStyle/TextStyle.js';\nimport { MappedActionContext } from '../../../../utilities/autocomplete/context.js';\nimport { Listbox } from '../../../Listbox/Listbox.js';\n\nfunction MappedAction({\n  active,\n  content,\n  disabled,\n  icon,\n  image,\n  prefix,\n  suffix,\n  ellipsis,\n  role,\n  url,\n  external,\n  onAction,\n  destructive,\n  badge,\n  helpText,\n  wrapOverflow = false\n}) {\n  const i18n = useI18n();\n  let prefixMarkup = null;\n  const contentOverflowStyle = wrapOverflow ? styles.ContentWrap : undefined;\n\n  if (prefix) {\n    prefixMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Prefix\n    }, prefix);\n  } else if (icon) {\n    prefixMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Prefix\n    }, /*#__PURE__*/React.createElement(Icon, {\n      source: icon\n    }));\n  } else if (image) {\n    prefixMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      role: \"presentation\",\n      className: styles.Prefix,\n      style: {\n        backgroundImage: `url(${image}`\n      }\n    });\n  }\n\n  const badgeMarkup = badge && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Suffix\n  }, /*#__PURE__*/React.createElement(Badge, {\n    status: badge.status\n  }, badge.content));\n  const suffixMarkup = suffix && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Suffix\n  }, suffix);\n  const contentText = ellipsis && content ? i18n.translate('Polaris.Autocomplete.ellipsis', {\n    content\n  }) : content;\n  const contentMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Text\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: contentOverflowStyle\n  }, contentText), helpText ? /*#__PURE__*/React.createElement(TextStyle, {\n    variation: \"subdued\"\n  }, helpText) : null);\n  const context = useMemo(() => ({\n    role,\n    url,\n    external,\n    onAction,\n    destructive\n  }), [role, url, external, onAction, destructive]);\n  const actionClassNames = classNames(styles.Action, disabled && styles.disabled, destructive && styles.destructive, active && styles.selected);\n  return /*#__PURE__*/React.createElement(MappedActionContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionContainer\n  }, /*#__PURE__*/React.createElement(Listbox.Action, {\n    selected: active,\n    disabled: disabled,\n    value: content || ''\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: actionClassNames\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content\n  }, prefixMarkup, contentMarkup, badgeMarkup, suffixMarkup)))));\n}\n\nexport { MappedAction };\n"]},"metadata":{},"sourceType":"module"}