{"ast":null,"code":"import React, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './CheckableButton.scss.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\n\nfunction CheckableButton(_ref) {\n  var accessibilityLabel = _ref.accessibilityLabel,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      onToggleAll = _ref.onToggleAll,\n      selected = _ref.selected,\n      selectMode = _ref.selectMode,\n      plain = _ref.plain,\n      measuring = _ref.measuring,\n      disabled = _ref.disabled,\n      smallScreen = _ref.smallScreen;\n  var checkBoxRef = useRef(null);\n\n  var _useContext = useContext(ResourceListContext),\n      registerCheckableButtons = _useContext.registerCheckableButtons;\n\n  var currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(function () {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  var className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js"],"names":["React","useRef","useContext","useEffect","classNames","styles","ResourceListContext","Checkbox","CheckableButton","accessibilityLabel","label","onToggleAll","selected","selectMode","plain","measuring","disabled","smallScreen","checkBoxRef","registerCheckableButtons","currentKey","current","className","createElement","onClick","labelHidden","checked","onChange","ref","Label"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,SAASC,eAAT,OAUG;AAAA,MATDC,kBASC,QATDA,kBASC;AAAA,wBARDC,KAQC;AAAA,MARDA,KAQC,2BARO,EAQP;AAAA,MAPDC,WAOC,QAPDA,WAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,UAKC,QALDA,UAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAMC,WAAW,GAAGjB,MAAM,CAAC,IAAD,CAA1B;;AACA,oBAEIC,UAAU,CAACI,mBAAD,CAFd;AAAA,MACEa,wBADF,eACEA,wBADF;;AAGA,MAAIC,UAAU,GAAG,QAAjB;;AAEA,MAAIN,KAAJ,EAAW;AACTM,IAAAA,UAAU,GAAG,OAAb;AACD,GAFD,MAEO,IAAIH,WAAJ,EAAiB;AACtBG,IAAAA,UAAU,GAAG,QAAb;AACD;;AAEDjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,WAAW,CAACG,OAAZ,IAAuBF,wBAA3B,EAAqD;AACnDA,MAAAA,wBAAwB,CAACC,UAAD,EAAaF,WAAW,CAACG,OAAzB,CAAxB;AACD;AACF,GAJQ,EAIN,CAACD,UAAD,EAAaD,wBAAb,CAJM,CAAT;AAKA,MAAMG,SAAS,GAAGR,KAAK,GAAGV,UAAU,CAACC,MAAM,CAACG,eAAR,EAAyBH,MAAM,CAAC,uBAAD,CAA/B,CAAb,GAAyED,UAAU,CAACC,MAAM,CAACG,eAAR,EAAyBK,UAAU,IAAIR,MAAM,CAAC,4BAAD,CAA7C,EAA6EO,QAAQ,IAAIP,MAAM,CAAC,0BAAD,CAA/F,EAA6HU,SAAS,IAAIV,MAAM,CAAC,2BAAD,CAAhJ,CAA1G;AACA,SAAO,aAAaL,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;AAC7CD,IAAAA,SAAS,EAAEA,SADkC;AAE7CE,IAAAA,OAAO,EAAEb;AAFoC,GAA3B,EAGjB,aAAaX,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;AACzCD,IAAAA,SAAS,EAAEjB,MAAM,CAACE;AADuB,GAA3B,EAEb,aAAaP,KAAK,CAACuB,aAAN,CAAoBhB,QAApB,EAA8B;AAC5CG,IAAAA,KAAK,EAAED,kBADqC;AAE5CgB,IAAAA,WAAW,EAAE,IAF+B;AAG5CC,IAAAA,OAAO,EAAEd,QAHmC;AAI5CI,IAAAA,QAAQ,EAAEA,QAJkC;AAK5CW,IAAAA,QAAQ,EAAEhB,WALkC;AAM5CiB,IAAAA,GAAG,EAAEV;AANuC,GAA9B,CAFA,CAHI,EAYf,aAAalB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAC5CD,IAAAA,SAAS,EAAEjB,MAAM,CAACwB;AAD0B,GAA5B,EAEfnB,KAFe,CAZE,CAApB;AAeD;;AAED,SAASF,eAAT","sourcesContent":["import React, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './CheckableButton.scss.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\n\nfunction CheckableButton({\n  accessibilityLabel,\n  label = '',\n  onToggleAll,\n  selected,\n  selectMode,\n  plain,\n  measuring,\n  disabled,\n  smallScreen\n}) {\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };\n"]},"metadata":{},"sourceType":"module"}