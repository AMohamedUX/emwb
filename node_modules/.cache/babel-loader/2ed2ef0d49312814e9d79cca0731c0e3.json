{"ast":null,"code":"import _slicedToArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport styles from './ScrollContainer.scss.js';\nimport { scrollDefaultContext, ScrollContext } from '../../../../utilities/index-table/context.js';\n\nfunction ScrollContainer(_ref) {\n  var children = _ref.children,\n      scrollableContainerRef = _ref.scrollableContainerRef,\n      onScroll = _ref.onScroll;\n  useEffect(function () {\n    if (!scrollableContainerRef.current) return;\n    scrollableContainerRef.current.dispatchEvent(new Event('scroll'));\n  }, [scrollableContainerRef]);\n\n  var _useState = useState(scrollDefaultContext),\n      _useState2 = _slicedToArray(_useState, 2),\n      containerScroll = _useState2[0],\n      setContainerScroll = _useState2[1]; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  var handleScroll = useCallback(debounce(function () {\n    if (!scrollableContainerRef.current) {\n      return;\n    }\n\n    var availableScrollAmount = scrollableContainerRef.current.scrollWidth - scrollableContainerRef.current.offsetWidth;\n    var canScrollLeft = scrollableContainerRef.current.scrollLeft > 0;\n    var canScrollRight = scrollableContainerRef.current.scrollLeft < availableScrollAmount;\n    onScroll(canScrollLeft, canScrollRight);\n    setContainerScroll({\n      scrollableContainer: scrollableContainerRef.current,\n      canScrollLeft: canScrollLeft,\n      canScrollRight: canScrollRight\n    });\n  }, 40, {\n    trailing: true,\n    leading: true,\n    maxWait: 40\n  }), [onScroll, scrollableContainerRef]);\n  return /*#__PURE__*/React.createElement(ScrollContext.Provider, {\n    value: containerScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ScrollContainer,\n    ref: scrollableContainerRef,\n    onScroll: handleScroll\n  }, children));\n}\n\nexport { ScrollContainer };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.js"],"names":["React","useEffect","useState","useCallback","debounce","styles","scrollDefaultContext","ScrollContext","ScrollContainer","children","scrollableContainerRef","onScroll","current","dispatchEvent","Event","containerScroll","setContainerScroll","handleScroll","availableScrollAmount","scrollWidth","offsetWidth","canScrollLeft","scrollLeft","canScrollRight","scrollableContainer","trailing","leading","maxWait","createElement","Provider","value","className","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,8CAApD;;AAEA,SAASC,eAAT,OAIG;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,sBAEC,QAFDA,sBAEC;AAAA,MADDC,QACC,QADDA,QACC;AACDV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACS,sBAAsB,CAACE,OAA5B,EAAqC;AACrCF,IAAAA,sBAAsB,CAACE,OAAvB,CAA+BC,aAA/B,CAA6C,IAAIC,KAAJ,CAAU,QAAV,CAA7C;AACD,GAHQ,EAGN,CAACJ,sBAAD,CAHM,CAAT;;AAIA,kBAA8CR,QAAQ,CAACI,oBAAD,CAAtD;AAAA;AAAA,MAAOS,eAAP;AAAA,MAAwBC,kBAAxB,iBALC,CAK6E;;;AAE9E,MAAMC,YAAY,GAAGd,WAAW,CAACC,QAAQ,CAAC,YAAM;AAC9C,QAAI,CAACM,sBAAsB,CAACE,OAA5B,EAAqC;AACnC;AACD;;AAED,QAAMM,qBAAqB,GAAGR,sBAAsB,CAACE,OAAvB,CAA+BO,WAA/B,GAA6CT,sBAAsB,CAACE,OAAvB,CAA+BQ,WAA1G;AACA,QAAMC,aAAa,GAAGX,sBAAsB,CAACE,OAAvB,CAA+BU,UAA/B,GAA4C,CAAlE;AACA,QAAMC,cAAc,GAAGb,sBAAsB,CAACE,OAAvB,CAA+BU,UAA/B,GAA4CJ,qBAAnE;AACAP,IAAAA,QAAQ,CAACU,aAAD,EAAgBE,cAAhB,CAAR;AACAP,IAAAA,kBAAkB,CAAC;AACjBQ,MAAAA,mBAAmB,EAAEd,sBAAsB,CAACE,OAD3B;AAEjBS,MAAAA,aAAa,EAAbA,aAFiB;AAGjBE,MAAAA,cAAc,EAAdA;AAHiB,KAAD,CAAlB;AAKD,GAdwC,EActC,EAdsC,EAclC;AACLE,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE;AAHJ,GAdkC,CAAT,EAkB5B,CAAChB,QAAD,EAAWD,sBAAX,CAlB4B,CAAhC;AAmBA,SAAO,aAAaV,KAAK,CAAC4B,aAAN,CAAoBrB,aAAa,CAACsB,QAAlC,EAA4C;AAC9DC,IAAAA,KAAK,EAAEf;AADuD,GAA5C,EAEjB,aAAaf,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AACzCG,IAAAA,SAAS,EAAE1B,MAAM,CAACG,eADuB;AAEzCwB,IAAAA,GAAG,EAAEtB,sBAFoC;AAGzCC,IAAAA,QAAQ,EAAEM;AAH+B,GAA3B,EAIbR,QAJa,CAFI,CAApB;AAOD;;AAED,SAASD,eAAT","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport styles from './ScrollContainer.scss.js';\nimport { scrollDefaultContext, ScrollContext } from '../../../../utilities/index-table/context.js';\n\nfunction ScrollContainer({\n  children,\n  scrollableContainerRef,\n  onScroll\n}) {\n  useEffect(() => {\n    if (!scrollableContainerRef.current) return;\n    scrollableContainerRef.current.dispatchEvent(new Event('scroll'));\n  }, [scrollableContainerRef]);\n  const [containerScroll, setContainerScroll] = useState(scrollDefaultContext); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleScroll = useCallback(debounce(() => {\n    if (!scrollableContainerRef.current) {\n      return;\n    }\n\n    const availableScrollAmount = scrollableContainerRef.current.scrollWidth - scrollableContainerRef.current.offsetWidth;\n    const canScrollLeft = scrollableContainerRef.current.scrollLeft > 0;\n    const canScrollRight = scrollableContainerRef.current.scrollLeft < availableScrollAmount;\n    onScroll(canScrollLeft, canScrollRight);\n    setContainerScroll({\n      scrollableContainer: scrollableContainerRef.current,\n      canScrollLeft,\n      canScrollRight\n    });\n  }, 40, {\n    trailing: true,\n    leading: true,\n    maxWait: 40\n  }), [onScroll, scrollableContainerRef]);\n  return /*#__PURE__*/React.createElement(ScrollContext.Provider, {\n    value: containerScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ScrollContainer,\n    ref: scrollableContainerRef,\n    onScroll: handleScroll\n  }, children));\n}\n\nexport { ScrollContainer };\n"]},"metadata":{},"sourceType":"module"}