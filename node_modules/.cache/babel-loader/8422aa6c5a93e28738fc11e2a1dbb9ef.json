{"ast":null,"code":"import _slicedToArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useMemo, useCallback } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { getWeeksForMonth, getOrderedWeekdays, getNewRange, isDateBefore, isDateAfter, isSameDay, dateIsSelected, dateIsInRange } from '../../../../utilities/dates.js';\nimport styles from '../../DatePicker.scss.js';\nimport { weekdayName, monthName } from '../../utilities.js';\nimport { Weekday } from '../Weekday/Weekday.js';\nimport { Day } from '../Day/Day.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\n\nfunction Month(_ref) {\n  var focusedDate = _ref.focusedDate,\n      selected = _ref.selected,\n      hoverDate = _ref.hoverDate,\n      disableDatesBefore = _ref.disableDatesBefore,\n      disableDatesAfter = _ref.disableDatesAfter,\n      allowRange = _ref.allowRange,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHover = _ref.onHover,\n      onHover = _ref$onHover === void 0 ? noop : _ref$onHover,\n      _ref$onFocus = _ref.onFocus,\n      onFocus = _ref$onFocus === void 0 ? noop : _ref$onFocus,\n      month = _ref.month,\n      year = _ref.year,\n      weekStartsOn = _ref.weekStartsOn,\n      accessibilityLabelPrefixes = _ref.accessibilityLabelPrefixes;\n  var i18n = useI18n();\n  var isInHoveringRange = allowRange ? hoveringDateIsInRange : function () {\n    return false;\n  };\n  var now = new Date();\n  var current = now.getMonth() === month && now.getFullYear() === year;\n  var className = classNames(styles.Title, current && styles['Month-current']);\n  var weeks = useMemo(function () {\n    return getWeeksForMonth(month, year, weekStartsOn);\n  }, [month, weekStartsOn, year]);\n  var weekdays = getOrderedWeekdays(weekStartsOn).map(function (weekday) {\n    return /*#__PURE__*/React.createElement(Weekday, {\n      key: weekday,\n      title: i18n.translate(\"Polaris.DatePicker.daysAbbreviated.\".concat(weekdayName(weekday))),\n      label: weekdayLabel(weekday),\n      current: current && new Date().getDay() === weekday\n    });\n  });\n  var handleDateClick = useCallback(function (selectedDate) {\n    onChange(getNewRange(allowRange ? selected : undefined, selectedDate));\n  }, [allowRange, onChange, selected]);\n  var lastDayOfMonth = useMemo(function () {\n    return new Date(year, month + 1, 0);\n  }, [month, year]);\n\n  function renderWeek(day, dayIndex) {\n    if (day == null) {\n      return /*#__PURE__*/React.createElement(Day, {\n        key: dayIndex,\n        onHover: onHover,\n        lastDayOfMonth: lastDayOfMonth\n      });\n    }\n\n    var disabled = disableDatesBefore && isDateBefore(day, disableDatesBefore) || disableDatesAfter && isDateAfter(day, disableDatesAfter);\n    var isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);\n    var isLastSelectedDay = allowRange && selected && (!isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && isSameDay(selected.start, selected.end) && isDateAfter(hoverDate, selected.start) && isSameDay(day, hoverDate) && !isFirstSelectedDay);\n    var rangeIsDifferent = !(selected && isSameDay(selected.start, selected.end));\n    var isHoveringRight = hoverDate && isDateBefore(day, hoverDate);\n\n    var _accessibilityLabelPr = _slicedToArray(accessibilityLabelPrefixes, 2),\n        firstAccessibilityLabelPrefix = _accessibilityLabelPr[0],\n        lastAccessibilityLabelPrefix = _accessibilityLabelPr[1];\n\n    var accessibilityLabelPrefix;\n\n    if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) {\n      accessibilityLabelPrefix = firstAccessibilityLabelPrefix;\n    } else if (allowRange && isLastSelectedDay) {\n      accessibilityLabelPrefix = lastAccessibilityLabelPrefix;\n    }\n\n    return /*#__PURE__*/React.createElement(Day, {\n      selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,\n      weekday: weekdayLabel(dayIndex),\n      focused: focusedDate != null && isSameDay(day, focusedDate),\n      day: day,\n      key: dayIndex,\n      onFocus: onFocus,\n      onClick: handleDateClick,\n      onHover: onHover,\n      selected: selected != null && dateIsSelected(day, selected),\n      inRange: selected != null && dateIsInRange(day, selected),\n      disabled: disabled,\n      inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),\n      isLastSelectedDay: isLastSelectedDay,\n      isFirstSelectedDay: isFirstSelectedDay,\n      isHoveringRight: isHoveringRight,\n      rangeIsDifferent: rangeIsDifferent\n    });\n  }\n\n  var weeksMarkup = weeks.map(function (week, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: styles.Week,\n      key: index\n    }, week.map(renderWeek));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.MonthContainer\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    role: \"grid\",\n    className: styles.Month\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    className: className\n  }, i18n.translate(\"Polaris.DatePicker.months.\".concat(monthName(month))), ' ', year), /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.WeekHeadings\n  }, weekdays)), /*#__PURE__*/React.createElement(\"tbody\", null, weeksMarkup)));\n\n  function weekdayLabel(weekday) {\n    return i18n.translate(\"Polaris.DatePicker.days.\".concat(weekdayName(weekday)));\n  }\n}\n\nfunction noop() {}\n\nfunction hoveringDateIsInRange(day, range, hoverEndDate) {\n  if (day == null) {\n    return false;\n  }\n\n  var start = range.start,\n      end = range.end;\n  return Boolean(isSameDay(start, end) && day > start && day <= hoverEndDate);\n}\n\nfunction isDateEnd(day, range) {\n  if (day == null) return false;\n  var end = range.end;\n  return Boolean(end && isSameDay(end, day));\n}\n\nfunction isDateStart(day, range) {\n  if (day == null) return false;\n  var start = range.start;\n  return Boolean(start && isSameDay(start, day));\n}\n\nexport { Month };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Month/Month.js"],"names":["React","useMemo","useCallback","classNames","getWeeksForMonth","getOrderedWeekdays","getNewRange","isDateBefore","isDateAfter","isSameDay","dateIsSelected","dateIsInRange","styles","weekdayName","monthName","Weekday","Day","useI18n","Month","focusedDate","selected","hoverDate","disableDatesBefore","disableDatesAfter","allowRange","onChange","noop","onHover","onFocus","month","year","weekStartsOn","accessibilityLabelPrefixes","i18n","isInHoveringRange","hoveringDateIsInRange","now","Date","current","getMonth","getFullYear","className","Title","weeks","weekdays","map","weekday","createElement","key","title","translate","label","weekdayLabel","getDay","handleDateClick","selectedDate","undefined","lastDayOfMonth","renderWeek","day","dayIndex","disabled","isFirstSelectedDay","isDateStart","isLastSelectedDay","start","end","isDateEnd","rangeIsDifferent","isHoveringRight","firstAccessibilityLabelPrefix","lastAccessibilityLabelPrefix","accessibilityLabelPrefix","selectedAccessibilityLabelPrefix","focused","onClick","inRange","inHoveringRange","weeksMarkup","week","index","Week","MonthContainer","role","WeekHeadings","range","hoverEndDate","Boolean"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { getWeeksForMonth, getOrderedWeekdays, getNewRange, isDateBefore, isDateAfter, isSameDay, dateIsSelected, dateIsInRange } from '../../../../utilities/dates.js';\nimport styles from '../../DatePicker.scss.js';\nimport { weekdayName, monthName } from '../../utilities.js';\nimport { Weekday } from '../Weekday/Weekday.js';\nimport { Day } from '../Day/Day.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\n\nfunction Month({\n  focusedDate,\n  selected,\n  hoverDate,\n  disableDatesBefore,\n  disableDatesAfter,\n  allowRange,\n  onChange = noop,\n  onHover = noop,\n  onFocus = noop,\n  month,\n  year,\n  weekStartsOn,\n  accessibilityLabelPrefixes\n}) {\n  const i18n = useI18n();\n  const isInHoveringRange = allowRange ? hoveringDateIsInRange : () => false;\n  const now = new Date();\n  const current = now.getMonth() === month && now.getFullYear() === year;\n  const className = classNames(styles.Title, current && styles['Month-current']);\n  const weeks = useMemo(() => getWeeksForMonth(month, year, weekStartsOn), [month, weekStartsOn, year]);\n  const weekdays = getOrderedWeekdays(weekStartsOn).map(weekday => /*#__PURE__*/React.createElement(Weekday, {\n    key: weekday,\n    title: i18n.translate(`Polaris.DatePicker.daysAbbreviated.${weekdayName(weekday)}`),\n    label: weekdayLabel(weekday),\n    current: current && new Date().getDay() === weekday\n  }));\n  const handleDateClick = useCallback(selectedDate => {\n    onChange(getNewRange(allowRange ? selected : undefined, selectedDate));\n  }, [allowRange, onChange, selected]);\n  const lastDayOfMonth = useMemo(() => new Date(year, month + 1, 0), [month, year]);\n\n  function renderWeek(day, dayIndex) {\n    if (day == null) {\n      return /*#__PURE__*/React.createElement(Day, {\n        key: dayIndex,\n        onHover: onHover,\n        lastDayOfMonth: lastDayOfMonth\n      });\n    }\n\n    const disabled = disableDatesBefore && isDateBefore(day, disableDatesBefore) || disableDatesAfter && isDateAfter(day, disableDatesAfter);\n    const isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);\n    const isLastSelectedDay = allowRange && selected && (!isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && isSameDay(selected.start, selected.end) && isDateAfter(hoverDate, selected.start) && isSameDay(day, hoverDate) && !isFirstSelectedDay);\n    const rangeIsDifferent = !(selected && isSameDay(selected.start, selected.end));\n    const isHoveringRight = hoverDate && isDateBefore(day, hoverDate);\n    const [firstAccessibilityLabelPrefix, lastAccessibilityLabelPrefix] = accessibilityLabelPrefixes;\n    let accessibilityLabelPrefix;\n\n    if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) {\n      accessibilityLabelPrefix = firstAccessibilityLabelPrefix;\n    } else if (allowRange && isLastSelectedDay) {\n      accessibilityLabelPrefix = lastAccessibilityLabelPrefix;\n    }\n\n    return /*#__PURE__*/React.createElement(Day, {\n      selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,\n      weekday: weekdayLabel(dayIndex),\n      focused: focusedDate != null && isSameDay(day, focusedDate),\n      day: day,\n      key: dayIndex,\n      onFocus: onFocus,\n      onClick: handleDateClick,\n      onHover: onHover,\n      selected: selected != null && dateIsSelected(day, selected),\n      inRange: selected != null && dateIsInRange(day, selected),\n      disabled: disabled,\n      inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),\n      isLastSelectedDay: isLastSelectedDay,\n      isFirstSelectedDay: isFirstSelectedDay,\n      isHoveringRight: isHoveringRight,\n      rangeIsDifferent: rangeIsDifferent\n    });\n  }\n\n  const weeksMarkup = weeks.map((week, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.Week,\n    key: index\n  }, week.map(renderWeek)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.MonthContainer\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    role: \"grid\",\n    className: styles.Month\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    className: className\n  }, i18n.translate(`Polaris.DatePicker.months.${monthName(month)}`), ' ', year), /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.WeekHeadings\n  }, weekdays)), /*#__PURE__*/React.createElement(\"tbody\", null, weeksMarkup)));\n\n  function weekdayLabel(weekday) {\n    return i18n.translate(`Polaris.DatePicker.days.${weekdayName(weekday)}`);\n  }\n}\n\nfunction noop() {}\n\nfunction hoveringDateIsInRange(day, range, hoverEndDate) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(isSameDay(start, end) && day > start && day <= hoverEndDate);\n}\n\nfunction isDateEnd(day, range) {\n  if (day == null) return false;\n  const {\n    end\n  } = range;\n  return Boolean(end && isSameDay(end, day));\n}\n\nfunction isDateStart(day, range) {\n  if (day == null) return false;\n  const {\n    start\n  } = range;\n  return Boolean(start && isSameDay(start, day));\n}\n\nexport { Month };\n"]},"metadata":{},"sourceType":"module"}