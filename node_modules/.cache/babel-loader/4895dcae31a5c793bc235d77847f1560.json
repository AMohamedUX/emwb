{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"value\", \"label\", \"prefix\"];\nimport React from 'react';\nimport { SelectMinor } from '@shopify/polaris-icons';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './Select.scss.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Labelled, helpTextID } from '../Labelled/Labelled.js';\nvar PLACEHOLDER_VALUE = '';\n\nfunction Select(_ref) {\n  var optionsProp = _ref.options,\n      label = _ref.label,\n      labelAction = _ref.labelAction,\n      labelHiddenProp = _ref.labelHidden,\n      labelInline = _ref.labelInline,\n      disabled = _ref.disabled,\n      helpText = _ref.helpText,\n      placeholder = _ref.placeholder,\n      idProp = _ref.id,\n      name = _ref.name,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? PLACEHOLDER_VALUE : _ref$value,\n      error = _ref.error,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      requiredIndicator = _ref.requiredIndicator;\n  var id = useUniqueId('Select', idProp);\n  var labelHidden = labelInline ? true : labelHiddenProp;\n  var className = classNames(styles.Select, error && styles.error, disabled && styles.disabled);\n  var handleChange = onChange ? function (event) {\n    return onChange(event.currentTarget.value, id);\n  } : undefined;\n  var describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (error) {\n    describedBy.push(\"\".concat(id, \"Error\"));\n  }\n\n  var options = optionsProp || [];\n  var normalizedOptions = options.map(normalizeOption);\n\n  if (placeholder) {\n    normalizedOptions = [{\n      label: placeholder,\n      value: PLACEHOLDER_VALUE,\n      disabled: true\n    }].concat(_toConsumableArray(normalizedOptions));\n  }\n\n  var inlineLabelMarkup = labelInline && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.InlineLabel\n  }, label);\n  var selectedOption = getSelectedOption(normalizedOptions, value);\n  var prefixMarkup = selectedOption.prefix && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Prefix\n  }, selectedOption.prefix);\n  var contentMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content,\n    \"aria-hidden\": true,\n    \"aria-disabled\": disabled\n  }, inlineLabelMarkup, prefixMarkup, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.SelectedOption\n  }, selectedOption.label), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: SelectMinor\n  })));\n  var optionsMarkup = normalizedOptions.map(renderOption);\n  return /*#__PURE__*/React.createElement(Labelled, {\n    id: id,\n    label: label,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText,\n    requiredIndicator: requiredIndicator\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: id,\n    name: name,\n    value: value,\n    className: styles.Input,\n    disabled: disabled,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: handleChange,\n    \"aria-invalid\": Boolean(error),\n    \"aria-describedby\": describedBy.length ? describedBy.join(' ') : undefined,\n    \"aria-required\": requiredIndicator\n  }, optionsMarkup), contentMarkup, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Backdrop\n  })));\n}\n\nfunction isString(option) {\n  return typeof option === 'string';\n}\n\nfunction isGroup(option) {\n  return typeof option === 'object' && 'options' in option && option.options != null;\n}\n\nfunction normalizeStringOption(option) {\n  return {\n    label: option,\n    value: option\n  };\n}\n/**\n * Converts a string option (and each string option in a Group) into\n * an Option object.\n */\n\n\nfunction normalizeOption(option) {\n  if (isString(option)) {\n    return normalizeStringOption(option);\n  } else if (isGroup(option)) {\n    var title = option.title,\n        options = option.options;\n    return {\n      title: title,\n      options: options.map(function (option) {\n        return isString(option) ? normalizeStringOption(option) : option;\n      })\n    };\n  }\n\n  return option;\n}\n/**\n * Gets the text to display in the UI, for the currently selected option\n */\n\n\nfunction getSelectedOption(options, value) {\n  var flatOptions = flattenOptions(options);\n  var selectedOption = flatOptions.find(function (option) {\n    return value === option.value;\n  });\n\n  if (selectedOption === undefined) {\n    // Get the first visible option (not the hidden placeholder)\n    selectedOption = flatOptions.find(function (option) {\n      return !option.hidden;\n    });\n  }\n\n  return selectedOption || {\n    value: '',\n    label: ''\n  };\n}\n/**\n * Ungroups an options array\n */\n\n\nfunction flattenOptions(options) {\n  var flatOptions = [];\n  options.forEach(function (optionOrGroup) {\n    if (isGroup(optionOrGroup)) {\n      flatOptions = flatOptions.concat(optionOrGroup.options);\n    } else {\n      flatOptions.push(optionOrGroup);\n    }\n  });\n  return flatOptions;\n}\n\nfunction renderSingleOption(option) {\n  var value = option.value,\n      label = option.label,\n      _prefix = option.prefix,\n      rest = _objectWithoutProperties(option, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"option\", Object.assign({\n    key: value,\n    value: value\n  }, rest), label);\n}\n\nfunction renderOption(optionOrGroup) {\n  if (isGroup(optionOrGroup)) {\n    var title = optionOrGroup.title,\n        options = optionOrGroup.options;\n    return /*#__PURE__*/React.createElement(\"optgroup\", {\n      label: title,\n      key: title\n    }, options.map(renderSingleOption));\n  }\n\n  return renderSingleOption(optionOrGroup);\n}\n\nexport { Select };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Select/Select.js"],"names":["React","SelectMinor","classNames","styles","useUniqueId","Icon","Labelled","helpTextID","PLACEHOLDER_VALUE","Select","optionsProp","options","label","labelAction","labelHiddenProp","labelHidden","labelInline","disabled","helpText","placeholder","idProp","id","name","value","error","onChange","onFocus","onBlur","requiredIndicator","className","handleChange","event","currentTarget","undefined","describedBy","push","normalizedOptions","map","normalizeOption","inlineLabelMarkup","createElement","InlineLabel","selectedOption","getSelectedOption","prefixMarkup","prefix","Prefix","contentMarkup","Content","SelectedOption","source","optionsMarkup","renderOption","action","Input","Boolean","length","join","Backdrop","isString","option","isGroup","normalizeStringOption","title","flatOptions","flattenOptions","find","hidden","forEach","optionOrGroup","concat","renderSingleOption","_prefix","rest","Object","assign","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SelectMinor } from '@shopify/polaris-icons';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './Select.scss.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Labelled, helpTextID } from '../Labelled/Labelled.js';\n\nconst PLACEHOLDER_VALUE = '';\nfunction Select({\n  options: optionsProp,\n  label,\n  labelAction,\n  labelHidden: labelHiddenProp,\n  labelInline,\n  disabled,\n  helpText,\n  placeholder,\n  id: idProp,\n  name,\n  value = PLACEHOLDER_VALUE,\n  error,\n  onChange,\n  onFocus,\n  onBlur,\n  requiredIndicator\n}) {\n  const id = useUniqueId('Select', idProp);\n  const labelHidden = labelInline ? true : labelHiddenProp;\n  const className = classNames(styles.Select, error && styles.error, disabled && styles.disabled);\n  const handleChange = onChange ? event => onChange(event.currentTarget.value, id) : undefined;\n  const describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  const options = optionsProp || [];\n  let normalizedOptions = options.map(normalizeOption);\n\n  if (placeholder) {\n    normalizedOptions = [{\n      label: placeholder,\n      value: PLACEHOLDER_VALUE,\n      disabled: true\n    }, ...normalizedOptions];\n  }\n\n  const inlineLabelMarkup = labelInline && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.InlineLabel\n  }, label);\n  const selectedOption = getSelectedOption(normalizedOptions, value);\n  const prefixMarkup = selectedOption.prefix && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Prefix\n  }, selectedOption.prefix);\n  const contentMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content,\n    \"aria-hidden\": true,\n    \"aria-disabled\": disabled\n  }, inlineLabelMarkup, prefixMarkup, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.SelectedOption\n  }, selectedOption.label), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: SelectMinor\n  })));\n  const optionsMarkup = normalizedOptions.map(renderOption);\n  return /*#__PURE__*/React.createElement(Labelled, {\n    id: id,\n    label: label,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText,\n    requiredIndicator: requiredIndicator\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: id,\n    name: name,\n    value: value,\n    className: styles.Input,\n    disabled: disabled,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: handleChange,\n    \"aria-invalid\": Boolean(error),\n    \"aria-describedby\": describedBy.length ? describedBy.join(' ') : undefined,\n    \"aria-required\": requiredIndicator\n  }, optionsMarkup), contentMarkup, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Backdrop\n  })));\n}\n\nfunction isString(option) {\n  return typeof option === 'string';\n}\n\nfunction isGroup(option) {\n  return typeof option === 'object' && 'options' in option && option.options != null;\n}\n\nfunction normalizeStringOption(option) {\n  return {\n    label: option,\n    value: option\n  };\n}\n/**\n * Converts a string option (and each string option in a Group) into\n * an Option object.\n */\n\n\nfunction normalizeOption(option) {\n  if (isString(option)) {\n    return normalizeStringOption(option);\n  } else if (isGroup(option)) {\n    const {\n      title,\n      options\n    } = option;\n    return {\n      title,\n      options: options.map(option => {\n        return isString(option) ? normalizeStringOption(option) : option;\n      })\n    };\n  }\n\n  return option;\n}\n/**\n * Gets the text to display in the UI, for the currently selected option\n */\n\n\nfunction getSelectedOption(options, value) {\n  const flatOptions = flattenOptions(options);\n  let selectedOption = flatOptions.find(option => value === option.value);\n\n  if (selectedOption === undefined) {\n    // Get the first visible option (not the hidden placeholder)\n    selectedOption = flatOptions.find(option => !option.hidden);\n  }\n\n  return selectedOption || {\n    value: '',\n    label: ''\n  };\n}\n/**\n * Ungroups an options array\n */\n\n\nfunction flattenOptions(options) {\n  let flatOptions = [];\n  options.forEach(optionOrGroup => {\n    if (isGroup(optionOrGroup)) {\n      flatOptions = flatOptions.concat(optionOrGroup.options);\n    } else {\n      flatOptions.push(optionOrGroup);\n    }\n  });\n  return flatOptions;\n}\n\nfunction renderSingleOption(option) {\n  const {\n    value,\n    label,\n    prefix: _prefix,\n    ...rest\n  } = option;\n  return /*#__PURE__*/React.createElement(\"option\", Object.assign({\n    key: value,\n    value: value\n  }, rest), label);\n}\n\nfunction renderOption(optionOrGroup) {\n  if (isGroup(optionOrGroup)) {\n    const {\n      title,\n      options\n    } = optionOrGroup;\n    return /*#__PURE__*/React.createElement(\"optgroup\", {\n      label: title,\n      key: title\n    }, options.map(renderSingleOption));\n  }\n\n  return renderSingleOption(optionOrGroup);\n}\n\nexport { Select };\n"]},"metadata":{},"sourceType":"module"}