{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { useToggle } from '../../../../utilities/use-toggle.js';\nimport { classNames, variationName } from '../../../../utilities/css.js';\nimport styles from './Option.scss.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Scrollable } from '../../../Scrollable/Scrollable.js';\n\nfunction Option(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      id = _ref.id,\n      select = _ref.select,\n      active = _ref.active,\n      allowMultiple = _ref.allowMultiple,\n      disabled = _ref.disabled,\n      role = _ref.role,\n      media = _ref.media,\n      onClick = _ref.onClick,\n      section = _ref.section,\n      index = _ref.index,\n      verticalAlign = _ref.verticalAlign;\n\n  var _useToggle = useToggle(false),\n      focused = _useToggle.value,\n      toggleFocused = _useToggle.toggle;\n\n  var handleClick = useCallback(function () {\n    if (disabled) {\n      return;\n    }\n\n    onClick(section, index);\n  }, [disabled, index, onClick, section]);\n  var mediaMarkup = media ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Media\n  }, media) : null;\n  var singleSelectClassName = classNames(styles.SingleSelectOption, focused && styles.focused, disabled && styles.disabled, select && styles.select, active && styles.active, verticalAlign && styles[variationName('verticalAlign', verticalAlign)]);\n  var multiSelectClassName = classNames(styles.Label, disabled && styles.disabled, active && styles.active, select && styles.select, verticalAlign && styles[variationName('verticalAlign', verticalAlign)]);\n  var checkBoxRole = role === 'option' ? 'presentation' : undefined;\n  var optionMarkup = allowMultiple ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: multiSelectClassName\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: id,\n    value: value,\n    checked: select,\n    active: active,\n    disabled: disabled,\n    onChange: handleClick,\n    role: checkBoxRole\n  })), mediaMarkup, label) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: singleSelectClassName,\n    onClick: handleClick,\n    disabled: disabled,\n    onFocus: toggleFocused,\n    onBlur: toggleFocused,\n    \"aria-pressed\": active\n  }, mediaMarkup, label);\n  var scrollMarkup = active ? /*#__PURE__*/React.createElement(Scrollable.ScrollTo, null) : null;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    className: styles.Option,\n    tabIndex: -1\n  }, scrollMarkup, optionMarkup);\n}\n\nexport { Option };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.js"],"names":["React","useCallback","useToggle","classNames","variationName","styles","Checkbox","Scrollable","Option","label","value","id","select","active","allowMultiple","disabled","role","media","onClick","section","index","verticalAlign","focused","toggleFocused","toggle","handleClick","mediaMarkup","createElement","className","Media","singleSelectClassName","SingleSelectOption","multiSelectClassName","Label","checkBoxRole","undefined","optionMarkup","htmlFor","checked","onChange","type","onFocus","onBlur","scrollMarkup","ScrollTo","key","tabIndex"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { useToggle } from '../../../../utilities/use-toggle.js';\nimport { classNames, variationName } from '../../../../utilities/css.js';\nimport styles from './Option.scss.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Scrollable } from '../../../Scrollable/Scrollable.js';\n\nfunction Option({\n  label,\n  value,\n  id,\n  select,\n  active,\n  allowMultiple,\n  disabled,\n  role,\n  media,\n  onClick,\n  section,\n  index,\n  verticalAlign\n}) {\n  const {\n    value: focused,\n    toggle: toggleFocused\n  } = useToggle(false);\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n\n    onClick(section, index);\n  }, [disabled, index, onClick, section]);\n  const mediaMarkup = media ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Media\n  }, media) : null;\n  const singleSelectClassName = classNames(styles.SingleSelectOption, focused && styles.focused, disabled && styles.disabled, select && styles.select, active && styles.active, verticalAlign && styles[variationName('verticalAlign', verticalAlign)]);\n  const multiSelectClassName = classNames(styles.Label, disabled && styles.disabled, active && styles.active, select && styles.select, verticalAlign && styles[variationName('verticalAlign', verticalAlign)]);\n  const checkBoxRole = role === 'option' ? 'presentation' : undefined;\n  const optionMarkup = allowMultiple ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: multiSelectClassName\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: id,\n    value: value,\n    checked: select,\n    active: active,\n    disabled: disabled,\n    onChange: handleClick,\n    role: checkBoxRole\n  })), mediaMarkup, label) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: singleSelectClassName,\n    onClick: handleClick,\n    disabled: disabled,\n    onFocus: toggleFocused,\n    onBlur: toggleFocused,\n    \"aria-pressed\": active\n  }, mediaMarkup, label);\n  const scrollMarkup = active ? /*#__PURE__*/React.createElement(Scrollable.ScrollTo, null) : null;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    className: styles.Option,\n    tabIndex: -1\n  }, scrollMarkup, optionMarkup);\n}\n\nexport { Option };\n"]},"metadata":{},"sourceType":"module"}