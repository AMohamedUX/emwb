{"ast":null,"code":"import _slicedToArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { tokens, osColorSchemes } from '../../tokens/tokens.js';\nvar staticCustomProperties = getStaticCustomProperties(tokens);\nvar colorSchemeDeclarations = getColorSchemeDeclarations('light', tokens, osColorSchemes);\nvar defaultDeclarations = \"\".concat(colorSchemeDeclarations).concat(staticCustomProperties);\n/**\n * Creates CSS Rules for each color-scheme.\n * @example:\n * [p-color-scheme=\"light\"] {...}\n * [p-color-scheme=\"dark\"] {...}\n * [p-color-scheme=\"dim\"] {...}\n */\n\nfunction getColorSchemeRules(tokens, osColorSchemes) {\n  return Object.keys(tokens.colorSchemes).map(function (key) {\n    var colorScheme = key;\n    var selector = \"[p-color-scheme=\\\"\".concat(colorScheme, \"\\\"]\");\n    var colorCustomProperties = getColorSchemeDeclarations(colorScheme, tokens, osColorSchemes);\n    return \"\".concat(selector, \"{\").concat(colorCustomProperties).concat(getStaticCustomProperties(tokens), \"}\");\n  }).join('');\n}\n/**\n * Creates static CSS custom properties.\n * Note: These values don't vary by color-scheme.\n */\n\n\nfunction getStaticCustomProperties(tokens) {\n  return Object.entries(tokens).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        tokenGroup = _ref2[0];\n\n    return tokenGroup !== 'colorSchemes';\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        _ = _ref4[0],\n        tokens = _ref4[1];\n\n    return getCustomProperties(tokens);\n  }).join('');\n}\n/**\n * Creates CSS declarations for a given color-scheme.\n */\n\n\nfunction getColorSchemeDeclarations(colorScheme, tokens, osColorSchemes) {\n  return [\"color-scheme:\".concat(osColorSchemes[colorScheme], \";\"), getCustomProperties(tokens.colorSchemes[colorScheme])].join('');\n}\n/**\n * Creates CSS custom properties for a given tokens object.\n */\n\n\nfunction getCustomProperties(tokens) {\n  return Object.entries(tokens).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        token = _ref6[0],\n        value = _ref6[1];\n\n    return token.startsWith('keyframes') ? \"--p-\".concat(token, \":p-\").concat(token, \";\") : \"--p-\".concat(token, \":\").concat(value, \";\");\n  }).join('');\n}\n/**\n * Concatenates the `keyframes` token-group into a single string.\n */\n\n\nfunction getKeyframes(motion) {\n  return Object.entries(motion).filter(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 1),\n        token = _ref8[0];\n\n    return token.startsWith('keyframes');\n  }).map(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 2),\n        token = _ref10[0],\n        value = _ref10[1];\n\n    return \"@keyframes p-\".concat(token).concat(value);\n  }).join('');\n}\n/**\n * Adapted from: https://github.com/argyleink/gui-challenges/blob/main/color-schemes/style.css\n */\n\n\nvar styles = \"\\n  :root{\".concat(defaultDeclarations, \"}\\n  \").concat(getColorSchemeRules(tokens, osColorSchemes), \"\\n  \").concat(getKeyframes(tokens.motion), \"\\n\");\nexport { getColorSchemeDeclarations, getColorSchemeRules, getCustomProperties, getKeyframes, getStaticCustomProperties, styles };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/CustomProperties/styles.js"],"names":["tokens","osColorSchemes","staticCustomProperties","getStaticCustomProperties","colorSchemeDeclarations","getColorSchemeDeclarations","defaultDeclarations","getColorSchemeRules","Object","keys","colorSchemes","map","key","colorScheme","selector","colorCustomProperties","join","entries","filter","tokenGroup","_","getCustomProperties","token","value","startsWith","getKeyframes","motion","styles"],"mappings":"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","sourcesContent":["import { tokens, osColorSchemes } from '../../tokens/tokens.js';\n\nconst staticCustomProperties = getStaticCustomProperties(tokens);\nconst colorSchemeDeclarations = getColorSchemeDeclarations('light', tokens, osColorSchemes);\nconst defaultDeclarations = `${colorSchemeDeclarations}${staticCustomProperties}`;\n/**\n * Creates CSS Rules for each color-scheme.\n * @example:\n * [p-color-scheme=\"light\"] {...}\n * [p-color-scheme=\"dark\"] {...}\n * [p-color-scheme=\"dim\"] {...}\n */\n\nfunction getColorSchemeRules(tokens, osColorSchemes) {\n  return Object.keys(tokens.colorSchemes).map(key => {\n    const colorScheme = key;\n    const selector = `[p-color-scheme=\"${colorScheme}\"]`;\n    const colorCustomProperties = getColorSchemeDeclarations(colorScheme, tokens, osColorSchemes);\n    return `${selector}{${colorCustomProperties}${getStaticCustomProperties(tokens)}}`;\n  }).join('');\n}\n/**\n * Creates static CSS custom properties.\n * Note: These values don't vary by color-scheme.\n */\n\nfunction getStaticCustomProperties(tokens) {\n  return Object.entries(tokens).filter(([tokenGroup]) => tokenGroup !== 'colorSchemes').map(([_, tokens]) => getCustomProperties(tokens)).join('');\n}\n/**\n * Creates CSS declarations for a given color-scheme.\n */\n\nfunction getColorSchemeDeclarations(colorScheme, tokens, osColorSchemes) {\n  return [`color-scheme:${osColorSchemes[colorScheme]};`, getCustomProperties(tokens.colorSchemes[colorScheme])].join('');\n}\n/**\n * Creates CSS custom properties for a given tokens object.\n */\n\nfunction getCustomProperties(tokens) {\n  return Object.entries(tokens).map(([token, value]) => token.startsWith('keyframes') ? `--p-${token}:p-${token};` : `--p-${token}:${value};`).join('');\n}\n/**\n * Concatenates the `keyframes` token-group into a single string.\n */\n\nfunction getKeyframes(motion) {\n  return Object.entries(motion).filter(([token]) => token.startsWith('keyframes')).map(([token, value]) => `@keyframes p-${token}${value}`).join('');\n}\n/**\n * Adapted from: https://github.com/argyleink/gui-challenges/blob/main/color-schemes/style.css\n */\n\nconst styles = `\n  :root{${defaultDeclarations}}\n  ${getColorSchemeRules(tokens, osColorSchemes)}\n  ${getKeyframes(tokens.motion)}\n`;\n\nexport { getColorSchemeDeclarations, getColorSchemeRules, getCustomProperties, getKeyframes, getStaticCustomProperties, styles };\n"]},"metadata":{},"sourceType":"module"}