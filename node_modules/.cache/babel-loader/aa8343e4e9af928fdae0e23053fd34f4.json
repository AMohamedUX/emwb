{"ast":null,"code":"import React from 'react';\nimport { handleMouseUpByBlurring } from '../../utilities/focus.js';\nimport { UnstyledLink } from '../UnstyledLink/UnstyledLink.js';\n\nfunction UnstyledButton(_ref) {\n  let {\n    id,\n    children,\n    className,\n    url,\n    external,\n    download,\n    submit,\n    disabled,\n    loading,\n    pressed,\n    accessibilityLabel,\n    role,\n    ariaControls,\n    ariaExpanded,\n    ariaDescribedBy,\n    onClick,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    onKeyPress,\n    onKeyUp,\n    onMouseEnter,\n    onTouchStart,\n    ...rest\n  } = _ref;\n  let buttonMarkup;\n  const commonProps = {\n    id,\n    className,\n    'aria-label': accessibilityLabel\n  };\n  const interactiveProps = { ...commonProps,\n    role,\n    onClick,\n    onFocus,\n    onBlur,\n    onMouseUp: handleMouseUpByBlurring,\n    onMouseEnter,\n    onTouchStart\n  };\n\n  if (url) {\n    buttonMarkup = disabled ?\n    /*#__PURE__*/\n    // Render an `<a>` so toggling disabled/enabled state changes only the\n    // `href` attribute instead of replacing the whole element.\n    React.createElement(\"a\", commonProps, children) : /*#__PURE__*/React.createElement(UnstyledLink, Object.assign({}, interactiveProps, {\n      url: url,\n      external: external,\n      download: download\n    }, rest), children);\n  } else {\n    buttonMarkup = /*#__PURE__*/React.createElement(\"button\", Object.assign({}, interactiveProps, {\n      type: submit ? 'submit' : 'button',\n      disabled: disabled,\n      \"aria-busy\": loading ? true : undefined,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": ariaExpanded,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-pressed\": pressed,\n      onKeyDown: onKeyDown,\n      onKeyUp: onKeyUp,\n      onKeyPress: onKeyPress\n    }, rest), children);\n  }\n\n  return buttonMarkup;\n}\n\nexport { UnstyledButton };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/UnstyledButton/UnstyledButton.js"],"names":["React","handleMouseUpByBlurring","UnstyledLink","UnstyledButton","id","children","className","url","external","download","submit","disabled","loading","pressed","accessibilityLabel","role","ariaControls","ariaExpanded","ariaDescribedBy","onClick","onFocus","onBlur","onKeyDown","onKeyPress","onKeyUp","onMouseEnter","onTouchStart","rest","buttonMarkup","commonProps","interactiveProps","onMouseUp","createElement","Object","assign","type","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,cAAT,OAyBG;AAAA,MAzBqB;AACtBC,IAAAA,EADsB;AAEtBC,IAAAA,QAFsB;AAGtBC,IAAAA,SAHsB;AAItBC,IAAAA,GAJsB;AAKtBC,IAAAA,QALsB;AAMtBC,IAAAA,QANsB;AAOtBC,IAAAA,MAPsB;AAQtBC,IAAAA,QARsB;AAStBC,IAAAA,OATsB;AAUtBC,IAAAA,OAVsB;AAWtBC,IAAAA,kBAXsB;AAYtBC,IAAAA,IAZsB;AAatBC,IAAAA,YAbsB;AActBC,IAAAA,YAdsB;AAetBC,IAAAA,eAfsB;AAgBtBC,IAAAA,OAhBsB;AAiBtBC,IAAAA,OAjBsB;AAkBtBC,IAAAA,MAlBsB;AAmBtBC,IAAAA,SAnBsB;AAoBtBC,IAAAA,UApBsB;AAqBtBC,IAAAA,OArBsB;AAsBtBC,IAAAA,YAtBsB;AAuBtBC,IAAAA,YAvBsB;AAwBtB,OAAGC;AAxBmB,GAyBrB;AACD,MAAIC,YAAJ;AACA,QAAMC,WAAW,GAAG;AAClBzB,IAAAA,EADkB;AAElBE,IAAAA,SAFkB;AAGlB,kBAAcQ;AAHI,GAApB;AAKA,QAAMgB,gBAAgB,GAAG,EAAE,GAAGD,WAAL;AACvBd,IAAAA,IADuB;AAEvBI,IAAAA,OAFuB;AAGvBC,IAAAA,OAHuB;AAIvBC,IAAAA,MAJuB;AAKvBU,IAAAA,SAAS,EAAE9B,uBALY;AAMvBwB,IAAAA,YANuB;AAOvBC,IAAAA;AAPuB,GAAzB;;AAUA,MAAInB,GAAJ,EAAS;AACPqB,IAAAA,YAAY,GAAGjB,QAAQ;AACvB;AACA;AACA;AACAX,IAAAA,KAAK,CAACgC,aAAN,CAAoB,GAApB,EAAyBH,WAAzB,EAAsCxB,QAAtC,CAJuB,GAI2B,aAAaL,KAAK,CAACgC,aAAN,CAAoB9B,YAApB,EAAkC+B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,gBAAlB,EAAoC;AACnIvB,MAAAA,GAAG,EAAEA,GAD8H;AAEnIC,MAAAA,QAAQ,EAAEA,QAFyH;AAGnIC,MAAAA,QAAQ,EAAEA;AAHyH,KAApC,EAI9FkB,IAJ8F,CAAlC,EAIrDtB,QAJqD,CAJ/D;AASD,GAVD,MAUO;AACLuB,IAAAA,YAAY,GAAG,aAAa5B,KAAK,CAACgC,aAAN,CAAoB,QAApB,EAA8BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,gBAAlB,EAAoC;AAC5FK,MAAAA,IAAI,EAAEzB,MAAM,GAAG,QAAH,GAAc,QADkE;AAE5FC,MAAAA,QAAQ,EAAEA,QAFkF;AAG5F,mBAAaC,OAAO,GAAG,IAAH,GAAUwB,SAH8D;AAI5F,uBAAiBpB,YAJ2E;AAK5F,uBAAiBC,YAL2E;AAM5F,0BAAoBC,eANwE;AAO5F,sBAAgBL,OAP4E;AAQ5FS,MAAAA,SAAS,EAAEA,SARiF;AAS5FE,MAAAA,OAAO,EAAEA,OATmF;AAU5FD,MAAAA,UAAU,EAAEA;AAVgF,KAApC,EAWvDI,IAXuD,CAA9B,EAWlBtB,QAXkB,CAA5B;AAYD;;AAED,SAAOuB,YAAP;AACD;;AAED,SAASzB,cAAT","sourcesContent":["import React from 'react';\nimport { handleMouseUpByBlurring } from '../../utilities/focus.js';\nimport { UnstyledLink } from '../UnstyledLink/UnstyledLink.js';\n\nfunction UnstyledButton({\n  id,\n  children,\n  className,\n  url,\n  external,\n  download,\n  submit,\n  disabled,\n  loading,\n  pressed,\n  accessibilityLabel,\n  role,\n  ariaControls,\n  ariaExpanded,\n  ariaDescribedBy,\n  onClick,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onKeyPress,\n  onKeyUp,\n  onMouseEnter,\n  onTouchStart,\n  ...rest\n}) {\n  let buttonMarkup;\n  const commonProps = {\n    id,\n    className,\n    'aria-label': accessibilityLabel\n  };\n  const interactiveProps = { ...commonProps,\n    role,\n    onClick,\n    onFocus,\n    onBlur,\n    onMouseUp: handleMouseUpByBlurring,\n    onMouseEnter,\n    onTouchStart\n  };\n\n  if (url) {\n    buttonMarkup = disabled ?\n    /*#__PURE__*/\n    // Render an `<a>` so toggling disabled/enabled state changes only the\n    // `href` attribute instead of replacing the whole element.\n    React.createElement(\"a\", commonProps, children) : /*#__PURE__*/React.createElement(UnstyledLink, Object.assign({}, interactiveProps, {\n      url: url,\n      external: external,\n      download: download\n    }, rest), children);\n  } else {\n    buttonMarkup = /*#__PURE__*/React.createElement(\"button\", Object.assign({}, interactiveProps, {\n      type: submit ? 'submit' : 'button',\n      disabled: disabled,\n      \"aria-busy\": loading ? true : undefined,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": ariaExpanded,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-pressed\": pressed,\n      onKeyDown: onKeyDown,\n      onKeyUp: onKeyUp,\n      onKeyPress: onKeyPress\n    }, rest), children);\n  }\n\n  return buttonMarkup;\n}\n\nexport { UnstyledButton };\n"]},"metadata":{},"sourceType":"module"}