{"ast":null,"code":"import _slicedToArray from\"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useCallback}from\"react\";import{CircleTickOutlineMinor}from'@shopify/polaris-icons';import{Stack,TextContainer,Button,Icon,Card,Modal}from\"@shopify/polaris\";import EmailPreview from\"./EmailPreview\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotificationItem=function NotificationItem(_ref){var content=_ref.content;var _useState=useState(\"base\"),_useState2=_slicedToArray(_useState,2),iconValue=_useState2[0],setIconValue=_useState2[1];var _useState3=useState(\"Add\"),_useState4=_slicedToArray(_useState3,2),buttonState=_useState4[0],setButtonState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),buttonColor=_useState6[0],setButtonColor=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),active=_useState8[0],setActive=_useState8[1];var handleChange=useCallback(function(){return setActive(!active);},[active]);var activator=/*#__PURE__*/_jsx(Button,{onClick:handleChange,plain:true,children:\"Preview\"});var subscribe=function subscribe(){if(iconValue===\"base\"){setButtonColor(true);setButtonState(\"Delete\");setIconValue(\"primary\");}else{setButtonColor(false);setButtonState(\"Add\");setIconValue(\"base\");}};return/*#__PURE__*/_jsx(Card.Section,{children:/*#__PURE__*/_jsxs(Stack,{children:[/*#__PURE__*/_jsx(Stack.Item,{children:/*#__PURE__*/_jsx(Icon,{source:CircleTickOutlineMinor,color:iconValue})}),/*#__PURE__*/_jsx(Stack.Item,{fill:true,children:/*#__PURE__*/_jsx(TextContainer,{children:content})}),/*#__PURE__*/_jsx(Stack.Item,{children:/*#__PURE__*/_jsx(Modal,{activator:activator,open:active,onClose:handleChange,primaryAction:{content:'Upgrade Now',onAction:handleChange},children:/*#__PURE__*/_jsx(Modal.Section,{children:/*#__PURE__*/_jsx(EmailPreview,{})})})}),/*#__PURE__*/_jsx(Stack.Item,{children:/*#__PURE__*/_jsx(Button,{onClick:subscribe,plain:true,destructive:buttonColor,children:buttonState})})]})});};export default NotificationItem;","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/src/Components/NotificationItem.jsx"],"names":["React","useState","useCallback","CircleTickOutlineMinor","Stack","TextContainer","Button","Icon","Card","Modal","EmailPreview","NotificationItem","content","iconValue","setIconValue","buttonState","setButtonState","buttonColor","setButtonColor","active","setActive","handleChange","activator","subscribe","onAction"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,sBAAT,KAAuC,wBAAvC,CACA,OAASC,KAAT,CAAgBC,aAAhB,CAA+BC,MAA/B,CAAuCC,IAAvC,CAA6CC,IAA7C,CAAmDC,KAAnD,KAAgE,kBAAhE,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACtC,cAAkCX,QAAQ,CAAC,MAAD,CAA1C,wCAAOY,SAAP,eAAkBC,YAAlB,eACA,eAAsCb,QAAQ,CAAC,KAAD,CAA9C,yCAAOc,WAAP,eAAoBC,cAApB,eACA,eAAsCf,QAAQ,CAAC,KAAD,CAA9C,yCAAOgB,WAAP,eAAoBC,cAApB,eAEA,eAA4BjB,QAAQ,CAAC,KAAD,CAApC,yCAAOkB,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,YAAY,CAAGnB,WAAW,CAAC,iBAAMkB,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAAD,CAA2B,CAACA,MAAD,CAA3B,CAAhC,CACA,GAAMG,CAAAA,SAAS,cAAG,KAAC,MAAD,EAAQ,OAAO,CAAED,YAAjB,CAA+B,KAAK,KAApC,qBAAlB,CAEA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAIV,SAAS,GAAK,MAAlB,CAA0B,CACtBK,cAAc,CAAC,IAAD,CAAd,CACAF,cAAc,CAAC,QAAD,CAAd,CACAF,YAAY,CAAC,SAAD,CAAZ,CACH,CAJD,IAIO,CACHI,cAAc,CAAC,KAAD,CAAd,CACAF,cAAc,CAAC,KAAD,CAAd,CACAF,YAAY,CAAC,MAAD,CAAZ,CACH,CACJ,CAVD,CAYA,mBACI,KAAC,IAAD,CAAM,OAAN,wBACI,MAAC,KAAD,yBACI,KAAC,KAAD,CAAO,IAAP,wBACI,KAAC,IAAD,EACI,MAAM,CAAEX,sBADZ,CAEI,KAAK,CAAEU,SAFX,EADJ,EADJ,cAMI,KAAC,KAAD,CAAO,IAAP,EAAY,IAAI,KAAhB,uBACI,KAAC,aAAD,WAAgBD,OAAhB,EADJ,EANJ,cASI,KAAC,KAAD,CAAO,IAAP,wBACI,KAAC,KAAD,EAAO,SAAS,CAAEU,SAAlB,CACI,IAAI,CAAEH,MADV,CAEI,OAAO,CAAEE,YAFb,CAGI,aAAa,CAAE,CACXT,OAAO,CAAE,aADE,CAEXY,QAAQ,CAAEH,YAFC,CAHnB,uBAOI,KAAC,KAAD,CAAO,OAAP,wBACI,KAAC,YAAD,IADJ,EAPJ,EADJ,EATJ,cAsBI,KAAC,KAAD,CAAO,IAAP,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAEE,SAAjB,CAA4B,KAAK,KAAjC,CAAkC,WAAW,CAAEN,WAA/C,UAA6DF,WAA7D,EADJ,EAtBJ,GADJ,EADJ,CA8BH,CAnDD,CAqDA,cAAeJ,CAAAA,gBAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { CircleTickOutlineMinor } from '@shopify/polaris-icons';\nimport { Stack, TextContainer, Button, Icon, Card, Modal } from \"@shopify/polaris\";\nimport EmailPreview from \"./EmailPreview\"\nconst NotificationItem = ({ content }) => {\n    const [iconValue, setIconValue] = useState(\"base\")\n    const [buttonState, setButtonState] = useState(\"Add\")\n    const [buttonColor, setButtonColor] = useState(false)\n\n    const [active, setActive] = useState(false);\n    const handleChange = useCallback(() => setActive(!active), [active]);\n    const activator = <Button onClick={handleChange} plain>Preview</Button>\n\n    const subscribe = () => {\n        if (iconValue === \"base\") {\n            setButtonColor(true)\n            setButtonState(\"Delete\")\n            setIconValue(\"primary\")\n        } else {\n            setButtonColor(false)\n            setButtonState(\"Add\")\n            setIconValue(\"base\")\n        }\n    }\n\n    return (\n        <Card.Section>\n            <Stack>\n                <Stack.Item>\n                    <Icon\n                        source={CircleTickOutlineMinor}\n                        color={iconValue} />\n                </Stack.Item>\n                <Stack.Item fill>\n                    <TextContainer>{content}</TextContainer>\n                </Stack.Item>\n                <Stack.Item>\n                    <Modal activator={activator}\n                        open={active}\n                        onClose={handleChange}\n                        primaryAction={{\n                            content: 'Upgrade Now',\n                            onAction: handleChange,\n                        }}>\n                        <Modal.Section>\n                            <EmailPreview/>\n                        </Modal.Section>\n                        </Modal>\n                </Stack.Item>\n                <Stack.Item>\n                    <Button onClick={subscribe} plain destructive={buttonColor}>{buttonState}</Button>\n                </Stack.Item>\n            </Stack>\n        </Card.Section>\n    )\n}\n\nexport default NotificationItem"]},"metadata":{},"sourceType":"module"}