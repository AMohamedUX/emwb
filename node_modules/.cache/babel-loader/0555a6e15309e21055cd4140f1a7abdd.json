{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useIsMountedRef } from '../../../../utilities/use-is-mounted-ref.js';\nimport styles from './Loading.scss.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nconst STUCK_THRESHOLD = 99;\n\nfunction Loading() {\n  const i18n = useI18n();\n  const isMountedRef = useIsMountedRef();\n  const [progress, setProgress] = useState(0);\n  const [animating, setAnimating] = useState(false);\n  useEffect(() => {\n    if (progress >= STUCK_THRESHOLD || animating) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (!isMountedRef.current) return;\n      const step = Math.max((STUCK_THRESHOLD - progress) / 10, 1);\n      setAnimating(true);\n      setProgress(progress + step);\n    });\n  }, [progress, animating, isMountedRef]);\n  const customStyles = {\n    transform: `scaleX(${Math.floor(progress) / 100})`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Loading,\n    \"aria-valuenow\": progress,\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    role: \"progressbar\",\n    \"aria-label\": i18n.translate('Polaris.Loading.label')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Level,\n    style: customStyles,\n    onTransitionEnd: () => setAnimating(false)\n  }));\n}\n\nexport { Loading };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.js"],"names":["React","useState","useEffect","useIsMountedRef","styles","useI18n","STUCK_THRESHOLD","Loading","i18n","isMountedRef","progress","setProgress","animating","setAnimating","requestAnimationFrame","current","step","Math","max","customStyles","transform","floor","createElement","className","role","translate","Level","style","onTransitionEnd"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,6CAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,qCAAxB;AAEA,MAAMC,eAAe,GAAG,EAAxB;;AACA,SAASC,OAAT,GAAmB;AACjB,QAAMC,IAAI,GAAGH,OAAO,EAApB;AACA,QAAMI,YAAY,GAAGN,eAAe,EAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,IAAIJ,eAAZ,IAA+BM,SAAnC,EAA8C;AAC5C;AACD;;AAEDE,IAAAA,qBAAqB,CAAC,MAAM;AAC1B,UAAI,CAACL,YAAY,CAACM,OAAlB,EAA2B;AAC3B,YAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACZ,eAAe,GAAGI,QAAnB,IAA+B,EAAxC,EAA4C,CAA5C,CAAb;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,WAAW,CAACD,QAAQ,GAAGM,IAAZ,CAAX;AACD,KALoB,CAArB;AAMD,GAXQ,EAWN,CAACN,QAAD,EAAWE,SAAX,EAAsBH,YAAtB,CAXM,CAAT;AAYA,QAAMU,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAG,UAASH,IAAI,CAACI,KAAL,CAAWX,QAAX,IAAuB,GAAI;AAD7B,GAArB;AAGA,SAAO,aAAaV,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,IAAAA,SAAS,EAAEnB,MAAM,CAACG,OAD2B;AAE7C,qBAAiBG,QAF4B;AAG7C,qBAAiB,CAH4B;AAI7C,qBAAiB,GAJ4B;AAK7Cc,IAAAA,IAAI,EAAE,aALuC;AAM7C,kBAAchB,IAAI,CAACiB,SAAL,CAAe,uBAAf;AAN+B,GAA3B,EAOjB,aAAazB,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AACzCC,IAAAA,SAAS,EAAEnB,MAAM,CAACsB,KADuB;AAEzCC,IAAAA,KAAK,EAAER,YAFkC;AAGzCS,IAAAA,eAAe,EAAE,MAAMf,YAAY,CAAC,KAAD;AAHM,GAA3B,CAPI,CAApB;AAYD;;AAED,SAASN,OAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useIsMountedRef } from '../../../../utilities/use-is-mounted-ref.js';\nimport styles from './Loading.scss.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\n\nconst STUCK_THRESHOLD = 99;\nfunction Loading() {\n  const i18n = useI18n();\n  const isMountedRef = useIsMountedRef();\n  const [progress, setProgress] = useState(0);\n  const [animating, setAnimating] = useState(false);\n  useEffect(() => {\n    if (progress >= STUCK_THRESHOLD || animating) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (!isMountedRef.current) return;\n      const step = Math.max((STUCK_THRESHOLD - progress) / 10, 1);\n      setAnimating(true);\n      setProgress(progress + step);\n    });\n  }, [progress, animating, isMountedRef]);\n  const customStyles = {\n    transform: `scaleX(${Math.floor(progress) / 100})`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Loading,\n    \"aria-valuenow\": progress,\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    role: \"progressbar\",\n    \"aria-label\": i18n.translate('Polaris.Loading.label')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Level,\n    style: customStyles,\n    onTransitionEnd: () => setAnimating(false)\n  }));\n}\n\nexport { Loading };\n"]},"metadata":{},"sourceType":"module"}