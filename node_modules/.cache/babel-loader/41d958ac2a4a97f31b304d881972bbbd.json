{"ast":null,"code":"import React from 'react';\nimport { ArrowLeftMinor } from '@shopify/polaris-icons';\nimport { handleMouseUpByBlurring } from '../../utilities/focus.js';\nimport styles from './Breadcrumbs.scss.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { UnstyledLink } from '../UnstyledLink/UnstyledLink.js';\n\nfunction Breadcrumbs(_ref) {\n  var breadcrumbs = _ref.breadcrumbs;\n  var breadcrumb = breadcrumbs[breadcrumbs.length - 1];\n\n  if (breadcrumb == null) {\n    return null;\n  }\n\n  var content = breadcrumb.content;\n  var contentMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: ArrowLeftMinor\n  })), /*#__PURE__*/React.createElement(VisuallyHidden, null, content));\n  var breadcrumbMarkup = 'url' in breadcrumb ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    key: content,\n    url: breadcrumb.url,\n    className: styles.Breadcrumb,\n    onMouseUp: handleMouseUpByBlurring,\n    \"aria-label\": breadcrumb.accessibilityLabel\n  }, contentMarkup) : /*#__PURE__*/React.createElement(\"button\", {\n    key: content,\n    className: styles.Breadcrumb,\n    onClick: breadcrumb.onAction,\n    onMouseUp: handleMouseUpByBlurring,\n    type: \"button\",\n    \"aria-label\": breadcrumb.accessibilityLabel\n  }, contentMarkup);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    role: \"navigation\"\n  }, breadcrumbMarkup);\n}\n\nexport { Breadcrumbs };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Breadcrumbs/Breadcrumbs.js"],"names":["React","ArrowLeftMinor","handleMouseUpByBlurring","styles","Icon","VisuallyHidden","UnstyledLink","Breadcrumbs","breadcrumbs","breadcrumb","length","content","contentMarkup","createElement","Fragment","className","source","breadcrumbMarkup","key","url","Breadcrumb","onMouseUp","accessibilityLabel","onClick","onAction","type","role"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,WAAT,OAEG;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAMC,UAAU,GAAGD,WAAW,CAACA,WAAW,CAACE,MAAZ,GAAqB,CAAtB,CAA9B;;AAEA,MAAID,UAAU,IAAI,IAAlB,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED,MACEE,OADF,GAEIF,UAFJ,CACEE,OADF;AAGA,MAAMC,aAAa,GAAG,aAAaZ,KAAK,CAACa,aAAN,CAAoBb,KAAK,CAACc,QAA1B,EAAoC,IAApC,EAA0C,aAAad,KAAK,CAACa,aAAN,CAAoB,MAApB,EAA4B;AACpHE,IAAAA,SAAS,EAAEZ,MAAM,CAACC;AADkG,GAA5B,EAEvF,aAAaJ,KAAK,CAACa,aAAN,CAAoBT,IAApB,EAA0B;AACxCY,IAAAA,MAAM,EAAEf;AADgC,GAA1B,CAF0E,CAAvD,EAI9B,aAAaD,KAAK,CAACa,aAAN,CAAoBR,cAApB,EAAoC,IAApC,EAA0CM,OAA1C,CAJiB,CAAnC;AAKA,MAAMM,gBAAgB,GAAG,SAASR,UAAT,GAAsB,aAAaT,KAAK,CAACa,aAAN,CAAoBP,YAApB,EAAkC;AAC5FY,IAAAA,GAAG,EAAEP,OADuF;AAE5FQ,IAAAA,GAAG,EAAEV,UAAU,CAACU,GAF4E;AAG5FJ,IAAAA,SAAS,EAAEZ,MAAM,CAACiB,UAH0E;AAI5FC,IAAAA,SAAS,EAAEnB,uBAJiF;AAK5F,kBAAcO,UAAU,CAACa;AALmE,GAAlC,EAMzDV,aANyD,CAAnC,GAML,aAAaZ,KAAK,CAACa,aAAN,CAAoB,QAApB,EAA8B;AAC7DK,IAAAA,GAAG,EAAEP,OADwD;AAE7DI,IAAAA,SAAS,EAAEZ,MAAM,CAACiB,UAF2C;AAG7DG,IAAAA,OAAO,EAAEd,UAAU,CAACe,QAHyC;AAI7DH,IAAAA,SAAS,EAAEnB,uBAJkD;AAK7DuB,IAAAA,IAAI,EAAE,QALuD;AAM7D,kBAAchB,UAAU,CAACa;AANoC,GAA9B,EAO9BV,aAP8B,CANjC;AAcA,SAAO,aAAaZ,KAAK,CAACa,aAAN,CAAoB,KAApB,EAA2B;AAC7Ca,IAAAA,IAAI,EAAE;AADuC,GAA3B,EAEjBT,gBAFiB,CAApB;AAGD;;AAED,SAASV,WAAT","sourcesContent":["import React from 'react';\nimport { ArrowLeftMinor } from '@shopify/polaris-icons';\nimport { handleMouseUpByBlurring } from '../../utilities/focus.js';\nimport styles from './Breadcrumbs.scss.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { UnstyledLink } from '../UnstyledLink/UnstyledLink.js';\n\nfunction Breadcrumbs({\n  breadcrumbs\n}) {\n  const breadcrumb = breadcrumbs[breadcrumbs.length - 1];\n\n  if (breadcrumb == null) {\n    return null;\n  }\n\n  const {\n    content\n  } = breadcrumb;\n  const contentMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: ArrowLeftMinor\n  })), /*#__PURE__*/React.createElement(VisuallyHidden, null, content));\n  const breadcrumbMarkup = 'url' in breadcrumb ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    key: content,\n    url: breadcrumb.url,\n    className: styles.Breadcrumb,\n    onMouseUp: handleMouseUpByBlurring,\n    \"aria-label\": breadcrumb.accessibilityLabel\n  }, contentMarkup) : /*#__PURE__*/React.createElement(\"button\", {\n    key: content,\n    className: styles.Breadcrumb,\n    onClick: breadcrumb.onAction,\n    onMouseUp: handleMouseUpByBlurring,\n    type: \"button\",\n    \"aria-label\": breadcrumb.accessibilityLabel\n  }, contentMarkup);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    role: \"navigation\"\n  }, breadcrumbMarkup);\n}\n\nexport { Breadcrumbs };\n"]},"metadata":{},"sourceType":"module"}