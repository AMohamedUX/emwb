{"ast":null,"code":"import React, { memo, forwardRef } from 'react';\nimport { unstyled } from '../shared.js';\nimport { useLink } from '../../utilities/link/hooks.js'; // that the interface defining the props is defined in this file, not imported\n// from elsewhere. This silly workaround ensures that the Props Explorer table\n// is generated correctly.\n// Wrapping forwardRef in a memo gets a name set since\n// https://github.com/facebook/react/issues/16722\n// but eslint-plugin-react doesn't know that just yet\n// eslint-disable-next-line react/display-name\n\nconst UnstyledLink = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function UnstyledLink(props, _ref) {\n  const LinkComponent = useLink();\n\n  if (LinkComponent) {\n    return /*#__PURE__*/React.createElement(LinkComponent, Object.assign({}, unstyled.props, props));\n  }\n\n  const {\n    external,\n    url,\n    ...rest\n  } = props;\n  const target = external ? '_blank' : undefined;\n  const rel = external ? 'noopener noreferrer' : undefined;\n  return /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    target: target\n  }, rest, {\n    href: url,\n    rel: rel\n  }, unstyled.props));\n}));\nexport { UnstyledLink };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/UnstyledLink/UnstyledLink.js"],"names":["React","memo","forwardRef","unstyled","useLink","UnstyledLink","props","_ref","LinkComponent","createElement","Object","assign","external","url","rest","target","undefined","rel","href"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,aAAaJ,IAAI,EAAE,aAAaC,UAAU,CAAC,SAASG,YAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmC;AACjG,QAAMC,aAAa,GAAGJ,OAAO,EAA7B;;AAEA,MAAII,aAAJ,EAAmB;AACjB,WAAO,aAAaR,KAAK,CAACS,aAAN,CAAoBD,aAApB,EAAmCE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,QAAQ,CAACG,KAA3B,EAAkCA,KAAlC,CAAnC,CAApB;AACD;;AAED,QAAM;AACJM,IAAAA,QADI;AAEJC,IAAAA,GAFI;AAGJ,OAAGC;AAHC,MAIFR,KAJJ;AAKA,QAAMS,MAAM,GAAGH,QAAQ,GAAG,QAAH,GAAcI,SAArC;AACA,QAAMC,GAAG,GAAGL,QAAQ,GAAG,qBAAH,GAA2BI,SAA/C;AACA,SAAO,aAAahB,KAAK,CAACS,aAAN,CAAoB,GAApB,EAAyBC,MAAM,CAACC,MAAP,CAAc;AACzDI,IAAAA,MAAM,EAAEA;AADiD,GAAd,EAE1CD,IAF0C,EAEpC;AACPI,IAAAA,IAAI,EAAEL,GADC;AAEPI,IAAAA,GAAG,EAAEA;AAFE,GAFoC,EAK1Cd,QAAQ,CAACG,KALiC,CAAzB,CAApB;AAMD,CApB8D,CAAzB,CAAtC;AAsBA,SAASD,YAAT","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { unstyled } from '../shared.js';\nimport { useLink } from '../../utilities/link/hooks.js';\n\n// that the interface defining the props is defined in this file, not imported\n// from elsewhere. This silly workaround ensures that the Props Explorer table\n// is generated correctly.\n\n// Wrapping forwardRef in a memo gets a name set since\n// https://github.com/facebook/react/issues/16722\n// but eslint-plugin-react doesn't know that just yet\n// eslint-disable-next-line react/display-name\nconst UnstyledLink = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function UnstyledLink(props, _ref) {\n  const LinkComponent = useLink();\n\n  if (LinkComponent) {\n    return /*#__PURE__*/React.createElement(LinkComponent, Object.assign({}, unstyled.props, props));\n  }\n\n  const {\n    external,\n    url,\n    ...rest\n  } = props;\n  const target = external ? '_blank' : undefined;\n  const rel = external ? 'noopener noreferrer' : undefined;\n  return /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    target: target\n  }, rest, {\n    href: url,\n    rel: rel\n  }, unstyled.props));\n}));\n\nexport { UnstyledLink };\n"]},"metadata":{},"sourceType":"module"}