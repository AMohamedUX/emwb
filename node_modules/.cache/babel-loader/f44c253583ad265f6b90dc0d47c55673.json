{"ast":null,"code":"function scrollOptionIntoView(option, scrollable) {\n  var listTop = scrollable.scrollTop;\n  var listBottom = listTop + scrollable.clientHeight;\n  var optionHeight = option.offsetHeight;\n  var optionTop = option.offsetTop;\n  var optionBottom = optionTop + optionHeight;\n  var isVisible = optionTop > listTop && optionBottom < listBottom;\n\n  if (!isVisible) {\n    var top = 0;\n\n    if (optionBottom > listBottom) {\n      top = optionBottom + optionHeight * 0.85 - listBottom;\n    } else if (optionTop < listTop) {\n      top = optionTop - optionHeight * 0.15 - listTop;\n    }\n\n    requestAnimationFrame(function () {\n      scrollable.scrollBy({\n        top: top,\n        behavior: 'auto'\n      });\n    });\n  }\n}\n\nexport { scrollOptionIntoView };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/utilities/listbox/utilities.js"],"names":["scrollOptionIntoView","option","scrollable","listTop","scrollTop","listBottom","clientHeight","optionHeight","offsetHeight","optionTop","offsetTop","optionBottom","isVisible","top","requestAnimationFrame","scrollBy","behavior"],"mappings":"AAAA,SAASA,oBAAT,CAA8BC,MAA9B,EAAsCC,UAAtC,EAAkD;AAChD,MAAMC,OAAO,GAAGD,UAAU,CAACE,SAA3B;AACA,MAAMC,UAAU,GAAGF,OAAO,GAAGD,UAAU,CAACI,YAAxC;AACA,MACgBC,YADhB,GAEIN,MAFJ,CACEO,YADF;AAGA,MACaC,SADb,GAEIR,MAFJ,CACES,SADF;AAGA,MAAMC,YAAY,GAAGF,SAAS,GAAGF,YAAjC;AACA,MAAMK,SAAS,GAAGH,SAAS,GAAGN,OAAZ,IAAuBQ,YAAY,GAAGN,UAAxD;;AAEA,MAAI,CAACO,SAAL,EAAgB;AACd,QAAIC,GAAG,GAAG,CAAV;;AAEA,QAAIF,YAAY,GAAGN,UAAnB,EAA+B;AAC7BQ,MAAAA,GAAG,GAAGF,YAAY,GAAGJ,YAAY,GAAG,IAA9B,GAAqCF,UAA3C;AACD,KAFD,MAEO,IAAII,SAAS,GAAGN,OAAhB,EAAyB;AAC9BU,MAAAA,GAAG,GAAGJ,SAAS,GAAGF,YAAY,GAAG,IAA3B,GAAkCJ,OAAxC;AACD;;AAEDW,IAAAA,qBAAqB,CAAC,YAAM;AAC1BZ,MAAAA,UAAU,CAACa,QAAX,CAAoB;AAClBF,QAAAA,GAAG,EAAHA,GADkB;AAElBG,QAAAA,QAAQ,EAAE;AAFQ,OAApB;AAID,KALoB,CAArB;AAMD;AACF;;AAED,SAAShB,oBAAT","sourcesContent":["function scrollOptionIntoView(option, scrollable) {\n  const listTop = scrollable.scrollTop;\n  const listBottom = listTop + scrollable.clientHeight;\n  const {\n    offsetHeight: optionHeight\n  } = option;\n  const {\n    offsetTop: optionTop\n  } = option;\n  const optionBottom = optionTop + optionHeight;\n  const isVisible = optionTop > listTop && optionBottom < listBottom;\n\n  if (!isVisible) {\n    let top = 0;\n\n    if (optionBottom > listBottom) {\n      top = optionBottom + optionHeight * 0.85 - listBottom;\n    } else if (optionTop < listTop) {\n      top = optionTop - optionHeight * 0.15 - listTop;\n    }\n\n    requestAnimationFrame(() => {\n      scrollable.scrollBy({\n        top,\n        behavior: 'auto'\n      });\n    });\n  }\n}\n\nexport { scrollOptionIntoView };\n"]},"metadata":{},"sourceType":"module"}