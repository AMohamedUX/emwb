{"ast":null,"code":"import React from 'react';\nimport styles from './Menu.scss.js';\nimport { Message } from './components/Message/Message.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { ActionList } from '../../../ActionList/ActionList.js';\n\nfunction Menu(props) {\n  var actions = props.actions,\n      onOpen = props.onOpen,\n      onClose = props.onClose,\n      open = props.open,\n      activatorContent = props.activatorContent,\n      message = props.message,\n      colorScheme = props.colorScheme,\n      accessibilityLabel = props.accessibilityLabel;\n  var badgeProps = message && message.badge && {\n    content: message.badge.content,\n    status: message.badge.status\n  };\n  var messageMarkup = message && /*#__PURE__*/React.createElement(Message, {\n    title: message.title,\n    description: message.description,\n    action: {\n      onClick: message.action.onClick,\n      content: message.action.content\n    },\n    link: {\n      to: message.link.to,\n      content: message.link.content\n    },\n    badge: badgeProps\n  });\n  var isFullHeight = Boolean(message);\n  return /*#__PURE__*/React.createElement(Popover, {\n    activator: /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ActivatorWrapper\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: styles.Activator,\n      onClick: onOpen,\n      \"aria-label\": accessibilityLabel\n    }, activatorContent)),\n    active: open,\n    onClose: onClose,\n    fixed: true,\n    fullHeight: isFullHeight,\n    preferredAlignment: \"right\",\n    colorScheme: colorScheme\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    onActionAnyItem: onClose,\n    sections: actions\n  }), messageMarkup);\n}\n\nexport { Menu };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.js"],"names":["React","styles","Message","Popover","ActionList","Menu","props","actions","onOpen","onClose","open","activatorContent","message","colorScheme","accessibilityLabel","badgeProps","badge","content","status","messageMarkup","createElement","title","description","action","onClick","link","to","isFullHeight","Boolean","activator","className","ActivatorWrapper","type","Activator","active","fixed","fullHeight","preferredAlignment","onActionAnyItem","sections"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MACEC,OADF,GASID,KATJ,CACEC,OADF;AAAA,MAEEC,MAFF,GASIF,KATJ,CAEEE,MAFF;AAAA,MAGEC,OAHF,GASIH,KATJ,CAGEG,OAHF;AAAA,MAIEC,IAJF,GASIJ,KATJ,CAIEI,IAJF;AAAA,MAKEC,gBALF,GASIL,KATJ,CAKEK,gBALF;AAAA,MAMEC,OANF,GASIN,KATJ,CAMEM,OANF;AAAA,MAOEC,WAPF,GASIP,KATJ,CAOEO,WAPF;AAAA,MAQEC,kBARF,GASIR,KATJ,CAQEQ,kBARF;AAUA,MAAMC,UAAU,GAAGH,OAAO,IAAIA,OAAO,CAACI,KAAnB,IAA4B;AAC7CC,IAAAA,OAAO,EAAEL,OAAO,CAACI,KAAR,CAAcC,OADsB;AAE7CC,IAAAA,MAAM,EAAEN,OAAO,CAACI,KAAR,CAAcE;AAFuB,GAA/C;AAIA,MAAMC,aAAa,GAAGP,OAAO,IAAI,aAAaZ,KAAK,CAACoB,aAAN,CAAoBlB,OAApB,EAA6B;AACzEmB,IAAAA,KAAK,EAAET,OAAO,CAACS,KAD0D;AAEzEC,IAAAA,WAAW,EAAEV,OAAO,CAACU,WAFoD;AAGzEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAEZ,OAAO,CAACW,MAAR,CAAeC,OADlB;AAENP,MAAAA,OAAO,EAAEL,OAAO,CAACW,MAAR,CAAeN;AAFlB,KAHiE;AAOzEQ,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAEd,OAAO,CAACa,IAAR,CAAaC,EADb;AAEJT,MAAAA,OAAO,EAAEL,OAAO,CAACa,IAAR,CAAaR;AAFlB,KAPmE;AAWzED,IAAAA,KAAK,EAAED;AAXkE,GAA7B,CAA9C;AAaA,MAAMY,YAAY,GAAGC,OAAO,CAAChB,OAAD,CAA5B;AACA,SAAO,aAAaZ,KAAK,CAACoB,aAAN,CAAoBjB,OAApB,EAA6B;AAC/C0B,IAAAA,SAAS,EAAE,aAAa7B,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AACjDU,MAAAA,SAAS,EAAE7B,MAAM,CAAC8B;AAD+B,KAA3B,EAErB,aAAa/B,KAAK,CAACoB,aAAN,CAAoB,QAApB,EAA8B;AAC5CY,MAAAA,IAAI,EAAE,QADsC;AAE5CF,MAAAA,SAAS,EAAE7B,MAAM,CAACgC,SAF0B;AAG5CT,MAAAA,OAAO,EAAEhB,MAHmC;AAI5C,oBAAcM;AAJ8B,KAA9B,EAKbH,gBALa,CAFQ,CADuB;AAS/CuB,IAAAA,MAAM,EAAExB,IATuC;AAU/CD,IAAAA,OAAO,EAAEA,OAVsC;AAW/C0B,IAAAA,KAAK,EAAE,IAXwC;AAY/CC,IAAAA,UAAU,EAAET,YAZmC;AAa/CU,IAAAA,kBAAkB,EAAE,OAb2B;AAc/CxB,IAAAA,WAAW,EAAEA;AAdkC,GAA7B,EAejB,aAAab,KAAK,CAACoB,aAAN,CAAoBhB,UAApB,EAAgC;AAC9CkC,IAAAA,eAAe,EAAE7B,OAD6B;AAE9C8B,IAAAA,QAAQ,EAAEhC;AAFoC,GAAhC,CAfI,EAkBhBY,aAlBgB,CAApB;AAmBD;;AAED,SAASd,IAAT","sourcesContent":["import React from 'react';\nimport styles from './Menu.scss.js';\nimport { Message } from './components/Message/Message.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { ActionList } from '../../../ActionList/ActionList.js';\n\nfunction Menu(props) {\n  const {\n    actions,\n    onOpen,\n    onClose,\n    open,\n    activatorContent,\n    message,\n    colorScheme,\n    accessibilityLabel\n  } = props;\n  const badgeProps = message && message.badge && {\n    content: message.badge.content,\n    status: message.badge.status\n  };\n  const messageMarkup = message && /*#__PURE__*/React.createElement(Message, {\n    title: message.title,\n    description: message.description,\n    action: {\n      onClick: message.action.onClick,\n      content: message.action.content\n    },\n    link: {\n      to: message.link.to,\n      content: message.link.content\n    },\n    badge: badgeProps\n  });\n  const isFullHeight = Boolean(message);\n  return /*#__PURE__*/React.createElement(Popover, {\n    activator: /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ActivatorWrapper\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: styles.Activator,\n      onClick: onOpen,\n      \"aria-label\": accessibilityLabel\n    }, activatorContent)),\n    active: open,\n    onClose: onClose,\n    fixed: true,\n    fullHeight: isFullHeight,\n    preferredAlignment: \"right\",\n    colorScheme: colorScheme\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    onActionAnyItem: onClose,\n    sections: actions\n  }), messageMarkup);\n}\n\nexport { Menu };\n"]},"metadata":{},"sourceType":"module"}