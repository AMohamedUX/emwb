{"ast":null,"code":"import React, { useState, Children, useRef, useCallback, useMemo } from 'react';\nimport styles from './Combobox.scss.js';\nimport { ComboboxTextFieldContext, ComboboxListboxContext, ComboboxListboxOptionContext } from '../../utilities/combobox/context.js';\nimport { TextField } from './components/TextField/TextField.js';\nimport { Popover } from '../Popover/Popover.js';\n\nfunction Combobox(_ref) {\n  let {\n    activator,\n    allowMultiple,\n    children,\n    preferredPosition = 'below',\n    willLoadMoreOptions,\n    height,\n    onScrolledToBottom,\n    onClose\n  } = _ref;\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [activeOptionId, setActiveOptionId] = useState();\n  const [textFieldLabelId, setTextFieldLabelId] = useState();\n  const [listboxId, setListboxId] = useState();\n  const [textFieldFocused, setTextFieldFocused] = useState(false);\n  const [disableCloseOnSelect, setDisableCloseOnSelect] = useState(false);\n  const shouldOpen = Boolean(!popoverActive && Children.count(children) > 0);\n  const ref = useRef(null);\n  const handleClose = useCallback(() => {\n    // only deactive popover if not creating a new option\n    if (!disableCloseOnSelect) {\n      setPopoverActive(false);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n\n    setActiveOptionId(undefined);\n  }, [disableCloseOnSelect, onClose]);\n  const handleOpen = useCallback(() => {\n    setPopoverActive(true);\n    setActiveOptionId(undefined);\n  }, []);\n  const onOptionSelected = useCallback(() => {\n    var _ref$current;\n\n    if (!allowMultiple) {\n      handleClose();\n      setActiveOptionId(undefined);\n      return;\n    } else {\n      setDisableCloseOnSelect(true);\n    }\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.forceUpdatePosition();\n  }, [allowMultiple, handleClose, setDisableCloseOnSelect]);\n  const handleFocus = useCallback(() => {\n    if (shouldOpen) {\n      handleOpen();\n    }\n  }, [shouldOpen, handleOpen]);\n  const handleChange = useCallback(() => {\n    if (shouldOpen) {\n      handleOpen();\n    }\n  }, [shouldOpen, handleOpen]);\n  const handleBlur = useCallback(() => {\n    setDisableCloseOnSelect(false);\n\n    if (popoverActive) {\n      handleClose();\n    }\n  }, [popoverActive, handleClose, setDisableCloseOnSelect]);\n  const textFieldContextValue = useMemo(() => ({\n    activeOptionId,\n    expanded: popoverActive,\n    listboxId,\n    setTextFieldFocused,\n    setTextFieldLabelId,\n    onTextFieldFocus: handleFocus,\n    onTextFieldChange: handleChange,\n    onTextFieldBlur: handleBlur\n  }), [activeOptionId, popoverActive, listboxId, setTextFieldFocused, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);\n  const listboxOptionContextValue = useMemo(() => ({\n    allowMultiple\n  }), [allowMultiple]);\n  const listboxContextValue = useMemo(() => ({\n    listboxId,\n    textFieldLabelId,\n    textFieldFocused,\n    willLoadMoreOptions,\n    onOptionSelected,\n    setActiveOptionId,\n    setListboxId,\n    onKeyToBottom: onScrolledToBottom\n  }), [listboxId, textFieldLabelId, textFieldFocused, willLoadMoreOptions, onOptionSelected, setActiveOptionId, setListboxId, onScrolledToBottom]);\n  return /*#__PURE__*/React.createElement(Popover, {\n    ref: ref,\n    active: popoverActive,\n    activator: /*#__PURE__*/React.createElement(ComboboxTextFieldContext.Provider, {\n      value: textFieldContextValue\n    }, activator),\n    autofocusTarget: \"none\",\n    preventFocusOnClose: true,\n    fullWidth: true,\n    preferInputActivator: false,\n    preferredPosition: preferredPosition,\n    onClose: handleClose\n  }, Children.count(children) > 0 ? /*#__PURE__*/React.createElement(Popover.Pane, {\n    onScrolledToBottom: onScrolledToBottom,\n    height: height\n  }, /*#__PURE__*/React.createElement(ComboboxListboxContext.Provider, {\n    value: listboxContextValue\n  }, /*#__PURE__*/React.createElement(ComboboxListboxOptionContext.Provider, {\n    value: listboxOptionContextValue\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Listbox\n  }, children)))) : null);\n}\n\nCombobox.TextField = TextField;\nexport { Combobox };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.js"],"names":["React","useState","Children","useRef","useCallback","useMemo","styles","ComboboxTextFieldContext","ComboboxListboxContext","ComboboxListboxOptionContext","TextField","Popover","Combobox","activator","allowMultiple","children","preferredPosition","willLoadMoreOptions","height","onScrolledToBottom","onClose","popoverActive","setPopoverActive","activeOptionId","setActiveOptionId","textFieldLabelId","setTextFieldLabelId","listboxId","setListboxId","textFieldFocused","setTextFieldFocused","disableCloseOnSelect","setDisableCloseOnSelect","shouldOpen","Boolean","count","ref","handleClose","undefined","handleOpen","onOptionSelected","_ref$current","current","forceUpdatePosition","handleFocus","handleChange","handleBlur","textFieldContextValue","expanded","onTextFieldFocus","onTextFieldChange","onTextFieldBlur","listboxOptionContextValue","listboxContextValue","onKeyToBottom","createElement","active","Provider","value","autofocusTarget","preventFocusOnClose","fullWidth","preferInputActivator","Pane","className","Listbox"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,WAA5C,EAAyDC,OAAzD,QAAwE,OAAxE;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,wBAAT,EAAmCC,sBAAnC,EAA2DC,4BAA3D,QAA+F,qCAA/F;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,SAASC,QAAT,OASG;AAAA,MATe;AAChBC,IAAAA,SADgB;AAEhBC,IAAAA,aAFgB;AAGhBC,IAAAA,QAHgB;AAIhBC,IAAAA,iBAAiB,GAAG,OAJJ;AAKhBC,IAAAA,mBALgB;AAMhBC,IAAAA,MANgB;AAOhBC,IAAAA,kBAPgB;AAQhBC,IAAAA;AARgB,GASf;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,EAApD;AACA,QAAM,CAACwB,gBAAD,EAAmBC,mBAAnB,IAA0CzB,QAAQ,EAAxD;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,EAA1C;AACA,QAAM,CAAC4B,gBAAD,EAAmBC,mBAAnB,IAA0C7B,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAAC8B,oBAAD,EAAuBC,uBAAvB,IAAkD/B,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAMgC,UAAU,GAAGC,OAAO,CAAC,CAACb,aAAD,IAAkBnB,QAAQ,CAACiC,KAAT,CAAepB,QAAf,IAA2B,CAA9C,CAA1B;AACA,QAAMqB,GAAG,GAAGjC,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMkC,WAAW,GAAGjC,WAAW,CAAC,MAAM;AACpC;AACA,QAAI,CAAC2B,oBAAL,EAA2B;AACzBT,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,EAAzD;AACD;;AAEDI,IAAAA,iBAAiB,CAACc,SAAD,CAAjB;AACD,GAR8B,EAQ5B,CAACP,oBAAD,EAAuBX,OAAvB,CAR4B,CAA/B;AASA,QAAMmB,UAAU,GAAGnC,WAAW,CAAC,MAAM;AACnCkB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,iBAAiB,CAACc,SAAD,CAAjB;AACD,GAH6B,EAG3B,EAH2B,CAA9B;AAIA,QAAME,gBAAgB,GAAGpC,WAAW,CAAC,MAAM;AACzC,QAAIqC,YAAJ;;AAEA,QAAI,CAAC3B,aAAL,EAAoB;AAClBuB,MAAAA,WAAW;AACXb,MAAAA,iBAAiB,CAACc,SAAD,CAAjB;AACA;AACD,KAJD,MAIO;AACLN,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;;AAED,KAACS,YAAY,GAAGL,GAAG,CAACM,OAApB,MAAiC,IAAjC,IAAyCD,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACE,mBAAb,EAA5E;AACD,GAZmC,EAYjC,CAAC7B,aAAD,EAAgBuB,WAAhB,EAA6BL,uBAA7B,CAZiC,CAApC;AAaA,QAAMY,WAAW,GAAGxC,WAAW,CAAC,MAAM;AACpC,QAAI6B,UAAJ,EAAgB;AACdM,MAAAA,UAAU;AACX;AACF,GAJ8B,EAI5B,CAACN,UAAD,EAAaM,UAAb,CAJ4B,CAA/B;AAKA,QAAMM,YAAY,GAAGzC,WAAW,CAAC,MAAM;AACrC,QAAI6B,UAAJ,EAAgB;AACdM,MAAAA,UAAU;AACX;AACF,GAJ+B,EAI7B,CAACN,UAAD,EAAaM,UAAb,CAJ6B,CAAhC;AAKA,QAAMO,UAAU,GAAG1C,WAAW,CAAC,MAAM;AACnC4B,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;;AAEA,QAAIX,aAAJ,EAAmB;AACjBgB,MAAAA,WAAW;AACZ;AACF,GAN6B,EAM3B,CAAChB,aAAD,EAAgBgB,WAAhB,EAA6BL,uBAA7B,CAN2B,CAA9B;AAOA,QAAMe,qBAAqB,GAAG1C,OAAO,CAAC,OAAO;AAC3CkB,IAAAA,cAD2C;AAE3CyB,IAAAA,QAAQ,EAAE3B,aAFiC;AAG3CM,IAAAA,SAH2C;AAI3CG,IAAAA,mBAJ2C;AAK3CJ,IAAAA,mBAL2C;AAM3CuB,IAAAA,gBAAgB,EAAEL,WANyB;AAO3CM,IAAAA,iBAAiB,EAAEL,YAPwB;AAQ3CM,IAAAA,eAAe,EAAEL;AAR0B,GAAP,CAAD,EASjC,CAACvB,cAAD,EAAiBF,aAAjB,EAAgCM,SAAhC,EAA2CG,mBAA3C,EAAgEJ,mBAAhE,EAAqFkB,WAArF,EAAkGC,YAAlG,EAAgHC,UAAhH,CATiC,CAArC;AAUA,QAAMM,yBAAyB,GAAG/C,OAAO,CAAC,OAAO;AAC/CS,IAAAA;AAD+C,GAAP,CAAD,EAErC,CAACA,aAAD,CAFqC,CAAzC;AAGA,QAAMuC,mBAAmB,GAAGhD,OAAO,CAAC,OAAO;AACzCsB,IAAAA,SADyC;AAEzCF,IAAAA,gBAFyC;AAGzCI,IAAAA,gBAHyC;AAIzCZ,IAAAA,mBAJyC;AAKzCuB,IAAAA,gBALyC;AAMzChB,IAAAA,iBANyC;AAOzCI,IAAAA,YAPyC;AAQzC0B,IAAAA,aAAa,EAAEnC;AAR0B,GAAP,CAAD,EAS/B,CAACQ,SAAD,EAAYF,gBAAZ,EAA8BI,gBAA9B,EAAgDZ,mBAAhD,EAAqEuB,gBAArE,EAAuFhB,iBAAvF,EAA0GI,YAA1G,EAAwHT,kBAAxH,CAT+B,CAAnC;AAUA,SAAO,aAAanB,KAAK,CAACuD,aAAN,CAAoB5C,OAApB,EAA6B;AAC/CyB,IAAAA,GAAG,EAAEA,GAD0C;AAE/CoB,IAAAA,MAAM,EAAEnC,aAFuC;AAG/CR,IAAAA,SAAS,EAAE,aAAab,KAAK,CAACuD,aAAN,CAAoBhD,wBAAwB,CAACkD,QAA7C,EAAuD;AAC7EC,MAAAA,KAAK,EAAEX;AADsE,KAAvD,EAErBlC,SAFqB,CAHuB;AAM/C8C,IAAAA,eAAe,EAAE,MAN8B;AAO/CC,IAAAA,mBAAmB,EAAE,IAP0B;AAQ/CC,IAAAA,SAAS,EAAE,IARoC;AAS/CC,IAAAA,oBAAoB,EAAE,KATyB;AAU/C9C,IAAAA,iBAAiB,EAAEA,iBAV4B;AAW/CI,IAAAA,OAAO,EAAEiB;AAXsC,GAA7B,EAYjBnC,QAAQ,CAACiC,KAAT,CAAepB,QAAf,IAA2B,CAA3B,GAA+B,aAAaf,KAAK,CAACuD,aAAN,CAAoB5C,OAAO,CAACoD,IAA5B,EAAkC;AAC/E5C,IAAAA,kBAAkB,EAAEA,kBAD2D;AAE/ED,IAAAA,MAAM,EAAEA;AAFuE,GAAlC,EAG5C,aAAalB,KAAK,CAACuD,aAAN,CAAoB/C,sBAAsB,CAACiD,QAA3C,EAAqD;AACnEC,IAAAA,KAAK,EAAEL;AAD4D,GAArD,EAEb,aAAarD,KAAK,CAACuD,aAAN,CAAoB9C,4BAA4B,CAACgD,QAAjD,EAA2D;AACzEC,IAAAA,KAAK,EAAEN;AADkE,GAA3D,EAEb,aAAapD,KAAK,CAACuD,aAAN,CAAoB,KAApB,EAA2B;AACzCS,IAAAA,SAAS,EAAE1D,MAAM,CAAC2D;AADuB,GAA3B,EAEblD,QAFa,CAFA,CAFA,CAH+B,CAA5C,GASe,IArBE,CAApB;AAsBD;;AACDH,QAAQ,CAACF,SAAT,GAAqBA,SAArB;AAEA,SAASE,QAAT","sourcesContent":["import React, { useState, Children, useRef, useCallback, useMemo } from 'react';\nimport styles from './Combobox.scss.js';\nimport { ComboboxTextFieldContext, ComboboxListboxContext, ComboboxListboxOptionContext } from '../../utilities/combobox/context.js';\nimport { TextField } from './components/TextField/TextField.js';\nimport { Popover } from '../Popover/Popover.js';\n\nfunction Combobox({\n  activator,\n  allowMultiple,\n  children,\n  preferredPosition = 'below',\n  willLoadMoreOptions,\n  height,\n  onScrolledToBottom,\n  onClose\n}) {\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [activeOptionId, setActiveOptionId] = useState();\n  const [textFieldLabelId, setTextFieldLabelId] = useState();\n  const [listboxId, setListboxId] = useState();\n  const [textFieldFocused, setTextFieldFocused] = useState(false);\n  const [disableCloseOnSelect, setDisableCloseOnSelect] = useState(false);\n  const shouldOpen = Boolean(!popoverActive && Children.count(children) > 0);\n  const ref = useRef(null);\n  const handleClose = useCallback(() => {\n    // only deactive popover if not creating a new option\n    if (!disableCloseOnSelect) {\n      setPopoverActive(false);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n\n    setActiveOptionId(undefined);\n  }, [disableCloseOnSelect, onClose]);\n  const handleOpen = useCallback(() => {\n    setPopoverActive(true);\n    setActiveOptionId(undefined);\n  }, []);\n  const onOptionSelected = useCallback(() => {\n    var _ref$current;\n\n    if (!allowMultiple) {\n      handleClose();\n      setActiveOptionId(undefined);\n      return;\n    } else {\n      setDisableCloseOnSelect(true);\n    }\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.forceUpdatePosition();\n  }, [allowMultiple, handleClose, setDisableCloseOnSelect]);\n  const handleFocus = useCallback(() => {\n    if (shouldOpen) {\n      handleOpen();\n    }\n  }, [shouldOpen, handleOpen]);\n  const handleChange = useCallback(() => {\n    if (shouldOpen) {\n      handleOpen();\n    }\n  }, [shouldOpen, handleOpen]);\n  const handleBlur = useCallback(() => {\n    setDisableCloseOnSelect(false);\n\n    if (popoverActive) {\n      handleClose();\n    }\n  }, [popoverActive, handleClose, setDisableCloseOnSelect]);\n  const textFieldContextValue = useMemo(() => ({\n    activeOptionId,\n    expanded: popoverActive,\n    listboxId,\n    setTextFieldFocused,\n    setTextFieldLabelId,\n    onTextFieldFocus: handleFocus,\n    onTextFieldChange: handleChange,\n    onTextFieldBlur: handleBlur\n  }), [activeOptionId, popoverActive, listboxId, setTextFieldFocused, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);\n  const listboxOptionContextValue = useMemo(() => ({\n    allowMultiple\n  }), [allowMultiple]);\n  const listboxContextValue = useMemo(() => ({\n    listboxId,\n    textFieldLabelId,\n    textFieldFocused,\n    willLoadMoreOptions,\n    onOptionSelected,\n    setActiveOptionId,\n    setListboxId,\n    onKeyToBottom: onScrolledToBottom\n  }), [listboxId, textFieldLabelId, textFieldFocused, willLoadMoreOptions, onOptionSelected, setActiveOptionId, setListboxId, onScrolledToBottom]);\n  return /*#__PURE__*/React.createElement(Popover, {\n    ref: ref,\n    active: popoverActive,\n    activator: /*#__PURE__*/React.createElement(ComboboxTextFieldContext.Provider, {\n      value: textFieldContextValue\n    }, activator),\n    autofocusTarget: \"none\",\n    preventFocusOnClose: true,\n    fullWidth: true,\n    preferInputActivator: false,\n    preferredPosition: preferredPosition,\n    onClose: handleClose\n  }, Children.count(children) > 0 ? /*#__PURE__*/React.createElement(Popover.Pane, {\n    onScrolledToBottom: onScrolledToBottom,\n    height: height\n  }, /*#__PURE__*/React.createElement(ComboboxListboxContext.Provider, {\n    value: listboxContextValue\n  }, /*#__PURE__*/React.createElement(ComboboxListboxOptionContext.Provider, {\n    value: listboxOptionContextValue\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Listbox\n  }, children)))) : null);\n}\nCombobox.TextField = TextField;\n\nexport { Combobox };\n"]},"metadata":{},"sourceType":"module"}