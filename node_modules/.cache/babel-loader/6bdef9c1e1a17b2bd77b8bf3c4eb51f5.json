{"ast":null,"code":"import React, { useMemo, useEffect, useCallback } from 'react';\nimport { useComboboxTextField } from '../../../../utilities/combobox/hooks.js';\nimport { TextField as TextField$1 } from '../../../TextField/TextField.js';\nimport { useUniqueId } from '../../../../utilities/unique-id/hooks.js';\nimport { labelID } from '../../../Label/Label.js';\n\nfunction TextField(_ref) {\n  let {\n    value,\n    id: idProp,\n    type = 'text',\n    ariaAutocomplete = 'list',\n    onFocus,\n    onBlur,\n    onChange,\n    ...rest\n  } = _ref;\n  const comboboxTextFieldContext = useComboboxTextField();\n  const {\n    activeOptionId,\n    listboxId,\n    expanded,\n    setTextFieldFocused,\n    setTextFieldLabelId,\n    onTextFieldFocus,\n    onTextFieldChange,\n    onTextFieldBlur\n  } = comboboxTextFieldContext;\n  const uniqueId = useUniqueId('ComboboxTextField');\n  const textFieldId = useMemo(() => idProp || uniqueId, [uniqueId, idProp]);\n  const labelId = useMemo(() => labelID(idProp || uniqueId), [uniqueId, idProp]);\n  useEffect(() => {\n    if (setTextFieldLabelId) setTextFieldLabelId(labelId);\n  }, [labelId, setTextFieldLabelId]);\n  const handleFocus = useCallback(() => {\n    if (onFocus) onFocus();\n    if (onTextFieldFocus) onTextFieldFocus();\n    if (setTextFieldFocused) setTextFieldFocused(true);\n  }, [onFocus, onTextFieldFocus, setTextFieldFocused]);\n  const handleBlur = useCallback(() => {\n    if (onBlur) onBlur();\n    if (onTextFieldBlur) onTextFieldBlur();\n    if (setTextFieldFocused) setTextFieldFocused(false);\n  }, [onBlur, onTextFieldBlur, setTextFieldFocused]);\n  const handleChange = useCallback((value, id) => {\n    if (onChange) onChange(value, id);\n    if (onTextFieldChange) onTextFieldChange(value);\n  }, [onChange, onTextFieldChange]);\n  return /*#__PURE__*/React.createElement(TextField$1, Object.assign({}, rest, {\n    value: value,\n    id: textFieldId,\n    type: type,\n    ariaAutocomplete: ariaAutocomplete,\n    \"aria-haspopup\": \"listbox\",\n    ariaActiveDescendant: activeOptionId,\n    ariaControls: listboxId,\n    role: \"combobox\",\n    ariaExpanded: expanded,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: handleChange\n  }));\n}\n\nexport { TextField };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Combobox/components/TextField/TextField.js"],"names":["React","useMemo","useEffect","useCallback","useComboboxTextField","TextField","TextField$1","useUniqueId","labelID","value","id","idProp","type","ariaAutocomplete","onFocus","onBlur","onChange","rest","comboboxTextFieldContext","activeOptionId","listboxId","expanded","setTextFieldFocused","setTextFieldLabelId","onTextFieldFocus","onTextFieldChange","onTextFieldBlur","uniqueId","textFieldId","labelId","handleFocus","handleBlur","handleChange","createElement","Object","assign","ariaActiveDescendant","ariaControls","role","ariaExpanded"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useCallback } from 'react';\nimport { useComboboxTextField } from '../../../../utilities/combobox/hooks.js';\nimport { TextField as TextField$1 } from '../../../TextField/TextField.js';\nimport { useUniqueId } from '../../../../utilities/unique-id/hooks.js';\nimport { labelID } from '../../../Label/Label.js';\n\nfunction TextField({\n  value,\n  id: idProp,\n  type = 'text',\n  ariaAutocomplete = 'list',\n  onFocus,\n  onBlur,\n  onChange,\n  ...rest\n}) {\n  const comboboxTextFieldContext = useComboboxTextField();\n  const {\n    activeOptionId,\n    listboxId,\n    expanded,\n    setTextFieldFocused,\n    setTextFieldLabelId,\n    onTextFieldFocus,\n    onTextFieldChange,\n    onTextFieldBlur\n  } = comboboxTextFieldContext;\n  const uniqueId = useUniqueId('ComboboxTextField');\n  const textFieldId = useMemo(() => idProp || uniqueId, [uniqueId, idProp]);\n  const labelId = useMemo(() => labelID(idProp || uniqueId), [uniqueId, idProp]);\n  useEffect(() => {\n    if (setTextFieldLabelId) setTextFieldLabelId(labelId);\n  }, [labelId, setTextFieldLabelId]);\n  const handleFocus = useCallback(() => {\n    if (onFocus) onFocus();\n    if (onTextFieldFocus) onTextFieldFocus();\n    if (setTextFieldFocused) setTextFieldFocused(true);\n  }, [onFocus, onTextFieldFocus, setTextFieldFocused]);\n  const handleBlur = useCallback(() => {\n    if (onBlur) onBlur();\n    if (onTextFieldBlur) onTextFieldBlur();\n    if (setTextFieldFocused) setTextFieldFocused(false);\n  }, [onBlur, onTextFieldBlur, setTextFieldFocused]);\n  const handleChange = useCallback((value, id) => {\n    if (onChange) onChange(value, id);\n    if (onTextFieldChange) onTextFieldChange(value);\n  }, [onChange, onTextFieldChange]);\n  return /*#__PURE__*/React.createElement(TextField$1, Object.assign({}, rest, {\n    value: value,\n    id: textFieldId,\n    type: type,\n    ariaAutocomplete: ariaAutocomplete,\n    \"aria-haspopup\": \"listbox\",\n    ariaActiveDescendant: activeOptionId,\n    ariaControls: listboxId,\n    role: \"combobox\",\n    ariaExpanded: expanded,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: handleChange\n  }));\n}\n\nexport { TextField };\n"]},"metadata":{},"sourceType":"module"}