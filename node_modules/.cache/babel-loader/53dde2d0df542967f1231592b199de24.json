{"ast":null,"code":"import _toConsumableArray from\"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useCallback}from\"react\";import{Card,Form,Button,TextField,FormLayout,Heading,TextContainer,Layout}from\"@shopify/polaris\";import AddEmail from\"./AddEmail\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MailingList=function MailingList(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),url=_useState2[0],setUrl=_useState2[1];var handleSubmit=useCallback(function(_event){return setUrl('');},[]);var handleUrlChange=useCallback(function(value){return setUrl(value);},[]);var _useState3=useState([{id:1,address:\"contact@emailmywebhooks.com\"}]),_useState4=_slicedToArray(_useState3,2),emails=_useState4[0],setEmails=_useState4[1];var AddEmailsToMailingList=function AddEmailsToMailingList(){setEmails([].concat(_toConsumableArray(emails),[{id:Math.floor(Math.random()*10000)+1,address:url}]));setUrl(\"\");};var deleteEmail=function deleteEmail(id){if(emails.length>1){setEmails(emails.filter(function(email){return email.id!==id;}));}else{alert(\"There must be at least one email in the mailing list\");}};return/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(Layout.Section,{oneHalf:true,children:/*#__PURE__*/_jsx(Card.Section,{children:/*#__PURE__*/_jsx(Card.Section,{children:/*#__PURE__*/_jsxs(TextContainer,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Mailing list\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add email addresses to the mailing list that will receive notifications. Whenever a notification is triggered, an email will be sent to all the addresses on this list.\"})]})})})}),/*#__PURE__*/_jsxs(Layout.Section,{oneHalf:true,children:[/*#__PURE__*/_jsx(Card.Section,{}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Section,{children:/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(FormLayout,{children:/*#__PURE__*/_jsx(TextField,{value:url,onChange:handleUrlChange,placeholder:\"Add an email address\",type:\"email\",autoComplete:\"off\",autoFocus:true,connectedRight:/*#__PURE__*/_jsx(Button,{onClick:AddEmailsToMailingList,children:\"Add\"})})})})}),emails.map(function(email){return/*#__PURE__*/_jsx(AddEmail,{address:email.address,id:email.id,onDelete:deleteEmail},email.id);})]}),/*#__PURE__*/_jsx(Card.Section,{})]})]});};export default MailingList;","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/src/Components/MailingList.jsx"],"names":["useState","useCallback","Card","Form","Button","TextField","FormLayout","Heading","TextContainer","Layout","AddEmail","MailingList","url","setUrl","handleSubmit","_event","handleUrlChange","value","id","address","emails","setEmails","AddEmailsToMailingList","Math","floor","random","deleteEmail","length","filter","email","alert","map"],"mappings":"kOAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,MAArB,CAA6BC,SAA7B,CAAwCC,UAAxC,CAAoDC,OAApD,CAA6DC,aAA7D,CAA4EC,MAA5E,KAA0F,kBAA1F,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,cAAsBX,QAAQ,CAAC,EAAD,CAA9B,wCAAOY,GAAP,eAAYC,MAAZ,eACA,GAAMC,CAAAA,YAAY,CAAGb,WAAW,CAAC,SAACc,MAAD,QAAYF,CAAAA,MAAM,CAAC,EAAD,CAAlB,EAAD,CAAyB,EAAzB,CAAhC,CACA,GAAMG,CAAAA,eAAe,CAAGf,WAAW,CAAC,SAACgB,KAAD,QAAWJ,CAAAA,MAAM,CAACI,KAAD,CAAjB,EAAD,CAA2B,EAA3B,CAAnC,CAEA,eAA4BjB,QAAQ,CAAC,CACjC,CACIkB,EAAE,CAAE,CADR,CAEIC,OAAO,CAAE,6BAFb,CADiC,CAAD,CAApC,yCAAOC,MAAP,eAAeC,SAAf,eAOA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CAC7BD,SAAS,8BAAKD,MAAL,GAAa,CAClBF,EAAE,CAAEK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,EAAoC,CADtB,CAElBN,OAAO,CAAEP,GAFS,CAAb,GAAT,CAIJC,MAAM,CAAC,EAAD,CAAN,CACC,CANL,CAQA,GAAMa,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACR,EAAD,CAAQ,CACxB,GAAIE,MAAM,CAACO,MAAP,CAAgB,CAApB,CAAuB,CACnBN,SAAS,CAACD,MAAM,CAACQ,MAAP,CAAc,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACX,EAAN,GAAaA,EAAxB,EAAd,CAAD,CAAT,CACH,CAFD,IAEO,CACHY,KAAK,CAAC,sDAAD,CAAL,CACH,CAEJ,CAPD,CASA,mBACI,MAAC,MAAD,yBACI,KAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,KAAvB,uBACI,KAAC,IAAD,CAAM,OAAN,wBACI,KAAC,IAAD,CAAM,OAAN,wBACI,MAAC,aAAD,yBACI,KAAC,OAAD,2BADJ,cAEI,8LAFJ,GADJ,EADJ,EADJ,EADJ,cAaI,MAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,KAAvB,wBACI,KAAC,IAAD,CAAM,OAAN,IADJ,cAEI,MAAC,IAAD,yBACI,KAAC,IAAD,CAAM,OAAN,wBACI,KAAC,IAAD,EAAM,QAAQ,CAAEhB,YAAhB,uBACI,KAAC,UAAD,wBACI,KAAC,SAAD,EACI,KAAK,CAAEF,GADX,CAEI,QAAQ,CAAEI,eAFd,CAGI,WAAW,CAAC,sBAHhB,CAII,IAAI,CAAC,OAJT,CAKI,YAAY,CAAC,KALjB,CAMI,SAAS,CAAE,IANf,CAOI,cAAc,cAAE,KAAC,MAAD,EAAQ,OAAO,CAAEM,sBAAjB,iBAPpB,EADJ,EADJ,EADJ,EADJ,CAgBKF,MAAM,CAACW,GAAP,CAAW,SAACF,KAAD,qBACR,KAAC,QAAD,EAAyB,OAAO,CAAEA,KAAK,CAACV,OAAxC,CAAiD,EAAE,CAAEU,KAAK,CAACX,EAA3D,CAA+D,QAAQ,CAAEQ,WAAzE,EAAeG,KAAK,CAACX,EAArB,CADQ,EAAX,CAhBL,GAFJ,cAuBI,KAAC,IAAD,CAAM,OAAN,IAvBJ,GAbJ,GADJ,CA0CH,CAvED,CAyEA,cAAeP,CAAAA,WAAf","sourcesContent":["import { useState, useCallback } from \"react\"\nimport { Card, Form, Button, TextField, FormLayout, Heading, TextContainer, Layout } from \"@shopify/polaris\"\nimport AddEmail from \"./AddEmail\";\nconst MailingList = () => {\n    const [url, setUrl] = useState('');\n    const handleSubmit = useCallback((_event) => setUrl(''), []);\n    const handleUrlChange = useCallback((value) => setUrl(value), []);\n\n    const [emails, setEmails] = useState([\n        {\n            id: 1,\n            address: \"contact@emailmywebhooks.com\"\n        },\n    ])\n    \n    const AddEmailsToMailingList = () => {\n            setEmails([...emails, {\n                id: Math.floor(Math.random() * 10000) + 1,\n                address: url,\n            }])\n        setUrl(\"\")\n        }\n\n    const deleteEmail = (id) => {\n        if (emails.length > 1) {\n            setEmails(emails.filter((email) => email.id !== id))\n        } else {\n            alert(\"There must be at least one email in the mailing list\")\n        }\n\n    }\n\n    return (\n        <Layout>\n            <Layout.Section oneHalf>\n                <Card.Section>\n                    <Card.Section>\n                        <TextContainer>\n                            <Heading>Mailing list</Heading>\n                            <p>\n                                Add email addresses to the mailing list that will receive notifications. Whenever a notification is triggered, an email will be sent to all the addresses on this list.\n                            </p>\n                        </TextContainer>\n                    </Card.Section>\n                </Card.Section>\n            </Layout.Section>\n            <Layout.Section oneHalf>\n                <Card.Section></Card.Section>\n                <Card>\n                    <Card.Section>\n                        <Form onSubmit={handleSubmit}>\n                            <FormLayout>\n                                <TextField\n                                    value={url}\n                                    onChange={handleUrlChange}\n                                    placeholder=\"Add an email address\"\n                                    type=\"email\"\n                                    autoComplete=\"off\"\n                                    autoFocus={true}\n                                    connectedRight={<Button onClick={AddEmailsToMailingList}>Add</Button>}\n                                />\n                            </FormLayout>\n                        </Form>\n                    </Card.Section>\n                    {emails.map((email) => (\n                        <AddEmail key={email.id} address={email.address} id={email.id} onDelete={deleteEmail} />\n                    )\n                    )}\n                </Card>\n                <Card.Section></Card.Section>\n            </Layout.Section>\n        </Layout>\n    )\n\n}\n\nexport default MailingList\n"]},"metadata":{},"sourceType":"module"}