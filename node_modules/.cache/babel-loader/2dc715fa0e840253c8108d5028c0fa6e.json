{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/ayubmohamed/emwb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { isElementInViewport } from './is-element-in-viewport.js';\nvar FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nvar KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\nvar MENUITEM_FOCUSABLE_SELECTORS = 'a[role=\"menuitem\"],frame[role=\"menuitem\"],iframe[role=\"menuitem\"],input[role=\"menuitem\"]:not([type=hidden]):not(:disabled),select[role=\"menuitem\"]:not(:disabled),textarea[role=\"menuitem\"]:not(:disabled),button[role=\"menuitem\"]:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\n\nvar handleMouseUpByBlurring = function handleMouseUpByBlurring(_ref) {\n  var currentTarget = _ref.currentTarget;\n  return currentTarget.blur();\n};\n\nfunction nextFocusableNode(node, filter) {\n  var allFocusableElements = _toConsumableArray(document.querySelectorAll(FOCUSABLE_SELECTOR));\n\n  var sliceLocation = allFocusableElements.indexOf(node) + 1;\n  var focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);\n\n  var _iterator = _createForOfIteratorHelper(focusableElementsAfterNode),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var focusableElement = _step.value;\n\n      if (isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) {\n        return focusableElement;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return null;\n}\n\nfunction findFirstFocusableNode(element) {\n  var onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(FOCUSABLE_SELECTOR);\n} // Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.\n\n\nfunction findFirstFocusableNodeIncludingDisabled(element) {\n  var focusableSelector = \"a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]\";\n\n  if (matches(element, focusableSelector)) {\n    return element;\n  }\n\n  return element.querySelector(focusableSelector);\n}\n\nfunction focusFirstFocusableNode(element) {\n  var onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var _findFirstFocusableNo;\n\n  (_findFirstFocusableNo = findFirstFocusableNode(element, onlyDescendants)) === null || _findFirstFocusableNo === void 0 ? void 0 : _findFirstFocusableNo.focus();\n}\n\nfunction focusNextFocusableNode(node, filter) {\n  var nextFocusable = nextFocusableNode(node, filter);\n\n  if (nextFocusable && nextFocusable instanceof HTMLElement) {\n    nextFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction findFirstKeyboardFocusableNode(element) {\n  var onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);\n}\n\nfunction focusFirstKeyboardFocusableNode(element) {\n  var onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);\n\n  if (firstFocusable) {\n    firstFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction findLastKeyboardFocusableNode(element) {\n  var onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  var allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);\n  return allFocusable[allFocusable.length - 1];\n}\n\nfunction focusLastKeyboardFocusableNode(element) {\n  var onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);\n\n  if (lastFocusable) {\n    lastFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction wrapFocusPreviousFocusableMenuItem(parentElement, currentFocusedElement) {\n  var allFocusableChildren = getMenuFocusableDescendants(parentElement);\n  var currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\n\n  if (currentItemIdx === -1) {\n    allFocusableChildren[0].focus();\n  } else {\n    allFocusableChildren[(currentItemIdx - 1 + allFocusableChildren.length) % allFocusableChildren.length].focus();\n  }\n}\n\nfunction wrapFocusNextFocusableMenuItem(parentElement, currentFocusedElement) {\n  var allFocusableChildren = getMenuFocusableDescendants(parentElement);\n  var currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\n\n  if (currentItemIdx === -1) {\n    allFocusableChildren[0].focus();\n  } else {\n    allFocusableChildren[(currentItemIdx + 1) % allFocusableChildren.length].focus();\n  }\n}\n\nfunction getMenuFocusableDescendants(element) {\n  return element.querySelectorAll(MENUITEM_FOCUSABLE_SELECTORS);\n}\n\nfunction getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement) {\n  var currentItemIdx = 0;\n\n  var _iterator2 = _createForOfIteratorHelper(allFocusableChildren),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var focusableChild = _step2.value;\n\n      if (focusableChild === currentFocusedElement) {\n        break;\n      }\n\n      currentItemIdx++;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return currentItemIdx === allFocusableChildren.length ? -1 : currentItemIdx;\n}\n\nfunction matches(node, selector) {\n  if (node.matches) {\n    return node.matches(selector);\n  }\n\n  var matches = (node.ownerDocument || document).querySelectorAll(selector);\n  var i = matches.length;\n\n  while (--i >= 0 && matches.item(i) !== node) {\n    return i > -1;\n  }\n}\n\nexport { findFirstFocusableNode, findFirstFocusableNodeIncludingDisabled, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode, focusNextFocusableNode, handleMouseUpByBlurring, nextFocusableNode, wrapFocusNextFocusableMenuItem, wrapFocusPreviousFocusableMenuItem };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/utilities/focus.js"],"names":["isElementInViewport","FOCUSABLE_SELECTOR","KEYBOARD_FOCUSABLE_SELECTORS","MENUITEM_FOCUSABLE_SELECTORS","handleMouseUpByBlurring","currentTarget","blur","nextFocusableNode","node","filter","allFocusableElements","document","querySelectorAll","sliceLocation","indexOf","focusableElementsAfterNode","slice","focusableElement","findFirstFocusableNode","element","onlyDescendants","matches","querySelector","findFirstFocusableNodeIncludingDisabled","focusableSelector","focusFirstFocusableNode","_findFirstFocusableNo","focus","focusNextFocusableNode","nextFocusable","HTMLElement","findFirstKeyboardFocusableNode","focusFirstKeyboardFocusableNode","firstFocusable","findLastKeyboardFocusableNode","allFocusable","length","focusLastKeyboardFocusableNode","lastFocusable","wrapFocusPreviousFocusableMenuItem","parentElement","currentFocusedElement","allFocusableChildren","getMenuFocusableDescendants","currentItemIdx","getCurrentFocusedElementIndex","wrapFocusNextFocusableMenuItem","focusableChild","selector","ownerDocument","i","item"],"mappings":";;AAAA,SAASA,mBAAT,QAAoC,6BAApC;AAEA,IAAMC,kBAAkB,GAAG,wIAA3B;AACA,IAAMC,4BAA4B,GAAG,6JAArC;AACA,IAAMC,4BAA4B,GAAG,oRAArC;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,MAC9BC,aAD8B,QAC9BA,aAD8B;AAAA,SAE1BA,aAAa,CAACC,IAAd,EAF0B;AAAA,CAAhC;;AAGA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,MAAjC,EAAyC;AACvC,MAAMC,oBAAoB,sBAAOC,QAAQ,CAACC,gBAAT,CAA0BX,kBAA1B,CAAP,CAA1B;;AACA,MAAMY,aAAa,GAAGH,oBAAoB,CAACI,OAArB,CAA6BN,IAA7B,IAAqC,CAA3D;AACA,MAAMO,0BAA0B,GAAGL,oBAAoB,CAACM,KAArB,CAA2BH,aAA3B,CAAnC;;AAHuC,6CAKRE,0BALQ;AAAA;;AAAA;AAKvC,wDAA2D;AAAA,UAAhDE,gBAAgD;;AACzD,UAAIjB,mBAAmB,CAACiB,gBAAD,CAAnB,KAA0C,CAACR,MAAD,IAAWA,MAAM,IAAIA,MAAM,CAACQ,gBAAD,CAArE,CAAJ,EAA8F;AAC5F,eAAOA,gBAAP;AACD;AACF;AATsC;AAAA;AAAA;AAAA;AAAA;;AAWvC,SAAO,IAAP;AACD;;AACD,SAASC,sBAAT,CAAgCC,OAAhC,EAAiE;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;;AAC/D,MAAI,CAACA,eAAD,IAAoBC,OAAO,CAACF,OAAD,EAAUlB,kBAAV,CAA/B,EAA8D;AAC5D,WAAOkB,OAAP;AACD;;AAED,SAAOA,OAAO,CAACG,aAAR,CAAsBrB,kBAAtB,CAAP;AACD,C,CAAC;;;AAEF,SAASsB,uCAAT,CAAiDJ,OAAjD,EAA0D;AACxD,MAAMK,iBAAiB,+EAAvB;;AAEA,MAAIH,OAAO,CAACF,OAAD,EAAUK,iBAAV,CAAX,EAAyC;AACvC,WAAOL,OAAP;AACD;;AAED,SAAOA,OAAO,CAACG,aAAR,CAAsBE,iBAAtB,CAAP;AACD;;AACD,SAASC,uBAAT,CAAiCN,OAAjC,EAAkE;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;;AAChE,MAAIM,qBAAJ;;AAEA,GAACA,qBAAqB,GAAGR,sBAAsB,CAACC,OAAD,EAAUC,eAAV,CAA/C,MAA+E,IAA/E,IAAuFM,qBAAqB,KAAK,KAAK,CAAtH,GAA0H,KAAK,CAA/H,GAAmIA,qBAAqB,CAACC,KAAtB,EAAnI;AACD;;AACD,SAASC,sBAAT,CAAgCpB,IAAhC,EAAsCC,MAAtC,EAA8C;AAC5C,MAAMoB,aAAa,GAAGtB,iBAAiB,CAACC,IAAD,EAAOC,MAAP,CAAvC;;AAEA,MAAIoB,aAAa,IAAIA,aAAa,YAAYC,WAA9C,EAA2D;AACzDD,IAAAA,aAAa,CAACF,KAAd;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AACD,SAASI,8BAAT,CAAwCZ,OAAxC,EAAyE;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;;AACvE,MAAI,CAACA,eAAD,IAAoBC,OAAO,CAACF,OAAD,EAAUjB,4BAAV,CAA/B,EAAwE;AACtE,WAAOiB,OAAP;AACD;;AAED,SAAOA,OAAO,CAACG,aAAR,CAAsBpB,4BAAtB,CAAP;AACD;;AACD,SAAS8B,+BAAT,CAAyCb,OAAzC,EAA0E;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;AACxE,MAAMa,cAAc,GAAGF,8BAA8B,CAACZ,OAAD,EAAUC,eAAV,CAArD;;AAEA,MAAIa,cAAJ,EAAoB;AAClBA,IAAAA,cAAc,CAACN,KAAf;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AACD,SAASO,6BAAT,CAAuCf,OAAvC,EAAwE;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;;AACtE,MAAI,CAACA,eAAD,IAAoBC,OAAO,CAACF,OAAD,EAAUjB,4BAAV,CAA/B,EAAwE;AACtE,WAAOiB,OAAP;AACD;;AAED,MAAMgB,YAAY,GAAGhB,OAAO,CAACP,gBAAR,CAAyBV,4BAAzB,CAArB;AACA,SAAOiC,YAAY,CAACA,YAAY,CAACC,MAAb,GAAsB,CAAvB,CAAnB;AACD;;AACD,SAASC,8BAAT,CAAwClB,OAAxC,EAAyE;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;AACvE,MAAMkB,aAAa,GAAGJ,6BAA6B,CAACf,OAAD,EAAUC,eAAV,CAAnD;;AAEA,MAAIkB,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACX,KAAd;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AACD,SAASY,kCAAT,CAA4CC,aAA5C,EAA2DC,qBAA3D,EAAkF;AAChF,MAAMC,oBAAoB,GAAGC,2BAA2B,CAACH,aAAD,CAAxD;AACA,MAAMI,cAAc,GAAGC,6BAA6B,CAACH,oBAAD,EAAuBD,qBAAvB,CAApD;;AAEA,MAAIG,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzBF,IAAAA,oBAAoB,CAAC,CAAD,CAApB,CAAwBf,KAAxB;AACD,GAFD,MAEO;AACLe,IAAAA,oBAAoB,CAAC,CAACE,cAAc,GAAG,CAAjB,GAAqBF,oBAAoB,CAACN,MAA3C,IAAqDM,oBAAoB,CAACN,MAA3E,CAApB,CAAuGT,KAAvG;AACD;AACF;;AACD,SAASmB,8BAAT,CAAwCN,aAAxC,EAAuDC,qBAAvD,EAA8E;AAC5E,MAAMC,oBAAoB,GAAGC,2BAA2B,CAACH,aAAD,CAAxD;AACA,MAAMI,cAAc,GAAGC,6BAA6B,CAACH,oBAAD,EAAuBD,qBAAvB,CAApD;;AAEA,MAAIG,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzBF,IAAAA,oBAAoB,CAAC,CAAD,CAApB,CAAwBf,KAAxB;AACD,GAFD,MAEO;AACLe,IAAAA,oBAAoB,CAAC,CAACE,cAAc,GAAG,CAAlB,IAAuBF,oBAAoB,CAACN,MAA7C,CAApB,CAAyET,KAAzE;AACD;AACF;;AAED,SAASgB,2BAAT,CAAqCxB,OAArC,EAA8C;AAC5C,SAAOA,OAAO,CAACP,gBAAR,CAAyBT,4BAAzB,CAAP;AACD;;AAED,SAAS0C,6BAAT,CAAuCH,oBAAvC,EAA6DD,qBAA7D,EAAoF;AAClF,MAAIG,cAAc,GAAG,CAArB;;AADkF,8CAGrDF,oBAHqD;AAAA;;AAAA;AAGlF,2DAAmD;AAAA,UAAxCK,cAAwC;;AACjD,UAAIA,cAAc,KAAKN,qBAAvB,EAA8C;AAC5C;AACD;;AAEDG,MAAAA,cAAc;AACf;AATiF;AAAA;AAAA;AAAA;AAAA;;AAWlF,SAAOA,cAAc,KAAKF,oBAAoB,CAACN,MAAxC,GAAiD,CAAC,CAAlD,GAAsDQ,cAA7D;AACD;;AAED,SAASvB,OAAT,CAAiBb,IAAjB,EAAuBwC,QAAvB,EAAiC;AAC/B,MAAIxC,IAAI,CAACa,OAAT,EAAkB;AAChB,WAAOb,IAAI,CAACa,OAAL,CAAa2B,QAAb,CAAP;AACD;;AAED,MAAM3B,OAAO,GAAG,CAACb,IAAI,CAACyC,aAAL,IAAsBtC,QAAvB,EAAiCC,gBAAjC,CAAkDoC,QAAlD,CAAhB;AACA,MAAIE,CAAC,GAAG7B,OAAO,CAACe,MAAhB;;AAEA,SAAO,EAAEc,CAAF,IAAO,CAAP,IAAY7B,OAAO,CAAC8B,IAAR,CAAaD,CAAb,MAAoB1C,IAAvC;AAA6C,WAAO0C,CAAC,GAAG,CAAC,CAAZ;AAA7C;AACD;;AAED,SAAShC,sBAAT,EAAiCK,uCAAjC,EAA0EQ,8BAA1E,EAA0GG,6BAA1G,EAAyIT,uBAAzI,EAAkKO,+BAAlK,EAAmMK,8BAAnM,EAAmOT,sBAAnO,EAA2PxB,uBAA3P,EAAoRG,iBAApR,EAAuSuC,8BAAvS,EAAuUP,kCAAvU","sourcesContent":["import { isElementInViewport } from './is-element-in-viewport.js';\n\nconst FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nconst KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\nconst MENUITEM_FOCUSABLE_SELECTORS = 'a[role=\"menuitem\"],frame[role=\"menuitem\"],iframe[role=\"menuitem\"],input[role=\"menuitem\"]:not([type=hidden]):not(:disabled),select[role=\"menuitem\"]:not(:disabled),textarea[role=\"menuitem\"]:not(:disabled),button[role=\"menuitem\"]:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\nconst handleMouseUpByBlurring = ({\n  currentTarget\n}) => currentTarget.blur();\nfunction nextFocusableNode(node, filter) {\n  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];\n  const sliceLocation = allFocusableElements.indexOf(node) + 1;\n  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);\n\n  for (const focusableElement of focusableElementsAfterNode) {\n    if (isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) {\n      return focusableElement;\n    }\n  }\n\n  return null;\n}\nfunction findFirstFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(FOCUSABLE_SELECTOR);\n} // Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.\n\nfunction findFirstFocusableNodeIncludingDisabled(element) {\n  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;\n\n  if (matches(element, focusableSelector)) {\n    return element;\n  }\n\n  return element.querySelector(focusableSelector);\n}\nfunction focusFirstFocusableNode(element, onlyDescendants = true) {\n  var _findFirstFocusableNo;\n\n  (_findFirstFocusableNo = findFirstFocusableNode(element, onlyDescendants)) === null || _findFirstFocusableNo === void 0 ? void 0 : _findFirstFocusableNo.focus();\n}\nfunction focusNextFocusableNode(node, filter) {\n  const nextFocusable = nextFocusableNode(node, filter);\n\n  if (nextFocusable && nextFocusable instanceof HTMLElement) {\n    nextFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\nfunction findFirstKeyboardFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);\n}\nfunction focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {\n  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);\n\n  if (firstFocusable) {\n    firstFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\nfunction findLastKeyboardFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);\n  return allFocusable[allFocusable.length - 1];\n}\nfunction focusLastKeyboardFocusableNode(element, onlyDescendants = true) {\n  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);\n\n  if (lastFocusable) {\n    lastFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\nfunction wrapFocusPreviousFocusableMenuItem(parentElement, currentFocusedElement) {\n  const allFocusableChildren = getMenuFocusableDescendants(parentElement);\n  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\n\n  if (currentItemIdx === -1) {\n    allFocusableChildren[0].focus();\n  } else {\n    allFocusableChildren[(currentItemIdx - 1 + allFocusableChildren.length) % allFocusableChildren.length].focus();\n  }\n}\nfunction wrapFocusNextFocusableMenuItem(parentElement, currentFocusedElement) {\n  const allFocusableChildren = getMenuFocusableDescendants(parentElement);\n  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);\n\n  if (currentItemIdx === -1) {\n    allFocusableChildren[0].focus();\n  } else {\n    allFocusableChildren[(currentItemIdx + 1) % allFocusableChildren.length].focus();\n  }\n}\n\nfunction getMenuFocusableDescendants(element) {\n  return element.querySelectorAll(MENUITEM_FOCUSABLE_SELECTORS);\n}\n\nfunction getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement) {\n  let currentItemIdx = 0;\n\n  for (const focusableChild of allFocusableChildren) {\n    if (focusableChild === currentFocusedElement) {\n      break;\n    }\n\n    currentItemIdx++;\n  }\n\n  return currentItemIdx === allFocusableChildren.length ? -1 : currentItemIdx;\n}\n\nfunction matches(node, selector) {\n  if (node.matches) {\n    return node.matches(selector);\n  }\n\n  const matches = (node.ownerDocument || document).querySelectorAll(selector);\n  let i = matches.length;\n\n  while (--i >= 0 && matches.item(i) !== node) return i > -1;\n}\n\nexport { findFirstFocusableNode, findFirstFocusableNodeIncludingDisabled, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode, focusNextFocusableNode, handleMouseUpByBlurring, nextFocusableNode, wrapFocusNextFocusableMenuItem, wrapFocusPreviousFocusableMenuItem };\n"]},"metadata":{},"sourceType":"module"}