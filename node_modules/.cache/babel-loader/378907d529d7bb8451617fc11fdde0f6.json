{"ast":null,"code":"import React, { PureComponent, createRef, Children } from 'react';\nimport { findFirstFocusableNode } from '../../../../utilities/focus.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { isElementOfType, wrapWithComponent } from '../../../../utilities/components.js';\nimport { Key } from '../../../../types.js';\nimport { overlay } from '../../../shared.js';\nimport styles from '../../Popover.scss.js';\nimport { KeypressListener } from '../../../KeypressListener/KeypressListener.js';\nimport { PositionedOverlay } from '../../../PositionedOverlay/PositionedOverlay.js';\nimport { Pane } from '../Pane/Pane.js';\nimport { EventListener } from '../../../EventListener/EventListener.js';\nimport { CustomProperties } from '../../../CustomProperties/CustomProperties.js';\nimport { tokens } from '../../../../tokens/tokens.js';\nlet PopoverCloseSource;\n\n(function (PopoverCloseSource) {\n  PopoverCloseSource[PopoverCloseSource[\"Click\"] = 0] = \"Click\";\n  PopoverCloseSource[PopoverCloseSource[\"EscapeKeypress\"] = 1] = \"EscapeKeypress\";\n  PopoverCloseSource[PopoverCloseSource[\"FocusOut\"] = 2] = \"FocusOut\";\n  PopoverCloseSource[PopoverCloseSource[\"ScrollOut\"] = 3] = \"ScrollOut\";\n})(PopoverCloseSource || (PopoverCloseSource = {}));\n\nvar TransitionStatus;\n\n(function (TransitionStatus) {\n  TransitionStatus[\"Entering\"] = \"entering\";\n  TransitionStatus[\"Entered\"] = \"entered\";\n  TransitionStatus[\"Exiting\"] = \"exiting\";\n  TransitionStatus[\"Exited\"] = \"exited\";\n})(TransitionStatus || (TransitionStatus = {}));\n\nclass PopoverOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transitionStatus: this.props.active ? TransitionStatus.Entering : TransitionStatus.Exited\n    };\n    this.contentNode = /*#__PURE__*/createRef();\n    this.enteringTimer = void 0;\n    this.exitingTimer = void 0;\n    this.overlayRef = void 0;\n\n    this.renderPopover = overlayDetails => {\n      const {\n        measuring,\n        desiredHeight,\n        positioning\n      } = overlayDetails;\n      const {\n        id,\n        children,\n        sectioned,\n        fullWidth,\n        fullHeight,\n        fluidContent,\n        hideOnPrint,\n        colorScheme,\n        autofocusTarget\n      } = this.props;\n      const className = classNames(styles.Popover, positioning === 'above' && styles.positionedAbove, fullWidth && styles.fullWidth, measuring && styles.measuring, hideOnPrint && styles['PopoverOverlay-hideOnPrint']);\n      const contentStyles = measuring ? undefined : {\n        height: desiredHeight\n      };\n      const contentClassNames = classNames(styles.Content, fullHeight && styles['Content-fullHeight'], fluidContent && styles['Content-fluidContent']);\n      const content = /*#__PURE__*/React.createElement(\"div\", {\n        id: id,\n        tabIndex: autofocusTarget === 'none' ? undefined : -1,\n        className: contentClassNames,\n        style: contentStyles,\n        ref: this.contentNode\n      }, renderPopoverContent(children, {\n        sectioned\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: className\n      }, overlay.props), /*#__PURE__*/React.createElement(EventListener, {\n        event: \"click\",\n        handler: this.handleClick\n      }), /*#__PURE__*/React.createElement(EventListener, {\n        event: \"touchstart\",\n        handler: this.handleClick\n      }), /*#__PURE__*/React.createElement(KeypressListener, {\n        keyCode: Key.Escape,\n        handler: this.handleEscape\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.FocusTracker // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        ,\n        tabIndex: 0,\n        onFocus: this.handleFocusFirstItem\n      }), /*#__PURE__*/React.createElement(CustomProperties, {\n        colorScheme: colorScheme\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.Wrapper\n      }, content)), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.FocusTracker // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        ,\n        tabIndex: 0,\n        onFocus: this.handleFocusLastItem\n      }));\n    };\n\n    this.handleClick = event => {\n      const target = event.target;\n      const {\n        contentNode,\n        props: {\n          activator,\n          onClose\n        }\n      } = this;\n      const isDescendant = contentNode.current != null && nodeContainsDescendant(contentNode.current, target);\n      const isActivatorDescendant = nodeContainsDescendant(activator, target);\n\n      if (isDescendant || isActivatorDescendant || this.state.transitionStatus !== TransitionStatus.Entered) {\n        return;\n      }\n\n      onClose(PopoverCloseSource.Click);\n    };\n\n    this.handleScrollOut = () => {\n      this.props.onClose(PopoverCloseSource.ScrollOut);\n    };\n\n    this.handleEscape = () => {\n      this.props.onClose(PopoverCloseSource.EscapeKeypress);\n    };\n\n    this.handleFocusFirstItem = () => {\n      this.props.onClose(PopoverCloseSource.FocusOut);\n    };\n\n    this.handleFocusLastItem = () => {\n      this.props.onClose(PopoverCloseSource.FocusOut);\n    };\n\n    this.overlayRef = /*#__PURE__*/createRef();\n  }\n\n  forceUpdatePosition() {\n    var _this$overlayRef$curr;\n\n    (_this$overlayRef$curr = this.overlayRef.current) === null || _this$overlayRef$curr === void 0 ? void 0 : _this$overlayRef$curr.forceUpdatePosition();\n  }\n\n  changeTransitionStatus(transitionStatus, cb) {\n    this.setState({\n      transitionStatus\n    }, cb); // Forcing a reflow to enable the animation\n\n    this.contentNode.current && this.contentNode.current.getBoundingClientRect();\n  }\n\n  componentDidMount() {\n    if (this.props.active) {\n      this.focusContent();\n      this.changeTransitionStatus(TransitionStatus.Entered);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.active && !oldProps.active) {\n      this.focusContent();\n      this.changeTransitionStatus(TransitionStatus.Entering, () => {\n        this.clearTransitionTimeout();\n        this.enteringTimer = window.setTimeout(() => {\n          this.setState({\n            transitionStatus: TransitionStatus.Entered\n          });\n        }, parseInt(tokens.motion['duration-100'], 10));\n      });\n    }\n\n    if (!this.props.active && oldProps.active) {\n      this.changeTransitionStatus(TransitionStatus.Exiting, () => {\n        this.clearTransitionTimeout();\n        this.exitingTimer = window.setTimeout(() => {\n          this.setState({\n            transitionStatus: TransitionStatus.Exited\n          });\n        }, parseInt(tokens.motion['duration-100'], 10));\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearTransitionTimeout();\n  }\n\n  render() {\n    const {\n      active,\n      activator,\n      fullWidth,\n      preferredPosition = 'below',\n      preferredAlignment = 'center',\n      preferInputActivator = true,\n      fixed,\n      zIndexOverride\n    } = this.props;\n    const {\n      transitionStatus\n    } = this.state;\n    if (transitionStatus === TransitionStatus.Exited && !active) return null;\n    const className = classNames(styles.PopoverOverlay, transitionStatus === TransitionStatus.Entering && styles['PopoverOverlay-entering'], transitionStatus === TransitionStatus.Entered && styles['PopoverOverlay-open'], transitionStatus === TransitionStatus.Exiting && styles['PopoverOverlay-exiting']);\n    return /*#__PURE__*/React.createElement(PositionedOverlay, {\n      ref: this.overlayRef,\n      fullWidth: fullWidth,\n      active: active,\n      activator: activator,\n      preferInputActivator: preferInputActivator,\n      preferredPosition: preferredPosition,\n      preferredAlignment: preferredAlignment,\n      render: this.renderPopover.bind(this),\n      fixed: fixed,\n      onScrollOut: this.handleScrollOut,\n      classNames: className,\n      zIndexOverride: zIndexOverride\n    });\n  }\n\n  clearTransitionTimeout() {\n    if (this.enteringTimer) {\n      window.clearTimeout(this.enteringTimer);\n    }\n\n    if (this.exitingTimer) {\n      window.clearTimeout(this.exitingTimer);\n    }\n  }\n\n  focusContent() {\n    const {\n      autofocusTarget = 'container'\n    } = this.props;\n\n    if (autofocusTarget === 'none' || this.contentNode == null) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (this.contentNode.current == null) {\n        return;\n      }\n\n      const focusableChild = findFirstFocusableNode(this.contentNode.current);\n\n      if (focusableChild && autofocusTarget === 'first-node') {\n        focusableChild.focus({\n          preventScroll: process.env.NODE_ENV === 'development'\n        });\n      } else {\n        this.contentNode.current.focus({\n          preventScroll: process.env.NODE_ENV === 'development'\n        });\n      }\n    });\n  } // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n\n\n}\n\nfunction renderPopoverContent(children, props) {\n  const childrenArray = Children.toArray(children);\n\n  if (isElementOfType(childrenArray[0], Pane)) {\n    return childrenArray;\n  }\n\n  return wrapWithComponent(childrenArray, Pane, props);\n}\n\nfunction nodeContainsDescendant(rootNode, descendant) {\n  if (rootNode === descendant) {\n    return true;\n  }\n\n  let parent = descendant.parentNode;\n\n  while (parent != null) {\n    if (parent === rootNode) {\n      return true;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return false;\n}\n\nexport { PopoverCloseSource, PopoverOverlay, nodeContainsDescendant };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Popover/components/PopoverOverlay/PopoverOverlay.js"],"names":["React","PureComponent","createRef","Children","findFirstFocusableNode","classNames","isElementOfType","wrapWithComponent","Key","overlay","styles","KeypressListener","PositionedOverlay","Pane","EventListener","CustomProperties","tokens","PopoverCloseSource","TransitionStatus","PopoverOverlay","constructor","props","state","transitionStatus","active","Entering","Exited","contentNode","enteringTimer","exitingTimer","overlayRef","renderPopover","overlayDetails","measuring","desiredHeight","positioning","id","children","sectioned","fullWidth","fullHeight","fluidContent","hideOnPrint","colorScheme","autofocusTarget","className","Popover","positionedAbove","contentStyles","undefined","height","contentClassNames","Content","content","createElement","tabIndex","style","ref","renderPopoverContent","Object","assign","event","handler","handleClick","keyCode","Escape","handleEscape","FocusTracker","onFocus","handleFocusFirstItem","Wrapper","handleFocusLastItem","target","activator","onClose","isDescendant","current","nodeContainsDescendant","isActivatorDescendant","Entered","Click","handleScrollOut","ScrollOut","EscapeKeypress","FocusOut","forceUpdatePosition","_this$overlayRef$curr","changeTransitionStatus","cb","setState","getBoundingClientRect","componentDidMount","focusContent","componentDidUpdate","oldProps","clearTransitionTimeout","window","setTimeout","parseInt","motion","Exiting","componentWillUnmount","render","preferredPosition","preferredAlignment","preferInputActivator","fixed","zIndexOverride","bind","onScrollOut","clearTimeout","requestAnimationFrame","focusableChild","focus","preventScroll","process","env","NODE_ENV","childrenArray","toArray","rootNode","descendant","parent","parentNode"],"mappings":"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","sourcesContent":["import React, { PureComponent, createRef, Children } from 'react';\nimport { findFirstFocusableNode } from '../../../../utilities/focus.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { isElementOfType, wrapWithComponent } from '../../../../utilities/components.js';\nimport { Key } from '../../../../types.js';\nimport { overlay } from '../../../shared.js';\nimport styles from '../../Popover.scss.js';\nimport { KeypressListener } from '../../../KeypressListener/KeypressListener.js';\nimport { PositionedOverlay } from '../../../PositionedOverlay/PositionedOverlay.js';\nimport { Pane } from '../Pane/Pane.js';\nimport { EventListener } from '../../../EventListener/EventListener.js';\nimport { CustomProperties } from '../../../CustomProperties/CustomProperties.js';\nimport { tokens } from '../../../../tokens/tokens.js';\n\nlet PopoverCloseSource;\n\n(function (PopoverCloseSource) {\n  PopoverCloseSource[PopoverCloseSource[\"Click\"] = 0] = \"Click\";\n  PopoverCloseSource[PopoverCloseSource[\"EscapeKeypress\"] = 1] = \"EscapeKeypress\";\n  PopoverCloseSource[PopoverCloseSource[\"FocusOut\"] = 2] = \"FocusOut\";\n  PopoverCloseSource[PopoverCloseSource[\"ScrollOut\"] = 3] = \"ScrollOut\";\n})(PopoverCloseSource || (PopoverCloseSource = {}));\n\nvar TransitionStatus;\n\n(function (TransitionStatus) {\n  TransitionStatus[\"Entering\"] = \"entering\";\n  TransitionStatus[\"Entered\"] = \"entered\";\n  TransitionStatus[\"Exiting\"] = \"exiting\";\n  TransitionStatus[\"Exited\"] = \"exited\";\n})(TransitionStatus || (TransitionStatus = {}));\n\nclass PopoverOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transitionStatus: this.props.active ? TransitionStatus.Entering : TransitionStatus.Exited\n    };\n    this.contentNode = /*#__PURE__*/createRef();\n    this.enteringTimer = void 0;\n    this.exitingTimer = void 0;\n    this.overlayRef = void 0;\n\n    this.renderPopover = overlayDetails => {\n      const {\n        measuring,\n        desiredHeight,\n        positioning\n      } = overlayDetails;\n      const {\n        id,\n        children,\n        sectioned,\n        fullWidth,\n        fullHeight,\n        fluidContent,\n        hideOnPrint,\n        colorScheme,\n        autofocusTarget\n      } = this.props;\n      const className = classNames(styles.Popover, positioning === 'above' && styles.positionedAbove, fullWidth && styles.fullWidth, measuring && styles.measuring, hideOnPrint && styles['PopoverOverlay-hideOnPrint']);\n      const contentStyles = measuring ? undefined : {\n        height: desiredHeight\n      };\n      const contentClassNames = classNames(styles.Content, fullHeight && styles['Content-fullHeight'], fluidContent && styles['Content-fluidContent']);\n      const content = /*#__PURE__*/React.createElement(\"div\", {\n        id: id,\n        tabIndex: autofocusTarget === 'none' ? undefined : -1,\n        className: contentClassNames,\n        style: contentStyles,\n        ref: this.contentNode\n      }, renderPopoverContent(children, {\n        sectioned\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: className\n      }, overlay.props), /*#__PURE__*/React.createElement(EventListener, {\n        event: \"click\",\n        handler: this.handleClick\n      }), /*#__PURE__*/React.createElement(EventListener, {\n        event: \"touchstart\",\n        handler: this.handleClick\n      }), /*#__PURE__*/React.createElement(KeypressListener, {\n        keyCode: Key.Escape,\n        handler: this.handleEscape\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.FocusTracker // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        ,\n        tabIndex: 0,\n        onFocus: this.handleFocusFirstItem\n      }), /*#__PURE__*/React.createElement(CustomProperties, {\n        colorScheme: colorScheme\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.Wrapper\n      }, content)), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.FocusTracker // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        ,\n        tabIndex: 0,\n        onFocus: this.handleFocusLastItem\n      }));\n    };\n\n    this.handleClick = event => {\n      const target = event.target;\n      const {\n        contentNode,\n        props: {\n          activator,\n          onClose\n        }\n      } = this;\n      const isDescendant = contentNode.current != null && nodeContainsDescendant(contentNode.current, target);\n      const isActivatorDescendant = nodeContainsDescendant(activator, target);\n\n      if (isDescendant || isActivatorDescendant || this.state.transitionStatus !== TransitionStatus.Entered) {\n        return;\n      }\n\n      onClose(PopoverCloseSource.Click);\n    };\n\n    this.handleScrollOut = () => {\n      this.props.onClose(PopoverCloseSource.ScrollOut);\n    };\n\n    this.handleEscape = () => {\n      this.props.onClose(PopoverCloseSource.EscapeKeypress);\n    };\n\n    this.handleFocusFirstItem = () => {\n      this.props.onClose(PopoverCloseSource.FocusOut);\n    };\n\n    this.handleFocusLastItem = () => {\n      this.props.onClose(PopoverCloseSource.FocusOut);\n    };\n\n    this.overlayRef = /*#__PURE__*/createRef();\n  }\n\n  forceUpdatePosition() {\n    var _this$overlayRef$curr;\n\n    (_this$overlayRef$curr = this.overlayRef.current) === null || _this$overlayRef$curr === void 0 ? void 0 : _this$overlayRef$curr.forceUpdatePosition();\n  }\n\n  changeTransitionStatus(transitionStatus, cb) {\n    this.setState({\n      transitionStatus\n    }, cb); // Forcing a reflow to enable the animation\n\n    this.contentNode.current && this.contentNode.current.getBoundingClientRect();\n  }\n\n  componentDidMount() {\n    if (this.props.active) {\n      this.focusContent();\n      this.changeTransitionStatus(TransitionStatus.Entered);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.active && !oldProps.active) {\n      this.focusContent();\n      this.changeTransitionStatus(TransitionStatus.Entering, () => {\n        this.clearTransitionTimeout();\n        this.enteringTimer = window.setTimeout(() => {\n          this.setState({\n            transitionStatus: TransitionStatus.Entered\n          });\n        }, parseInt(tokens.motion['duration-100'], 10));\n      });\n    }\n\n    if (!this.props.active && oldProps.active) {\n      this.changeTransitionStatus(TransitionStatus.Exiting, () => {\n        this.clearTransitionTimeout();\n        this.exitingTimer = window.setTimeout(() => {\n          this.setState({\n            transitionStatus: TransitionStatus.Exited\n          });\n        }, parseInt(tokens.motion['duration-100'], 10));\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearTransitionTimeout();\n  }\n\n  render() {\n    const {\n      active,\n      activator,\n      fullWidth,\n      preferredPosition = 'below',\n      preferredAlignment = 'center',\n      preferInputActivator = true,\n      fixed,\n      zIndexOverride\n    } = this.props;\n    const {\n      transitionStatus\n    } = this.state;\n    if (transitionStatus === TransitionStatus.Exited && !active) return null;\n    const className = classNames(styles.PopoverOverlay, transitionStatus === TransitionStatus.Entering && styles['PopoverOverlay-entering'], transitionStatus === TransitionStatus.Entered && styles['PopoverOverlay-open'], transitionStatus === TransitionStatus.Exiting && styles['PopoverOverlay-exiting']);\n    return /*#__PURE__*/React.createElement(PositionedOverlay, {\n      ref: this.overlayRef,\n      fullWidth: fullWidth,\n      active: active,\n      activator: activator,\n      preferInputActivator: preferInputActivator,\n      preferredPosition: preferredPosition,\n      preferredAlignment: preferredAlignment,\n      render: this.renderPopover.bind(this),\n      fixed: fixed,\n      onScrollOut: this.handleScrollOut,\n      classNames: className,\n      zIndexOverride: zIndexOverride\n    });\n  }\n\n  clearTransitionTimeout() {\n    if (this.enteringTimer) {\n      window.clearTimeout(this.enteringTimer);\n    }\n\n    if (this.exitingTimer) {\n      window.clearTimeout(this.exitingTimer);\n    }\n  }\n\n  focusContent() {\n    const {\n      autofocusTarget = 'container'\n    } = this.props;\n\n    if (autofocusTarget === 'none' || this.contentNode == null) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (this.contentNode.current == null) {\n        return;\n      }\n\n      const focusableChild = findFirstFocusableNode(this.contentNode.current);\n\n      if (focusableChild && autofocusTarget === 'first-node') {\n        focusableChild.focus({\n          preventScroll: process.env.NODE_ENV === 'development'\n        });\n      } else {\n        this.contentNode.current.focus({\n          preventScroll: process.env.NODE_ENV === 'development'\n        });\n      }\n    });\n  } // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n\n\n}\n\nfunction renderPopoverContent(children, props) {\n  const childrenArray = Children.toArray(children);\n\n  if (isElementOfType(childrenArray[0], Pane)) {\n    return childrenArray;\n  }\n\n  return wrapWithComponent(childrenArray, Pane, props);\n}\n\nfunction nodeContainsDescendant(rootNode, descendant) {\n  if (rootNode === descendant) {\n    return true;\n  }\n\n  let parent = descendant.parentNode;\n\n  while (parent != null) {\n    if (parent === rootNode) {\n      return true;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return false;\n}\n\nexport { PopoverCloseSource, PopoverOverlay, nodeContainsDescendant };\n"]},"metadata":{},"sourceType":"module"}