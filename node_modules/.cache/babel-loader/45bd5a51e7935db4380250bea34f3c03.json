{"ast":null,"code":"import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './ProgressBar.scss.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { tokens } from '../../tokens/tokens.js';\n\nfunction ProgressBar(_ref) {\n  var _ref$progress = _ref.progress,\n      progress = _ref$progress === void 0 ? 0 : _ref$progress,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'highlight' : _ref$color,\n      _ref$animated = _ref.animated,\n      hasAppearAnimation = _ref$animated === void 0 ? true : _ref$animated;\n  var i18n = useI18n();\n  var className = classNames(styles.ProgressBar, size && styles[variationName('size', size)], color && styles[variationName('color', color)]);\n  var warningMessage = i18n.translate(progress < 0 ? 'Polaris.ProgressBar.negativeWarningMessage' : 'Polaris.ProgressBar.exceedWarningMessage', {\n    progress: progress\n  });\n  var parsedProgress = parseProgress(progress, warningMessage);\n  var progressBarDuration = hasAppearAnimation ? tokens.motion['duration-500'] : tokens.motion['duration-0'];\n  /* eslint-disable @shopify/jsx-no-hardcoded-content */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"progress\", {\n    className: styles.Progress,\n    value: parsedProgress,\n    max: \"100\"\n  }), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: true,\n    appear: true,\n    timeout: parseInt(progressBarDuration, 10),\n    classNames: {\n      appearActive: styles.IndicatorAppearActive,\n      appearDone: styles.IndicatorAppearDone\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Indicator,\n    style: {\n      '--pc-progress-bar-duration': progressBarDuration,\n      '--pc-progress-bar-percent': parsedProgress / 100\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, parsedProgress, \"%\"))))\n  /* eslint-enable @shopify/jsx-no-hardcoded-content */\n  ;\n}\n\nfunction parseProgress(progress, warningMessage) {\n  var progressWidth;\n\n  if (progress < 0) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 0;\n  } else if (progress > 100) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 100;\n  } else {\n    progressWidth = progress;\n  }\n\n  return progressWidth;\n}\n\nexport { ProgressBar };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.js"],"names":["React","CSSTransition","classNames","variationName","styles","useI18n","tokens","ProgressBar","progress","size","color","animated","hasAppearAnimation","i18n","className","warningMessage","translate","parsedProgress","parseProgress","progressBarDuration","motion","createElement","Progress","value","max","in","appear","timeout","parseInt","appearActive","IndicatorAppearActive","appearDone","IndicatorAppearDone","Indicator","style","Label","progressWidth","process","env","NODE_ENV","console","warn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './ProgressBar.scss.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { tokens } from '../../tokens/tokens.js';\n\nfunction ProgressBar({\n  progress = 0,\n  size = 'medium',\n  color = 'highlight',\n  animated: hasAppearAnimation = true\n}) {\n  const i18n = useI18n();\n  const className = classNames(styles.ProgressBar, size && styles[variationName('size', size)], color && styles[variationName('color', color)]);\n  const warningMessage = i18n.translate(progress < 0 ? 'Polaris.ProgressBar.negativeWarningMessage' : 'Polaris.ProgressBar.exceedWarningMessage', {\n    progress\n  });\n  const parsedProgress = parseProgress(progress, warningMessage);\n  const progressBarDuration = hasAppearAnimation ? tokens.motion['duration-500'] : tokens.motion['duration-0'];\n  /* eslint-disable @shopify/jsx-no-hardcoded-content */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"progress\", {\n    className: styles.Progress,\n    value: parsedProgress,\n    max: \"100\"\n  }), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: true,\n    appear: true,\n    timeout: parseInt(progressBarDuration, 10),\n    classNames: {\n      appearActive: styles.IndicatorAppearActive,\n      appearDone: styles.IndicatorAppearDone\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Indicator,\n    style: {\n      '--pc-progress-bar-duration': progressBarDuration,\n      '--pc-progress-bar-percent': parsedProgress / 100\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, parsedProgress, \"%\"))))\n  /* eslint-enable @shopify/jsx-no-hardcoded-content */\n  ;\n}\n\nfunction parseProgress(progress, warningMessage) {\n  let progressWidth;\n\n  if (progress < 0) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 0;\n  } else if (progress > 100) {\n    if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(warningMessage);\n    }\n\n    progressWidth = 100;\n  } else {\n    progressWidth = progress;\n  }\n\n  return progressWidth;\n}\n\nexport { ProgressBar };\n"]},"metadata":{},"sourceType":"module"}