{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { MobileCancelMajor } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Key } from '../../../../types.js';\nimport styles from './Toast.scss.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { Button } from '../../../Button/Button.js';\nimport { CustomProperties } from '../../../CustomProperties/CustomProperties.js';\nimport { KeypressListener } from '../../../KeypressListener/KeypressListener.js';\nconst DEFAULT_TOAST_DURATION = 5000;\nconst DEFAULT_TOAST_DURATION_WITH_ACTION = 10000;\n\nfunction Toast(_ref) {\n  let {\n    content,\n    onDismiss,\n    duration,\n    error,\n    action\n  } = _ref;\n  useEffect(() => {\n    let timeoutDuration = duration || DEFAULT_TOAST_DURATION;\n\n    if (action && !duration) {\n      timeoutDuration = DEFAULT_TOAST_DURATION_WITH_ACTION;\n    } else if (action && duration && duration < DEFAULT_TOAST_DURATION_WITH_ACTION) {\n      // eslint-disable-next-line no-console\n      console.log('Toast with action should persist for at least 10,000 milliseconds to give the merchant enough time to act on it.');\n    }\n\n    const timer = setTimeout(onDismiss, timeoutDuration);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [action, duration, onDismiss]);\n  const dismissMarkup = /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.CloseButton,\n    onClick: onDismiss\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: MobileCancelMajor\n  }));\n  const actionMarkup = action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Action\n  }, /*#__PURE__*/React.createElement(Button, {\n    plain: true,\n    monochrome: true,\n    onClick: action.onAction\n  }, action.content)) : null;\n  const className = classNames(styles.Toast, error && styles.error);\n  return /*#__PURE__*/React.createElement(CustomProperties, {\n    colorScheme: \"dark\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(KeypressListener, {\n    keyCode: Key.Escape,\n    handler: onDismiss\n  }), content, actionMarkup, dismissMarkup));\n}\n\nexport { DEFAULT_TOAST_DURATION, DEFAULT_TOAST_DURATION_WITH_ACTION, Toast };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.js"],"names":["React","useEffect","MobileCancelMajor","classNames","Key","styles","Icon","Button","CustomProperties","KeypressListener","DEFAULT_TOAST_DURATION","DEFAULT_TOAST_DURATION_WITH_ACTION","Toast","content","onDismiss","duration","error","action","timeoutDuration","console","log","timer","setTimeout","clearTimeout","dismissMarkup","createElement","type","className","CloseButton","onClick","source","actionMarkup","Action","plain","monochrome","onAction","colorScheme","keyCode","Escape","handler"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,gBAAT,QAAiC,+CAAjC;AACA,SAASC,gBAAT,QAAiC,+CAAjC;AAEA,MAAMC,sBAAsB,GAAG,IAA/B;AACA,MAAMC,kCAAkC,GAAG,KAA3C;;AACA,SAASC,KAAT,OAMG;AAAA,MANY;AACbC,IAAAA,OADa;AAEbC,IAAAA,SAFa;AAGbC,IAAAA,QAHa;AAIbC,IAAAA,KAJa;AAKbC,IAAAA;AALa,GAMZ;AACDhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,eAAe,GAAGH,QAAQ,IAAIL,sBAAlC;;AAEA,QAAIO,MAAM,IAAI,CAACF,QAAf,EAAyB;AACvBG,MAAAA,eAAe,GAAGP,kCAAlB;AACD,KAFD,MAEO,IAAIM,MAAM,IAAIF,QAAV,IAAsBA,QAAQ,GAAGJ,kCAArC,EAAyE;AAC9E;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kHAAZ;AACD;;AAED,UAAMC,KAAK,GAAGC,UAAU,CAACR,SAAD,EAAYI,eAAZ,CAAxB;AACA,WAAO,MAAM;AACXK,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAFD;AAGD,GAdQ,EAcN,CAACJ,MAAD,EAASF,QAAT,EAAmBD,SAAnB,CAdM,CAAT;AAeA,QAAMU,aAAa,GAAG,aAAaxB,KAAK,CAACyB,aAAN,CAAoB,QAApB,EAA8B;AAC/DC,IAAAA,IAAI,EAAE,QADyD;AAE/DC,IAAAA,SAAS,EAAEtB,MAAM,CAACuB,WAF6C;AAG/DC,IAAAA,OAAO,EAAEf;AAHsD,GAA9B,EAIhC,aAAad,KAAK,CAACyB,aAAN,CAAoBnB,IAApB,EAA0B;AACxCwB,IAAAA,MAAM,EAAE5B;AADgC,GAA1B,CAJmB,CAAnC;AAOA,QAAM6B,YAAY,GAAGd,MAAM,GAAG,aAAajB,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;AACpEE,IAAAA,SAAS,EAAEtB,MAAM,CAAC2B;AADkD,GAA3B,EAExC,aAAahC,KAAK,CAACyB,aAAN,CAAoBlB,MAApB,EAA4B;AAC1C0B,IAAAA,KAAK,EAAE,IADmC;AAE1CC,IAAAA,UAAU,EAAE,IAF8B;AAG1CL,IAAAA,OAAO,EAAEZ,MAAM,CAACkB;AAH0B,GAA5B,EAIblB,MAAM,CAACJ,OAJM,CAF2B,CAAhB,GAML,IANtB;AAOA,QAAMc,SAAS,GAAGxB,UAAU,CAACE,MAAM,CAACO,KAAR,EAAeI,KAAK,IAAIX,MAAM,CAACW,KAA/B,CAA5B;AACA,SAAO,aAAahB,KAAK,CAACyB,aAAN,CAAoBjB,gBAApB,EAAsC;AACxD4B,IAAAA,WAAW,EAAE;AAD2C,GAAtC,EAEjB,aAAapC,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;AACzCE,IAAAA,SAAS,EAAEA;AAD8B,GAA3B,EAEb,aAAa3B,KAAK,CAACyB,aAAN,CAAoBhB,gBAApB,EAAsC;AACpD4B,IAAAA,OAAO,EAAEjC,GAAG,CAACkC,MADuC;AAEpDC,IAAAA,OAAO,EAAEzB;AAF2C,GAAtC,CAFA,EAKZD,OALY,EAKHkB,YALG,EAKWP,aALX,CAFI,CAApB;AAQD;;AAED,SAASd,sBAAT,EAAiCC,kCAAjC,EAAqEC,KAArE","sourcesContent":["import React, { useEffect } from 'react';\nimport { MobileCancelMajor } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Key } from '../../../../types.js';\nimport styles from './Toast.scss.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { Button } from '../../../Button/Button.js';\nimport { CustomProperties } from '../../../CustomProperties/CustomProperties.js';\nimport { KeypressListener } from '../../../KeypressListener/KeypressListener.js';\n\nconst DEFAULT_TOAST_DURATION = 5000;\nconst DEFAULT_TOAST_DURATION_WITH_ACTION = 10000;\nfunction Toast({\n  content,\n  onDismiss,\n  duration,\n  error,\n  action\n}) {\n  useEffect(() => {\n    let timeoutDuration = duration || DEFAULT_TOAST_DURATION;\n\n    if (action && !duration) {\n      timeoutDuration = DEFAULT_TOAST_DURATION_WITH_ACTION;\n    } else if (action && duration && duration < DEFAULT_TOAST_DURATION_WITH_ACTION) {\n      // eslint-disable-next-line no-console\n      console.log('Toast with action should persist for at least 10,000 milliseconds to give the merchant enough time to act on it.');\n    }\n\n    const timer = setTimeout(onDismiss, timeoutDuration);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [action, duration, onDismiss]);\n  const dismissMarkup = /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.CloseButton,\n    onClick: onDismiss\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: MobileCancelMajor\n  }));\n  const actionMarkup = action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Action\n  }, /*#__PURE__*/React.createElement(Button, {\n    plain: true,\n    monochrome: true,\n    onClick: action.onAction\n  }, action.content)) : null;\n  const className = classNames(styles.Toast, error && styles.error);\n  return /*#__PURE__*/React.createElement(CustomProperties, {\n    colorScheme: \"dark\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(KeypressListener, {\n    keyCode: Key.Escape,\n    handler: onDismiss\n  }), content, actionMarkup, dismissMarkup));\n}\n\nexport { DEFAULT_TOAST_DURATION, DEFAULT_TOAST_DURATION_WITH_ACTION, Toast };\n"]},"metadata":{},"sourceType":"module"}