{"ast":null,"code":"var _jsxFileName = \"/Users/ayubmohamed/emwb/src/Components/NotificationItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CircleTickOutlineMinor } from '@shopify/polaris-icons';\nimport { Stack, TextContainer, Button, Icon, Card } from \"@shopify/polaris\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationItem = _ref => {\n  _s();\n\n  let {\n    content\n  } = _ref;\n  const [iconValue, setIconValue] = useState(\"base\");\n  const [buttonState, setButtonState] = useState(\"Add\");\n  const [buttonColor, setButtonColor] = useState(false);\n  const [sheetActive, setSheetActive] = useState(false);\n  const toggleSheetActive = useCallback(() => setSheetActive(sheetActive => !sheetActive), []);\n\n  const subscribe = () => {\n    if (iconValue === \"base\") {\n      setButtonColor(true);\n      setButtonState(\"Delete\");\n      setIconValue(\"high\");\n    } else {\n      setButtonColor(false);\n      setButtonState(\"Add\");\n      setIconValue(\"base\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card.Section, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Stack.Item, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          source: CircleTickOutlineMinor,\n          color: iconValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n        fill: true,\n        children: /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Sheet, {\n          open: sheetActive,\n          onClose: toggleSheetActive,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                alignItems: 'center',\n                borderBottom: '1px solid #DFE3E8',\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '1rem',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                children: \"Manage sales channels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                accessibilityLabel: \"Cancel\",\n                onClick: toggleSheetActive,\n                plain: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                alignItems: 'center',\n                borderTop: '1px solid #DFE3E8',\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '1rem',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: toggleSheetActive,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                onClick: toggleSheetActive,\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          plain: true,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: subscribe,\n          plain: true,\n          destructive: buttonColor,\n          children: buttonState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationItem, \"30SydNswCVe9ZDKBcA0ZYrf08fc=\");\n\n_c = NotificationItem;\nexport default NotificationItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationItem\");","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/src/Components/NotificationItem.jsx"],"names":["React","useState","CircleTickOutlineMinor","Stack","TextContainer","Button","Icon","Card","NotificationItem","content","iconValue","setIconValue","buttonState","setButtonState","buttonColor","setButtonColor","sheetActive","setSheetActive","toggleSheetActive","useCallback","subscribe","display","flexDirection","height","alignItems","borderBottom","justifyContent","padding","width","borderTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { CircleTickOutlineMinor } from '@shopify/polaris-icons';\nimport { Stack, TextContainer, Button, Icon, Card } from \"@shopify/polaris\";\nconst NotificationItem = ({ content }) => {\n    const [iconValue, setIconValue] = useState(\"base\")\n    const [buttonState, setButtonState] = useState(\"Add\")\n    const [buttonColor, setButtonColor] = useState(false)\n\n    const [sheetActive, setSheetActive] = useState(false);\n    const toggleSheetActive = useCallback(\n      () => setSheetActive((sheetActive) => !sheetActive),\n      [],\n    );\n\n    const subscribe = () => {\n        if(iconValue === \"base\"){\n        setButtonColor(true)\n        setButtonState(\"Delete\")\n        setIconValue(\"high\")\n        }else{\n            setButtonColor(false)\n            setButtonState(\"Add\")\n            setIconValue(\"base\")\n        }\n    }\n\n\n\n    return (\n        <Card.Section>\n            <Stack>\n                <Stack.Item>\n                    <Icon\n                        source={CircleTickOutlineMinor}\n                        color={iconValue} />\n                </Stack.Item>\n                <Stack.Item fill>\n                    <TextContainer>{content}</TextContainer>\n                </Stack.Item>\n                <Stack.Item>\n                <Sheet\n          open={sheetActive}\n          onClose={toggleSheetActive}\n        >\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              height: '100%',\n            }}\n          >\n            <div\n              style={{\n                alignItems: 'center',\n                borderBottom: '1px solid #DFE3E8',\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '1rem',\n                width: '100%',\n              }}\n            >\n              <Heading>Manage sales channels</Heading>\n              <Button\n                accessibilityLabel=\"Cancel\"\n                onClick={toggleSheetActive}\n                plain\n              />\n            </div>\n            <div\n              style={{\n                alignItems: 'center',\n                borderTop: '1px solid #DFE3E8',\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '1rem',\n                width: '100%',\n              }}\n            >\n              <Button onClick={toggleSheetActive}>Cancel</Button>\n              <Button primary onClick={toggleSheetActive}>\n                Done\n              </Button>\n            </div>\n          </div>\n        </Sheet>\n                    <Button plain>Preview</Button>\n                </Stack.Item>\n                <Stack.Item>\n                    <Button onClick={subscribe} plain destructive={buttonColor}>{buttonState}</Button>\n                </Stack.Item>\n            </Stack>\n        </Card.Section>\n    )\n}\n\nexport default NotificationItem"]},"metadata":{},"sourceType":"module"}