{"ast":null,"code":"import React, { forwardRef, useState, useRef, useImperativeHandle, useCallback, useEffect, Children } from 'react';\nimport { findFirstFocusableNodeIncludingDisabled, focusNextFocusableNode } from '../../utilities/focus.js';\nimport { portal } from '../shared.js';\nimport { setActivatorAttributes } from './set-activator-attributes.js';\nimport { Portal } from '../Portal/Portal.js';\nimport { PopoverOverlay, PopoverCloseSource } from './components/PopoverOverlay/PopoverOverlay.js';\nexport { PopoverCloseSource } from './components/PopoverOverlay/PopoverOverlay.js';\nimport { Pane } from './components/Pane/Pane.js';\nimport { Section } from './components/Section/Section.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js'; // TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\n\nconst PopoverComponent = /*#__PURE__*/forwardRef(function Popover(_ref, ref) {\n  let {\n    activatorWrapper = 'div',\n    children,\n    onClose,\n    activator,\n    preventFocusOnClose,\n    active,\n    fixed,\n    ariaHaspopup,\n    preferInputActivator = true,\n    colorScheme,\n    zIndexOverride,\n    ...rest\n  } = _ref;\n  const [activatorNode, setActivatorNode] = useState();\n  const overlayRef = useRef(null);\n  const activatorContainer = useRef(null);\n  const WrapperComponent = activatorWrapper;\n  const id = useUniqueId('popover');\n\n  function forceUpdatePosition() {\n    var _overlayRef$current;\n\n    (_overlayRef$current = overlayRef.current) === null || _overlayRef$current === void 0 ? void 0 : _overlayRef$current.forceUpdatePosition();\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      forceUpdatePosition\n    };\n  });\n  const setAccessibilityAttributes = useCallback(() => {\n    if (activatorContainer.current == null) {\n      return;\n    }\n\n    const firstFocusable = findFirstFocusableNodeIncludingDisabled(activatorContainer.current);\n    const focusableActivator = firstFocusable || activatorContainer.current;\n    const activatorDisabled = 'disabled' in focusableActivator && Boolean(focusableActivator.disabled);\n    setActivatorAttributes(focusableActivator, {\n      id,\n      active,\n      ariaHaspopup,\n      activatorDisabled\n    });\n  }, [id, active, ariaHaspopup]);\n\n  const handleClose = source => {\n    onClose(source);\n\n    if (activatorContainer.current == null || preventFocusOnClose) {\n      return;\n    }\n\n    if ((source === PopoverCloseSource.FocusOut || source === PopoverCloseSource.EscapeKeypress) && activatorNode) {\n      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;\n\n      if (!focusNextFocusableNode(focusableActivator, isInPortal)) {\n        focusableActivator.focus();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    } else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  useEffect(() => {\n    if (activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  const portal = activatorNode ? /*#__PURE__*/React.createElement(Portal, {\n    idPrefix: \"popover\"\n  }, /*#__PURE__*/React.createElement(PopoverOverlay, Object.assign({\n    ref: overlayRef,\n    id: id,\n    activator: activatorNode,\n    preferInputActivator: preferInputActivator,\n    onClose: handleClose,\n    active: active,\n    fixed: fixed,\n    colorScheme: colorScheme,\n    zIndexOverride: zIndexOverride\n  }, rest), children)) : null;\n  return /*#__PURE__*/React.createElement(WrapperComponent, {\n    ref: activatorContainer\n  }, Children.only(activator), portal);\n});\n\nfunction isInPortal(element) {\n  let parentElement = element.parentElement;\n\n  while (parentElement) {\n    if (parentElement.matches(portal.selector)) return false;\n    parentElement = parentElement.parentElement;\n  }\n\n  return true;\n}\n\nconst Popover = Object.assign(PopoverComponent, {\n  Pane,\n  Section\n});\nexport { Popover };","map":{"version":3,"sources":["/Users/ayubmohamed/emwb/node_modules/@shopify/polaris/build/esm/components/Popover/Popover.js"],"names":["React","forwardRef","useState","useRef","useImperativeHandle","useCallback","useEffect","Children","findFirstFocusableNodeIncludingDisabled","focusNextFocusableNode","portal","setActivatorAttributes","Portal","PopoverOverlay","PopoverCloseSource","Pane","Section","useUniqueId","PopoverComponent","Popover","ref","activatorWrapper","children","onClose","activator","preventFocusOnClose","active","fixed","ariaHaspopup","preferInputActivator","colorScheme","zIndexOverride","rest","activatorNode","setActivatorNode","overlayRef","activatorContainer","WrapperComponent","id","forceUpdatePosition","_overlayRef$current","current","setAccessibilityAttributes","firstFocusable","focusableActivator","activatorDisabled","Boolean","disabled","handleClose","source","FocusOut","EscapeKeypress","isInPortal","focus","firstElementChild","contains","createElement","idPrefix","Object","assign","only","element","parentElement","matches","selector"],"mappings":"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","sourcesContent":["import React, { forwardRef, useState, useRef, useImperativeHandle, useCallback, useEffect, Children } from 'react';\nimport { findFirstFocusableNodeIncludingDisabled, focusNextFocusableNode } from '../../utilities/focus.js';\nimport { portal } from '../shared.js';\nimport { setActivatorAttributes } from './set-activator-attributes.js';\nimport { Portal } from '../Portal/Portal.js';\nimport { PopoverOverlay, PopoverCloseSource } from './components/PopoverOverlay/PopoverOverlay.js';\nexport { PopoverCloseSource } from './components/PopoverOverlay/PopoverOverlay.js';\nimport { Pane } from './components/Pane/Pane.js';\nimport { Section } from './components/Section/Section.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst PopoverComponent = /*#__PURE__*/forwardRef(function Popover({\n  activatorWrapper = 'div',\n  children,\n  onClose,\n  activator,\n  preventFocusOnClose,\n  active,\n  fixed,\n  ariaHaspopup,\n  preferInputActivator = true,\n  colorScheme,\n  zIndexOverride,\n  ...rest\n}, ref) {\n  const [activatorNode, setActivatorNode] = useState();\n  const overlayRef = useRef(null);\n  const activatorContainer = useRef(null);\n  const WrapperComponent = activatorWrapper;\n  const id = useUniqueId('popover');\n\n  function forceUpdatePosition() {\n    var _overlayRef$current;\n\n    (_overlayRef$current = overlayRef.current) === null || _overlayRef$current === void 0 ? void 0 : _overlayRef$current.forceUpdatePosition();\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      forceUpdatePosition\n    };\n  });\n  const setAccessibilityAttributes = useCallback(() => {\n    if (activatorContainer.current == null) {\n      return;\n    }\n\n    const firstFocusable = findFirstFocusableNodeIncludingDisabled(activatorContainer.current);\n    const focusableActivator = firstFocusable || activatorContainer.current;\n    const activatorDisabled = 'disabled' in focusableActivator && Boolean(focusableActivator.disabled);\n    setActivatorAttributes(focusableActivator, {\n      id,\n      active,\n      ariaHaspopup,\n      activatorDisabled\n    });\n  }, [id, active, ariaHaspopup]);\n\n  const handleClose = source => {\n    onClose(source);\n\n    if (activatorContainer.current == null || preventFocusOnClose) {\n      return;\n    }\n\n    if ((source === PopoverCloseSource.FocusOut || source === PopoverCloseSource.EscapeKeypress) && activatorNode) {\n      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;\n\n      if (!focusNextFocusableNode(focusableActivator, isInPortal)) {\n        focusableActivator.focus();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    } else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  useEffect(() => {\n    if (activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  const portal = activatorNode ? /*#__PURE__*/React.createElement(Portal, {\n    idPrefix: \"popover\"\n  }, /*#__PURE__*/React.createElement(PopoverOverlay, Object.assign({\n    ref: overlayRef,\n    id: id,\n    activator: activatorNode,\n    preferInputActivator: preferInputActivator,\n    onClose: handleClose,\n    active: active,\n    fixed: fixed,\n    colorScheme: colorScheme,\n    zIndexOverride: zIndexOverride\n  }, rest), children)) : null;\n  return /*#__PURE__*/React.createElement(WrapperComponent, {\n    ref: activatorContainer\n  }, Children.only(activator), portal);\n});\n\nfunction isInPortal(element) {\n  let parentElement = element.parentElement;\n\n  while (parentElement) {\n    if (parentElement.matches(portal.selector)) return false;\n    parentElement = parentElement.parentElement;\n  }\n\n  return true;\n}\n\nconst Popover = Object.assign(PopoverComponent, {\n  Pane,\n  Section\n});\n\nexport { Popover };\n"]},"metadata":{},"sourceType":"module"}